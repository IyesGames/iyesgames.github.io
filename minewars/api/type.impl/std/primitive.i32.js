(function() {var type_impls = {
"alsa_sys":[],
"khronos_egl":[],
"minewars":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Hash-for-i32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/hash/mod.rs.html#832-845\">source</a></span><a href=\"#impl-Hash-for-i32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"minewars/prelude/trait.Hash.html\" title=\"trait minewars::prelude::Hash\">Hash</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.75.0/src/core/hash/mod.rs.html#832-845\">source</a><a href=\"#method.hash\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"minewars/prelude/trait.Hash.html#tymethod.hash\" class=\"fn\">hash</a>&lt;H&gt;(&amp;self, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut H</a>)<span class=\"where fmt-newline\">where\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,</span></h4></section></summary><div class='docblock'>Feeds this value into the given <a href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"minewars/prelude/trait.Hash.html#tymethod.hash\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash_slice\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.75.0/src/core/hash/mod.rs.html#832-845\">source</a><a href=\"#method.hash_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"minewars/prelude/trait.Hash.html#method.hash_slice\" class=\"fn\">hash_slice</a>&lt;H&gt;(data: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a>], state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut H</a>)<span class=\"where fmt-newline\">where\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,</span></h4></section></summary><div class='docblock'>Feeds a slice of this type into the given <a href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"minewars/prelude/trait.Hash.html#method.hash_slice\">Read more</a></div></details></div></details>","Hash","minewars::prelude::tokio::net::unix::pid_t"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-i32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/fmt/num.rs.html#201-204\">source</a></span><a href=\"#impl-Debug-for-i32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"minewars/prelude/trait.Debug.html\" title=\"trait minewars::prelude::Debug\">Debug</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.75.0/src/core/fmt/num.rs.html#201-204\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"minewars/prelude/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"minewars/prelude/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","minewars::prelude::tokio::net::unix::pid_t"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Serialize-for-i32\" class=\"impl\"><a class=\"src rightside\" href=\"src/serde/ser/impls.rs.html#25\">source</a><a href=\"#impl-Serialize-for-i32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"minewars/prelude/trait.Serialize.html\" title=\"trait minewars::prelude::Serialize\">Serialize</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.serialize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/serde/ser/impls.rs.html#25\">source</a><a href=\"#method.serialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"minewars/prelude/trait.Serialize.html#tymethod.serialize\" class=\"fn\">serialize</a>&lt;S&gt;(\n    &amp;self,\n    serializer: S\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;S as <a class=\"trait\" href=\"serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"serde/ser/trait.Serializer.html#associatedtype.Ok\" title=\"type serde::ser::Serializer::Ok\">Ok</a>, &lt;S as <a class=\"trait\" href=\"serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"serde/ser/trait.Serializer.html#associatedtype.Error\" title=\"type serde::ser::Serializer::Error\">Error</a>&gt;<span class=\"where fmt-newline\">where\n    S: <a class=\"trait\" href=\"serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>,</span></h4></section></summary><div class='docblock'>Serialize this value into the given Serde serializer. <a href=\"minewars/prelude/trait.Serialize.html#tymethod.serialize\">Read more</a></div></details></div></details>","Serialize","minewars::prelude::tokio::net::unix::pid_t"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Deserialize%3C'de%3E-for-i32\" class=\"impl\"><a class=\"src rightside\" href=\"src/serde/de/impls.rs.html#315-321\">source</a><a href=\"#impl-Deserialize%3C'de%3E-for-i32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'de&gt; <a class=\"trait\" href=\"minewars/prelude/trait.Deserialize.html\" title=\"trait minewars::prelude::Deserialize\">Deserialize</a>&lt;'de&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.deserialize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/serde/de/impls.rs.html#315-321\">source</a><a href=\"#method.deserialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"minewars/prelude/trait.Deserialize.html#tymethod.deserialize\" class=\"fn\">deserialize</a>&lt;D&gt;(\n    deserializer: D\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a>, &lt;D as <a class=\"trait\" href=\"serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;&gt;::<a class=\"associatedtype\" href=\"serde/de/trait.Deserializer.html#associatedtype.Error\" title=\"type serde::de::Deserializer::Error\">Error</a>&gt;<span class=\"where fmt-newline\">where\n    D: <a class=\"trait\" href=\"serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;,</span></h4></section></summary><div class='docblock'>Deserialize this value from the given Serde deserializer. <a href=\"minewars/prelude/trait.Deserialize.html#tymethod.deserialize\">Read more</a></div></details></div></details>","Deserialize<'de>","minewars::prelude::tokio::net::unix::pid_t"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromReflect-for-i32\" class=\"impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/impls/std.rs.html#62\">source</a><a href=\"#impl-FromReflect-for-i32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"minewars/prelude/trait.FromReflect.html\" title=\"trait minewars::prelude::FromReflect\">FromReflect</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_reflect\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/impls/std.rs.html#62\">source</a><a href=\"#method.from_reflect\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"minewars/prelude/trait.FromReflect.html#tymethod.from_reflect\" class=\"fn\">from_reflect</a>(reflect: &amp;(dyn <a class=\"trait\" href=\"minewars/prelude/trait.Reflect.html\" title=\"trait minewars::prelude::Reflect\">Reflect</a> + 'static)) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a>&gt;</h4></section></summary><div class='docblock'>Constructs a concrete instance of <code>Self</code> from a reflected value.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take_from_reflect\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/from_reflect.rs.html#38\">source</a><a href=\"#method.take_from_reflect\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"minewars/prelude/trait.FromReflect.html#method.take_from_reflect\" class=\"fn\">take_from_reflect</a>(\n    reflect: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"minewars/prelude/trait.Reflect.html\" title=\"trait minewars::prelude::Reflect\">Reflect</a>&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"minewars/prelude/trait.Reflect.html\" title=\"trait minewars::prelude::Reflect\">Reflect</a>&gt;&gt;</h4></section></summary><div class='docblock'>Attempts to downcast the given value to <code>Self</code> using,\nconstructing the value using <a href=\"minewars/prelude/trait.FromReflect.html#tymethod.from_reflect\" title=\"associated function bevy_reflect::from_reflect::FromReflect::from_reflect::from_reflect\"><code>from_reflect</code></a> if that fails. <a href=\"minewars/prelude/trait.FromReflect.html#method.take_from_reflect\">Read more</a></div></details></div></details>","FromReflect","minewars::prelude::tokio::net::unix::pid_t"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Reflect-for-i32\" class=\"impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/impls/std.rs.html#62\">source</a><a href=\"#impl-Reflect-for-i32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"minewars/prelude/trait.Reflect.html\" title=\"trait minewars::prelude::Reflect\">Reflect</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.type_name\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/impls/std.rs.html#62\">source</a><a href=\"#method.type_name\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"minewars/prelude/trait.Reflect.html#tymethod.type_name\" class=\"fn\">type_name</a>(&amp;self) -&gt; &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.str.html\">str</a></h4></section></summary><div class='docblock'>Returns the <a href=\"https://doc.rust-lang.org/1.75.0/core/any/fn.type_name.html\" title=\"fn core::any::type_name\">type name</a> of the underlying type.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_represented_type_info\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/impls/std.rs.html#62\">source</a><a href=\"#method.get_represented_type_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"minewars/prelude/trait.Reflect.html#tymethod.get_represented_type_info\" class=\"fn\">get_represented_type_info</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;'static <a class=\"enum\" href=\"bevy_reflect/type_info/enum.TypeInfo.html\" title=\"enum bevy_reflect::type_info::TypeInfo\">TypeInfo</a>&gt;</h4></section></summary><div class='docblock'>Returns the <a href=\"bevy_reflect/type_info/enum.TypeInfo.html\" title=\"enum bevy_reflect::type_info::TypeInfo\"><code>TypeInfo</code></a> of the type <em>represented</em> by this value. <a href=\"minewars/prelude/trait.Reflect.html#tymethod.get_represented_type_info\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_any\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/impls/std.rs.html#62\">source</a><a href=\"#method.into_any\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"minewars/prelude/trait.Reflect.html#tymethod.into_any\" class=\"fn\">into_any</a>(self: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a>&gt;) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/any/trait.Any.html\" title=\"trait core::any::Any\">Any</a>&gt;</h4></section></summary><div class='docblock'>Returns the value as a <a href=\"https://doc.rust-lang.org/1.75.0/core/any/trait.Any.html\" title=\"trait core::any::Any\"><code>Box&lt;dyn Any&gt;</code></a>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_any\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/impls/std.rs.html#62\">source</a><a href=\"#method.as_any\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"minewars/prelude/trait.Reflect.html#tymethod.as_any\" class=\"fn\">as_any</a>(&amp;self) -&gt; &amp;(dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/any/trait.Any.html\" title=\"trait core::any::Any\">Any</a> + 'static)</h4></section></summary><div class='docblock'>Returns the value as a <a href=\"https://doc.rust-lang.org/1.75.0/core/any/trait.Any.html\" title=\"trait core::any::Any\"><code>&amp;dyn Any</code></a>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_any_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/impls/std.rs.html#62\">source</a><a href=\"#method.as_any_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"minewars/prelude/trait.Reflect.html#tymethod.as_any_mut\" class=\"fn\">as_any_mut</a>(&amp;mut self) -&gt; &amp;mut (dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/any/trait.Any.html\" title=\"trait core::any::Any\">Any</a> + 'static)</h4></section></summary><div class='docblock'>Returns the value as a <a href=\"https://doc.rust-lang.org/1.75.0/core/any/trait.Any.html\" title=\"trait core::any::Any\"><code>&amp;mut dyn Any</code></a>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_reflect\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/impls/std.rs.html#62\">source</a><a href=\"#method.into_reflect\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"minewars/prelude/trait.Reflect.html#tymethod.into_reflect\" class=\"fn\">into_reflect</a>(self: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a>&gt;) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"minewars/prelude/trait.Reflect.html\" title=\"trait minewars::prelude::Reflect\">Reflect</a>&gt;</h4></section></summary><div class='docblock'>Casts this type to a boxed reflected value.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_reflect\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/impls/std.rs.html#62\">source</a><a href=\"#method.as_reflect\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"minewars/prelude/trait.Reflect.html#tymethod.as_reflect\" class=\"fn\">as_reflect</a>(&amp;self) -&gt; &amp;(dyn <a class=\"trait\" href=\"minewars/prelude/trait.Reflect.html\" title=\"trait minewars::prelude::Reflect\">Reflect</a> + 'static)</h4></section></summary><div class='docblock'>Casts this type to a reflected value.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_reflect_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/impls/std.rs.html#62\">source</a><a href=\"#method.as_reflect_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"minewars/prelude/trait.Reflect.html#tymethod.as_reflect_mut\" class=\"fn\">as_reflect_mut</a>(&amp;mut self) -&gt; &amp;mut (dyn <a class=\"trait\" href=\"minewars/prelude/trait.Reflect.html\" title=\"trait minewars::prelude::Reflect\">Reflect</a> + 'static)</h4></section></summary><div class='docblock'>Casts this type to a mutable reflected value.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_value\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/impls/std.rs.html#62\">source</a><a href=\"#method.clone_value\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"minewars/prelude/trait.Reflect.html#tymethod.clone_value\" class=\"fn\">clone_value</a>(&amp;self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"minewars/prelude/trait.Reflect.html\" title=\"trait minewars::prelude::Reflect\">Reflect</a>&gt;</h4></section></summary><div class='docblock'>Clones the value as a <code>Reflect</code> trait object. <a href=\"minewars/prelude/trait.Reflect.html#tymethod.clone_value\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.apply\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/impls/std.rs.html#62\">source</a><a href=\"#method.apply\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"minewars/prelude/trait.Reflect.html#tymethod.apply\" class=\"fn\">apply</a>(&amp;mut self, value: &amp;(dyn <a class=\"trait\" href=\"minewars/prelude/trait.Reflect.html\" title=\"trait minewars::prelude::Reflect\">Reflect</a> + 'static))</h4></section></summary><div class='docblock'>Applies a reflected value to this value. <a href=\"minewars/prelude/trait.Reflect.html#tymethod.apply\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/impls/std.rs.html#62\">source</a><a href=\"#method.set\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"minewars/prelude/trait.Reflect.html#tymethod.set\" class=\"fn\">set</a>(&amp;mut self, value: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"minewars/prelude/trait.Reflect.html\" title=\"trait minewars::prelude::Reflect\">Reflect</a>&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"minewars/prelude/trait.Reflect.html\" title=\"trait minewars::prelude::Reflect\">Reflect</a>&gt;&gt;</h4></section></summary><div class='docblock'>Performs a type-checked assignment of a reflected value to this value. <a href=\"minewars/prelude/trait.Reflect.html#tymethod.set\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.reflect_ref\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/impls/std.rs.html#62\">source</a><a href=\"#method.reflect_ref\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"minewars/prelude/trait.Reflect.html#tymethod.reflect_ref\" class=\"fn\">reflect_ref</a>(&amp;self) -&gt; <a class=\"enum\" href=\"bevy_reflect/reflect/enum.ReflectRef.html\" title=\"enum bevy_reflect::reflect::ReflectRef\">ReflectRef</a>&lt;'_&gt;</h4></section></summary><div class='docblock'>Returns an enumeration of “kinds” of type. <a href=\"minewars/prelude/trait.Reflect.html#tymethod.reflect_ref\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.reflect_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/impls/std.rs.html#62\">source</a><a href=\"#method.reflect_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"minewars/prelude/trait.Reflect.html#tymethod.reflect_mut\" class=\"fn\">reflect_mut</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"bevy_reflect/reflect/enum.ReflectMut.html\" title=\"enum bevy_reflect::reflect::ReflectMut\">ReflectMut</a>&lt;'_&gt;</h4></section></summary><div class='docblock'>Returns a mutable enumeration of “kinds” of type. <a href=\"minewars/prelude/trait.Reflect.html#tymethod.reflect_mut\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.reflect_owned\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/impls/std.rs.html#62\">source</a><a href=\"#method.reflect_owned\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"minewars/prelude/trait.Reflect.html#tymethod.reflect_owned\" class=\"fn\">reflect_owned</a>(self: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a>&gt;) -&gt; <a class=\"enum\" href=\"bevy_reflect/reflect/enum.ReflectOwned.html\" title=\"enum bevy_reflect::reflect::ReflectOwned\">ReflectOwned</a></h4></section></summary><div class='docblock'>Returns an owned enumeration of “kinds” of type. <a href=\"minewars/prelude/trait.Reflect.html#tymethod.reflect_owned\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.reflect_hash\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/impls/std.rs.html#62\">source</a><a href=\"#method.reflect_hash\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"minewars/prelude/trait.Reflect.html#method.reflect_hash\" class=\"fn\">reflect_hash</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u64.html\">u64</a>&gt;</h4></section></summary><div class='docblock'>Returns a hash of the value (which includes the type). <a href=\"minewars/prelude/trait.Reflect.html#method.reflect_hash\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.reflect_partial_eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/impls/std.rs.html#62\">source</a><a href=\"#method.reflect_partial_eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"minewars/prelude/trait.Reflect.html#method.reflect_partial_eq\" class=\"fn\">reflect_partial_eq</a>(&amp;self, value: &amp;(dyn <a class=\"trait\" href=\"minewars/prelude/trait.Reflect.html\" title=\"trait minewars::prelude::Reflect\">Reflect</a> + 'static)) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a>&gt;</h4></section></summary><div class='docblock'>Returns a “partial equality” comparison result. <a href=\"minewars/prelude/trait.Reflect.html#method.reflect_partial_eq\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.debug\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/impls/std.rs.html#62\">source</a><a href=\"#method.debug\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"minewars/prelude/trait.Reflect.html#method.debug\" class=\"fn\">debug</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Debug formatter for the value. <a href=\"minewars/prelude/trait.Reflect.html#method.debug\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.serializable\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/reflect.rs.html#223\">source</a><a href=\"#method.serializable\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"minewars/prelude/trait.Reflect.html#method.serializable\" class=\"fn\">serializable</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"bevy_reflect/serde/ser/enum.Serializable.html\" title=\"enum bevy_reflect::serde::ser::Serializable\">Serializable</a>&lt;'_&gt;&gt;</h4></section></summary><div class='docblock'>Returns a serializable version of the value. <a href=\"minewars/prelude/trait.Reflect.html#method.serializable\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_dynamic\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/reflect.rs.html#239\">source</a><a href=\"#method.is_dynamic\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"minewars/prelude/trait.Reflect.html#method.is_dynamic\" class=\"fn\">is_dynamic</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Indicates whether or not this type is a <em>dynamic</em> type. <a href=\"minewars/prelude/trait.Reflect.html#method.is_dynamic\">Read more</a></div></details></div></details>","Reflect","minewars::prelude::tokio::net::unix::pid_t"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OverflowingSub-for-i32\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_traits/ops/overflowing.rs.html#53\">source</a><a href=\"#impl-OverflowingSub-for-i32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"minewars/prelude/num_traits/ops/overflowing/trait.OverflowingSub.html\" title=\"trait minewars::prelude::num_traits::ops::overflowing::OverflowingSub\">OverflowingSub</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_sub\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/ops/overflowing.rs.html#53\">source</a><a href=\"#method.overflowing_sub\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"minewars/prelude/num_traits/ops/overflowing/trait.OverflowingSub.html#tymethod.overflowing_sub\" class=\"fn\">overflowing_sub</a>(&amp;self, v: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a>) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class='docblock'>Returns a tuple of the difference along with a boolean indicating whether an arithmetic overflow would occur.\nIf an overflow would have occurred then the wrapped value is returned.</div></details></div></details>","OverflowingSub","minewars::prelude::tokio::net::unix::pid_t"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Zero-for-i32\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_traits/identities.rs.html#56\">source</a><a href=\"#impl-Zero-for-i32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"minewars/prelude/num/trait.Zero.html\" title=\"trait minewars::prelude::num::Zero\">Zero</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.zero\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/identities.rs.html#56\">source</a><a href=\"#method.zero\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"minewars/prelude/num/trait.Zero.html#tymethod.zero\" class=\"fn\">zero</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h4></section></summary><div class='docblock'>Returns the additive identity element of <code>Self</code>, <code>0</code>. <a href=\"minewars/prelude/num/trait.Zero.html#tymethod.zero\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_zero\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/identities.rs.html#56\">source</a><a href=\"#method.is_zero\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"minewars/prelude/num/trait.Zero.html#tymethod.is_zero\" class=\"fn\">is_zero</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Returns <code>true</code> if <code>self</code> is equal to the additive identity.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_zero\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/identities.rs.html#23\">source</a><a href=\"#method.set_zero\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"minewars/prelude/num/trait.Zero.html#method.set_zero\" class=\"fn\">set_zero</a>(&amp;mut self)</h4></section></summary><div class='docblock'>Sets <code>self</code> to the additive identity element of <code>Self</code>, <code>0</code>.</div></details></div></details>","Zero","minewars::prelude::tokio::net::unix::pid_t"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-NumCast-for-i32\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#699\">source</a><a href=\"#impl-NumCast-for-i32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"minewars/prelude/num/trait.NumCast.html\" title=\"trait minewars::prelude::num::NumCast\">NumCast</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#699\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"minewars/prelude/num/trait.NumCast.html#tymethod.from\" class=\"fn\">from</a>&lt;N&gt;(n: N) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a>&gt;<span class=\"where fmt-newline\">where\n    N: <a class=\"trait\" href=\"minewars/prelude/trait.ToPrimitive.html\" title=\"trait minewars::prelude::ToPrimitive\">ToPrimitive</a>,</span></h4></section></summary><div class='docblock'>Creates a number from another value that can be converted into\na primitive via the <code>ToPrimitive</code> trait. If the source value cannot be\nrepresented by the target type, then <code>None</code> is returned. <a href=\"minewars/prelude/num/trait.NumCast.html#tymethod.from\">Read more</a></div></details></div></details>","NumCast","minewars::prelude::tokio::net::unix::pid_t"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedNeg-for-i32\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_traits/ops/checked.rs.html#181\">source</a><a href=\"#impl-CheckedNeg-for-i32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"minewars/prelude/num/traits/trait.CheckedNeg.html\" title=\"trait minewars::prelude::num::traits::CheckedNeg\">CheckedNeg</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_neg\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/ops/checked.rs.html#181\">source</a><a href=\"#method.checked_neg\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"minewars/prelude/num/traits/trait.CheckedNeg.html#tymethod.checked_neg\" class=\"fn\">checked_neg</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a>&gt;</h4></section></summary><div class='docblock'>Negates a number, returning <code>None</code> for results that can’t be represented, like signed <code>MIN</code>\nvalues that can’t be positive, or non-zero unsigned values that can’t be negative. <a href=\"minewars/prelude/num/traits/trait.CheckedNeg.html#tymethod.checked_neg\">Read more</a></div></details></div></details>","CheckedNeg","minewars::prelude::tokio::net::unix::pid_t"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedRem-for-i32\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_traits/ops/checked.rs.html#135\">source</a><a href=\"#impl-CheckedRem-for-i32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"minewars/prelude/num/traits/trait.CheckedRem.html\" title=\"trait minewars::prelude::num::traits::CheckedRem\">CheckedRem</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_rem\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/ops/checked.rs.html#135\">source</a><a href=\"#method.checked_rem\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"minewars/prelude/num/traits/trait.CheckedRem.html#tymethod.checked_rem\" class=\"fn\">checked_rem</a>(&amp;self, v: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a>&gt;</h4></section></summary><div class='docblock'>Finds the remainder of dividing two numbers, checking for underflow, overflow and division\nby zero. If any of that happens, <code>None</code> is returned. <a href=\"minewars/prelude/num/traits/trait.CheckedRem.html#tymethod.checked_rem\">Read more</a></div></details></div></details>","CheckedRem","minewars::prelude::tokio::net::unix::pid_t"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WrappingNeg-for-i32\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_traits/ops/wrapping.rs.html#127\">source</a><a href=\"#impl-WrappingNeg-for-i32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"minewars/prelude/num/traits/trait.WrappingNeg.html\" title=\"trait minewars::prelude::num::traits::WrappingNeg\">WrappingNeg</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_neg\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/ops/wrapping.rs.html#127\">source</a><a href=\"#method.wrapping_neg\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"minewars/prelude/num/traits/trait.WrappingNeg.html#tymethod.wrapping_neg\" class=\"fn\">wrapping_neg</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h4></section></summary><div class='docblock'>Wrapping (modular) negation. Computes <code>-self</code>,\nwrapping around at the boundary of the type. <a href=\"minewars/prelude/num/traits/trait.WrappingNeg.html#tymethod.wrapping_neg\">Read more</a></div></details></div></details>","WrappingNeg","minewars::prelude::tokio::net::unix::pid_t"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PrimInt-for-i32\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_traits/int.rs.html#507\">source</a><a href=\"#impl-PrimInt-for-i32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"minewars/prelude/num/trait.PrimInt.html\" title=\"trait minewars::prelude::num::PrimInt\">PrimInt</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.count_ones\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/int.rs.html#507\">source</a><a href=\"#method.count_ones\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"minewars/prelude/num/trait.PrimInt.html#tymethod.count_ones\" class=\"fn\">count_ones</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Returns the number of ones in the binary representation of <code>self</code>. <a href=\"minewars/prelude/num/trait.PrimInt.html#tymethod.count_ones\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.count_zeros\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/int.rs.html#507\">source</a><a href=\"#method.count_zeros\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"minewars/prelude/num/trait.PrimInt.html#tymethod.count_zeros\" class=\"fn\">count_zeros</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Returns the number of zeros in the binary representation of <code>self</code>. <a href=\"minewars/prelude/num/trait.PrimInt.html#tymethod.count_zeros\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.leading_ones\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/int.rs.html#507\">source</a><a href=\"#method.leading_ones\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"minewars/prelude/num/trait.PrimInt.html#method.leading_ones\" class=\"fn\">leading_ones</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Returns the number of leading ones in the binary representation\nof <code>self</code>. <a href=\"minewars/prelude/num/trait.PrimInt.html#method.leading_ones\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.leading_zeros\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/int.rs.html#507\">source</a><a href=\"#method.leading_zeros\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"minewars/prelude/num/trait.PrimInt.html#tymethod.leading_zeros\" class=\"fn\">leading_zeros</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Returns the number of leading zeros in the binary representation\nof <code>self</code>. <a href=\"minewars/prelude/num/trait.PrimInt.html#tymethod.leading_zeros\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.trailing_ones\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/int.rs.html#507\">source</a><a href=\"#method.trailing_ones\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"minewars/prelude/num/trait.PrimInt.html#method.trailing_ones\" class=\"fn\">trailing_ones</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Returns the number of trailing ones in the binary representation\nof <code>self</code>. <a href=\"minewars/prelude/num/trait.PrimInt.html#method.trailing_ones\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.trailing_zeros\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/int.rs.html#507\">source</a><a href=\"#method.trailing_zeros\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"minewars/prelude/num/trait.PrimInt.html#tymethod.trailing_zeros\" class=\"fn\">trailing_zeros</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Returns the number of trailing zeros in the binary representation\nof <code>self</code>. <a href=\"minewars/prelude/num/trait.PrimInt.html#tymethod.trailing_zeros\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.rotate_left\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/int.rs.html#507\">source</a><a href=\"#method.rotate_left\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"minewars/prelude/num/trait.PrimInt.html#tymethod.rotate_left\" class=\"fn\">rotate_left</a>(self, n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h4></section></summary><div class='docblock'>Shifts the bits to the left by a specified amount, <code>n</code>, wrapping\nthe truncated bits to the end of the resulting integer. <a href=\"minewars/prelude/num/trait.PrimInt.html#tymethod.rotate_left\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.rotate_right\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/int.rs.html#507\">source</a><a href=\"#method.rotate_right\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"minewars/prelude/num/trait.PrimInt.html#tymethod.rotate_right\" class=\"fn\">rotate_right</a>(self, n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h4></section></summary><div class='docblock'>Shifts the bits to the right by a specified amount, <code>n</code>, wrapping\nthe truncated bits to the beginning of the resulting integer. <a href=\"minewars/prelude/num/trait.PrimInt.html#tymethod.rotate_right\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.signed_shl\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/int.rs.html#507\">source</a><a href=\"#method.signed_shl\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"minewars/prelude/num/trait.PrimInt.html#tymethod.signed_shl\" class=\"fn\">signed_shl</a>(self, n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h4></section></summary><div class='docblock'>Shifts the bits to the left by a specified amount, <code>n</code>, filling\nzeros in the least significant bits. <a href=\"minewars/prelude/num/trait.PrimInt.html#tymethod.signed_shl\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.signed_shr\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/int.rs.html#507\">source</a><a href=\"#method.signed_shr\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"minewars/prelude/num/trait.PrimInt.html#tymethod.signed_shr\" class=\"fn\">signed_shr</a>(self, n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h4></section></summary><div class='docblock'>Shifts the bits to the right by a specified amount, <code>n</code>, copying\nthe “sign bit” in the most significant bits even for unsigned types. <a href=\"minewars/prelude/num/trait.PrimInt.html#tymethod.signed_shr\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unsigned_shl\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/int.rs.html#507\">source</a><a href=\"#method.unsigned_shl\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"minewars/prelude/num/trait.PrimInt.html#tymethod.unsigned_shl\" class=\"fn\">unsigned_shl</a>(self, n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h4></section></summary><div class='docblock'>Shifts the bits to the left by a specified amount, <code>n</code>, filling\nzeros in the least significant bits. <a href=\"minewars/prelude/num/trait.PrimInt.html#tymethod.unsigned_shl\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unsigned_shr\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/int.rs.html#507\">source</a><a href=\"#method.unsigned_shr\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"minewars/prelude/num/trait.PrimInt.html#tymethod.unsigned_shr\" class=\"fn\">unsigned_shr</a>(self, n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h4></section></summary><div class='docblock'>Shifts the bits to the right by a specified amount, <code>n</code>, filling\nzeros in the most significant bits. <a href=\"minewars/prelude/num/trait.PrimInt.html#tymethod.unsigned_shr\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.swap_bytes\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/int.rs.html#507\">source</a><a href=\"#method.swap_bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"minewars/prelude/num/trait.PrimInt.html#tymethod.swap_bytes\" class=\"fn\">swap_bytes</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h4></section></summary><div class='docblock'>Reverses the byte order of the integer. <a href=\"minewars/prelude/num/trait.PrimInt.html#tymethod.swap_bytes\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.reverse_bits\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/int.rs.html#507\">source</a><a href=\"#method.reverse_bits\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"minewars/prelude/num/trait.PrimInt.html#method.reverse_bits\" class=\"fn\">reverse_bits</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h4></section></summary><div class='docblock'>Reverses the order of bits in the integer. <a href=\"minewars/prelude/num/trait.PrimInt.html#method.reverse_bits\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_be\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/int.rs.html#507\">source</a><a href=\"#method.from_be\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"minewars/prelude/num/trait.PrimInt.html#tymethod.from_be\" class=\"fn\">from_be</a>(x: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h4></section></summary><div class='docblock'>Convert an integer from big endian to the target’s endianness. <a href=\"minewars/prelude/num/trait.PrimInt.html#tymethod.from_be\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_le\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/int.rs.html#507\">source</a><a href=\"#method.from_le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"minewars/prelude/num/trait.PrimInt.html#tymethod.from_le\" class=\"fn\">from_le</a>(x: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h4></section></summary><div class='docblock'>Convert an integer from little endian to the target’s endianness. <a href=\"minewars/prelude/num/trait.PrimInt.html#tymethod.from_le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_be\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/int.rs.html#507\">source</a><a href=\"#method.to_be\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"minewars/prelude/num/trait.PrimInt.html#tymethod.to_be\" class=\"fn\">to_be</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h4></section></summary><div class='docblock'>Convert <code>self</code> to big endian from the target’s endianness. <a href=\"minewars/prelude/num/trait.PrimInt.html#tymethod.to_be\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_le\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/int.rs.html#507\">source</a><a href=\"#method.to_le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"minewars/prelude/num/trait.PrimInt.html#tymethod.to_le\" class=\"fn\">to_le</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h4></section></summary><div class='docblock'>Convert <code>self</code> to little endian from the target’s endianness. <a href=\"minewars/prelude/num/trait.PrimInt.html#tymethod.to_le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.pow\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/int.rs.html#507\">source</a><a href=\"#method.pow\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"minewars/prelude/num/trait.PrimInt.html#tymethod.pow\" class=\"fn\">pow</a>(self, exp: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h4></section></summary><div class='docblock'>Raises self to the power of <code>exp</code>, using exponentiation by squaring. <a href=\"minewars/prelude/num/trait.PrimInt.html#tymethod.pow\">Read more</a></div></details></div></details>","PrimInt","minewars::prelude::tokio::net::unix::pid_t"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WrappingMul-for-i32\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_traits/ops/wrapping.rs.html#81\">source</a><a href=\"#impl-WrappingMul-for-i32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"minewars/prelude/num/traits/trait.WrappingMul.html\" title=\"trait minewars::prelude::num::traits::WrappingMul\">WrappingMul</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_mul\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/ops/wrapping.rs.html#81\">source</a><a href=\"#method.wrapping_mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"minewars/prelude/num/traits/trait.WrappingMul.html#tymethod.wrapping_mul\" class=\"fn\">wrapping_mul</a>(&amp;self, v: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h4></section></summary><div class='docblock'>Wrapping (modular) multiplication. Computes <code>self * other</code>, wrapping around at the boundary\nof the type.</div></details></div></details>","WrappingMul","minewars::prelude::tokio::net::unix::pid_t"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedSub-for-i32\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_traits/ops/checked.rs.html#52\">source</a><a href=\"#impl-CheckedSub-for-i32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"minewars/prelude/num/trait.CheckedSub.html\" title=\"trait minewars::prelude::num::CheckedSub\">CheckedSub</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_sub\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/ops/checked.rs.html#52\">source</a><a href=\"#method.checked_sub\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"minewars/prelude/num/trait.CheckedSub.html#tymethod.checked_sub\" class=\"fn\">checked_sub</a>(&amp;self, v: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a>&gt;</h4></section></summary><div class='docblock'>Subtracts two numbers, checking for underflow. If underflow happens,\n<code>None</code> is returned.</div></details></div></details>","CheckedSub","minewars::prelude::tokio::net::unix::pid_t"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedAdd-for-i32\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_traits/ops/checked.rs.html#31\">source</a><a href=\"#impl-CheckedAdd-for-i32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"minewars/prelude/num/trait.CheckedAdd.html\" title=\"trait minewars::prelude::num::CheckedAdd\">CheckedAdd</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_add\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/ops/checked.rs.html#31\">source</a><a href=\"#method.checked_add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"minewars/prelude/num/trait.CheckedAdd.html#tymethod.checked_add\" class=\"fn\">checked_add</a>(&amp;self, v: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a>&gt;</h4></section></summary><div class='docblock'>Adds two numbers, checking for overflow. If overflow happens, <code>None</code> is\nreturned.</div></details></div></details>","CheckedAdd","minewars::prelude::tokio::net::unix::pid_t"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SaturatingSub-for-i32\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_traits/ops/saturating.rs.html#82\">source</a><a href=\"#impl-SaturatingSub-for-i32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"minewars/prelude/num/traits/trait.SaturatingSub.html\" title=\"trait minewars::prelude::num::traits::SaturatingSub\">SaturatingSub</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_sub\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/ops/saturating.rs.html#82\">source</a><a href=\"#method.saturating_sub\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"minewars/prelude/num/traits/trait.SaturatingSub.html#tymethod.saturating_sub\" class=\"fn\">saturating_sub</a>(&amp;self, v: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h4></section></summary><div class='docblock'>Saturating subtraction. Computes <code>self - other</code>, saturating at the relevant high or low boundary of\nthe type.</div></details></div></details>","SaturatingSub","minewars::prelude::tokio::net::unix::pid_t"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Signed-for-i32\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_traits/sign.rs.html#75\">source</a><a href=\"#impl-Signed-for-i32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"minewars/prelude/num/trait.Signed.html\" title=\"trait minewars::prelude::num::Signed\">Signed</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.abs\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/sign.rs.html#75\">source</a><a href=\"#method.abs\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"minewars/prelude/num/trait.Signed.html#tymethod.abs\" class=\"fn\">abs</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h4></section></summary><div class='docblock'>Computes the absolute value. <a href=\"minewars/prelude/num/trait.Signed.html#tymethod.abs\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.abs_sub\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/sign.rs.html#75\">source</a><a href=\"#method.abs_sub\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"minewars/prelude/num/trait.Signed.html#tymethod.abs_sub\" class=\"fn\">abs_sub</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h4></section></summary><div class='docblock'>The positive difference of two numbers. <a href=\"minewars/prelude/num/trait.Signed.html#tymethod.abs_sub\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.signum\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/sign.rs.html#75\">source</a><a href=\"#method.signum\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"minewars/prelude/num/trait.Signed.html#tymethod.signum\" class=\"fn\">signum</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h4></section></summary><div class='docblock'>Returns the sign of the number. <a href=\"minewars/prelude/num/trait.Signed.html#tymethod.signum\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_positive\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/sign.rs.html#75\">source</a><a href=\"#method.is_positive\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"minewars/prelude/num/trait.Signed.html#tymethod.is_positive\" class=\"fn\">is_positive</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Returns true if the number is positive and false if the number is zero or negative.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_negative\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/sign.rs.html#75\">source</a><a href=\"#method.is_negative\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"minewars/prelude/num/trait.Signed.html#tymethod.is_negative\" class=\"fn\">is_negative</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Returns true if the number is negative and false if the number is zero or positive.</div></details></div></details>","Signed","minewars::prelude::tokio::net::unix::pid_t"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ToBytes-for-i32\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_traits/ops/bytes.rs.html#333\">source</a><a href=\"#impl-ToBytes-for-i32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"minewars/prelude/num/traits/trait.ToBytes.html\" title=\"trait minewars::prelude::num::traits::ToBytes\">ToBytes</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Bytes\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"minewars/prelude/num/traits/trait.ToBytes.html#associatedtype.Bytes\" class=\"associatedtype\">Bytes</a> = [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">4</a>]</h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_be_bytes\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/ops/bytes.rs.html#333\">source</a><a href=\"#method.to_be_bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"minewars/prelude/num/traits/trait.ToBytes.html#tymethod.to_be_bytes\" class=\"fn\">to_be_bytes</a>(&amp;self) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a> as <a class=\"trait\" href=\"minewars/prelude/num/traits/trait.ToBytes.html\" title=\"trait minewars::prelude::num::traits::ToBytes\">ToBytes</a>&gt;::<a class=\"associatedtype\" href=\"minewars/prelude/num/traits/trait.ToBytes.html#associatedtype.Bytes\" title=\"type minewars::prelude::num::traits::ToBytes::Bytes\">Bytes</a></h4></section></summary><div class='docblock'>Return the memory representation of this number as a byte array in big-endian byte order. <a href=\"minewars/prelude/num/traits/trait.ToBytes.html#tymethod.to_be_bytes\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_le_bytes\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/ops/bytes.rs.html#333\">source</a><a href=\"#method.to_le_bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"minewars/prelude/num/traits/trait.ToBytes.html#tymethod.to_le_bytes\" class=\"fn\">to_le_bytes</a>(&amp;self) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a> as <a class=\"trait\" href=\"minewars/prelude/num/traits/trait.ToBytes.html\" title=\"trait minewars::prelude::num::traits::ToBytes\">ToBytes</a>&gt;::<a class=\"associatedtype\" href=\"minewars/prelude/num/traits/trait.ToBytes.html#associatedtype.Bytes\" title=\"type minewars::prelude::num::traits::ToBytes::Bytes\">Bytes</a></h4></section></summary><div class='docblock'>Return the memory representation of this number as a byte array in little-endian byte order. <a href=\"minewars/prelude/num/traits/trait.ToBytes.html#tymethod.to_le_bytes\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_ne_bytes\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/ops/bytes.rs.html#333\">source</a><a href=\"#method.to_ne_bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"minewars/prelude/num/traits/trait.ToBytes.html#method.to_ne_bytes\" class=\"fn\">to_ne_bytes</a>(&amp;self) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a> as <a class=\"trait\" href=\"minewars/prelude/num/traits/trait.ToBytes.html\" title=\"trait minewars::prelude::num::traits::ToBytes\">ToBytes</a>&gt;::<a class=\"associatedtype\" href=\"minewars/prelude/num/traits/trait.ToBytes.html#associatedtype.Bytes\" title=\"type minewars::prelude::num::traits::ToBytes::Bytes\">Bytes</a></h4></section></summary><div class='docblock'>Return the memory representation of this number as a byte array in native byte order. <a href=\"minewars/prelude/num/traits/trait.ToBytes.html#method.to_ne_bytes\">Read more</a></div></details></div></details>","ToBytes","minewars::prelude::tokio::net::unix::pid_t"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ToPrimitive-for-i32\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#195\">source</a><a href=\"#impl-ToPrimitive-for-i32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"minewars/prelude/trait.ToPrimitive.html\" title=\"trait minewars::prelude::ToPrimitive\">ToPrimitive</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_isize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#195\">source</a><a href=\"#method.to_isize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"minewars/prelude/trait.ToPrimitive.html#method.to_isize\" class=\"fn\">to_isize</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.isize.html\">isize</a>&gt;</h4></section></summary><div class='docblock'>Converts the value of <code>self</code> to an <code>isize</code>. If the value cannot be\nrepresented by an <code>isize</code>, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_i8\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#195\">source</a><a href=\"#method.to_i8\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"minewars/prelude/trait.ToPrimitive.html#method.to_i8\" class=\"fn\">to_i8</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i8.html\">i8</a>&gt;</h4></section></summary><div class='docblock'>Converts the value of <code>self</code> to an <code>i8</code>. If the value cannot be\nrepresented by an <code>i8</code>, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_i16\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#195\">source</a><a href=\"#method.to_i16\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"minewars/prelude/trait.ToPrimitive.html#method.to_i16\" class=\"fn\">to_i16</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i16.html\">i16</a>&gt;</h4></section></summary><div class='docblock'>Converts the value of <code>self</code> to an <code>i16</code>. If the value cannot be\nrepresented by an <code>i16</code>, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_i32\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#195\">source</a><a href=\"#method.to_i32\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"minewars/prelude/trait.ToPrimitive.html#method.to_i32\" class=\"fn\">to_i32</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a>&gt;</h4></section></summary><div class='docblock'>Converts the value of <code>self</code> to an <code>i32</code>. If the value cannot be\nrepresented by an <code>i32</code>, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_i64\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#195\">source</a><a href=\"#method.to_i64\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"minewars/prelude/trait.ToPrimitive.html#tymethod.to_i64\" class=\"fn\">to_i64</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i64.html\">i64</a>&gt;</h4></section></summary><div class='docblock'>Converts the value of <code>self</code> to an <code>i64</code>. If the value cannot be\nrepresented by an <code>i64</code>, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_i128\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#195\">source</a><a href=\"#method.to_i128\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"minewars/prelude/trait.ToPrimitive.html#method.to_i128\" class=\"fn\">to_i128</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i128.html\">i128</a>&gt;</h4></section></summary><div class='docblock'>Converts the value of <code>self</code> to an <code>i128</code>. If the value cannot be\nrepresented by an <code>i128</code> (<code>i64</code> under the default implementation), then\n<code>None</code> is returned. <a href=\"minewars/prelude/trait.ToPrimitive.html#method.to_i128\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_usize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#195\">source</a><a href=\"#method.to_usize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"minewars/prelude/trait.ToPrimitive.html#method.to_usize\" class=\"fn\">to_usize</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a>&gt;</h4></section></summary><div class='docblock'>Converts the value of <code>self</code> to a <code>usize</code>. If the value cannot be\nrepresented by a <code>usize</code>, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_u8\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#195\">source</a><a href=\"#method.to_u8\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"minewars/prelude/trait.ToPrimitive.html#method.to_u8\" class=\"fn\">to_u8</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>&gt;</h4></section></summary><div class='docblock'>Converts the value of <code>self</code> to a <code>u8</code>. If the value cannot be\nrepresented by a <code>u8</code>, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_u16\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#195\">source</a><a href=\"#method.to_u16\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"minewars/prelude/trait.ToPrimitive.html#method.to_u16\" class=\"fn\">to_u16</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u16.html\">u16</a>&gt;</h4></section></summary><div class='docblock'>Converts the value of <code>self</code> to a <code>u16</code>. If the value cannot be\nrepresented by a <code>u16</code>, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_u32\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#195\">source</a><a href=\"#method.to_u32\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"minewars/prelude/trait.ToPrimitive.html#method.to_u32\" class=\"fn\">to_u32</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class='docblock'>Converts the value of <code>self</code> to a <code>u32</code>. If the value cannot be\nrepresented by a <code>u32</code>, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_u64\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#195\">source</a><a href=\"#method.to_u64\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"minewars/prelude/trait.ToPrimitive.html#tymethod.to_u64\" class=\"fn\">to_u64</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u64.html\">u64</a>&gt;</h4></section></summary><div class='docblock'>Converts the value of <code>self</code> to a <code>u64</code>. If the value cannot be\nrepresented by a <code>u64</code>, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_u128\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#195\">source</a><a href=\"#method.to_u128\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"minewars/prelude/trait.ToPrimitive.html#method.to_u128\" class=\"fn\">to_u128</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u128.html\">u128</a>&gt;</h4></section></summary><div class='docblock'>Converts the value of <code>self</code> to a <code>u128</code>. If the value cannot be\nrepresented by a <code>u128</code> (<code>u64</code> under the default implementation), then\n<code>None</code> is returned. <a href=\"minewars/prelude/trait.ToPrimitive.html#method.to_u128\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_f32\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#195\">source</a><a href=\"#method.to_f32\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"minewars/prelude/trait.ToPrimitive.html#method.to_f32\" class=\"fn\">to_f32</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.f32.html\">f32</a>&gt;</h4></section></summary><div class='docblock'>Converts the value of <code>self</code> to an <code>f32</code>. Overflows may map to positive\nor negative inifinity, otherwise <code>None</code> is returned if the value cannot\nbe represented by an <code>f32</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_f64\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#195\">source</a><a href=\"#method.to_f64\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"minewars/prelude/trait.ToPrimitive.html#method.to_f64\" class=\"fn\">to_f64</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.f64.html\">f64</a>&gt;</h4></section></summary><div class='docblock'>Converts the value of <code>self</code> to an <code>f64</code>. Overflows may map to positive\nor negative inifinity, otherwise <code>None</code> is returned if the value cannot\nbe represented by an <code>f64</code>. <a href=\"minewars/prelude/trait.ToPrimitive.html#method.to_f64\">Read more</a></div></details></div></details>","ToPrimitive","minewars::prelude::tokio::net::unix::pid_t"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OverflowingAdd-for-i32\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_traits/ops/overflowing.rs.html#32\">source</a><a href=\"#impl-OverflowingAdd-for-i32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"minewars/prelude/num_traits/ops/overflowing/trait.OverflowingAdd.html\" title=\"trait minewars::prelude::num_traits::ops::overflowing::OverflowingAdd\">OverflowingAdd</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_add\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/ops/overflowing.rs.html#32\">source</a><a href=\"#method.overflowing_add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"minewars/prelude/num_traits/ops/overflowing/trait.OverflowingAdd.html#tymethod.overflowing_add\" class=\"fn\">overflowing_add</a>(&amp;self, v: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a>) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class='docblock'>Returns a tuple of the sum along with a boolean indicating whether an arithmetic overflow would occur.\nIf an overflow would have occurred then the wrapped value is returned.</div></details></div></details>","OverflowingAdd","minewars::prelude::tokio::net::unix::pid_t"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-One-for-i32\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_traits/identities.rs.html#143\">source</a><a href=\"#impl-One-for-i32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"minewars/prelude/num/trait.One.html\" title=\"trait minewars::prelude::num::One\">One</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.one\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/identities.rs.html#143\">source</a><a href=\"#method.one\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"minewars/prelude/num/trait.One.html#tymethod.one\" class=\"fn\">one</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h4></section></summary><div class='docblock'>Returns the multiplicative identity element of <code>Self</code>, <code>1</code>. <a href=\"minewars/prelude/num/trait.One.html#tymethod.one\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_one\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/identities.rs.html#143\">source</a><a href=\"#method.is_one\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"minewars/prelude/num/trait.One.html#method.is_one\" class=\"fn\">is_one</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Returns <code>true</code> if <code>self</code> is equal to the multiplicative identity. <a href=\"minewars/prelude/num/trait.One.html#method.is_one\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_one\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/identities.rs.html#100\">source</a><a href=\"#method.set_one\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"minewars/prelude/num/trait.One.html#method.set_one\" class=\"fn\">set_one</a>(&amp;mut self)</h4></section></summary><div class='docblock'>Sets <code>self</code> to the multiplicative identity element of <code>Self</code>, <code>1</code>.</div></details></div></details>","One","minewars::prelude::tokio::net::unix::pid_t"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WrappingShl-for-i32\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_traits/ops/wrapping.rs.html#171\">source</a><a href=\"#impl-WrappingShl-for-i32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"minewars/prelude/num/traits/trait.WrappingShl.html\" title=\"trait minewars::prelude::num::traits::WrappingShl\">WrappingShl</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_shl\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/ops/wrapping.rs.html#171\">source</a><a href=\"#method.wrapping_shl\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"minewars/prelude/num/traits/trait.WrappingShl.html#tymethod.wrapping_shl\" class=\"fn\">wrapping_shl</a>(&amp;self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h4></section></summary><div class='docblock'>Panic-free bitwise shift-left; yields <code>self &lt;&lt; mask(rhs)</code>,\nwhere <code>mask</code> removes any high order bits of <code>rhs</code> that would\ncause the shift to exceed the bitwidth of the type. <a href=\"minewars/prelude/num/traits/trait.WrappingShl.html#tymethod.wrapping_shl\">Read more</a></div></details></div></details>","WrappingShl","minewars::prelude::tokio::net::unix::pid_t"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pow%3C%26u8%3E-for-i32\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_traits/pow.rs.html#89\">source</a><a href=\"#impl-Pow%3C%26u8%3E-for-i32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a&gt; <a class=\"trait\" href=\"minewars/prelude/num/traits/trait.Pow.html\" title=\"trait minewars::prelude::num::traits::Pow\">Pow</a>&lt;&amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"minewars/prelude/num/traits/trait.Pow.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h4></section></summary><div class='docblock'>The result after applying the operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.pow\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/pow.rs.html#89\">source</a><a href=\"#method.pow\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"minewars/prelude/num/traits/trait.Pow.html#tymethod.pow\" class=\"fn\">pow</a>(self, rhs: &amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h4></section></summary><div class='docblock'>Returns <code>self</code> to the power <code>rhs</code>. <a href=\"minewars/prelude/num/traits/trait.Pow.html#tymethod.pow\">Read more</a></div></details></div></details>","Pow<&'a u8>","minewars::prelude::tokio::net::unix::pid_t"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pow%3C%26u16%3E-for-i32\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_traits/pow.rs.html#90\">source</a><a href=\"#impl-Pow%3C%26u16%3E-for-i32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a&gt; <a class=\"trait\" href=\"minewars/prelude/num/traits/trait.Pow.html\" title=\"trait minewars::prelude::num::traits::Pow\">Pow</a>&lt;&amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u16.html\">u16</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"minewars/prelude/num/traits/trait.Pow.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h4></section></summary><div class='docblock'>The result after applying the operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.pow\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/pow.rs.html#90\">source</a><a href=\"#method.pow\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"minewars/prelude/num/traits/trait.Pow.html#tymethod.pow\" class=\"fn\">pow</a>(self, rhs: &amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u16.html\">u16</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h4></section></summary><div class='docblock'>Returns <code>self</code> to the power <code>rhs</code>. <a href=\"minewars/prelude/num/traits/trait.Pow.html#tymethod.pow\">Read more</a></div></details></div></details>","Pow<&'a u16>","minewars::prelude::tokio::net::unix::pid_t"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pow%3Cu16%3E-for-i32\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_traits/pow.rs.html#90\">source</a><a href=\"#impl-Pow%3Cu16%3E-for-i32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"minewars/prelude/num/traits/trait.Pow.html\" title=\"trait minewars::prelude::num::traits::Pow\">Pow</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u16.html\">u16</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"minewars/prelude/num/traits/trait.Pow.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h4></section></summary><div class='docblock'>The result after applying the operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.pow\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/pow.rs.html#90\">source</a><a href=\"#method.pow\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"minewars/prelude/num/traits/trait.Pow.html#tymethod.pow\" class=\"fn\">pow</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u16.html\">u16</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h4></section></summary><div class='docblock'>Returns <code>self</code> to the power <code>rhs</code>. <a href=\"minewars/prelude/num/traits/trait.Pow.html#tymethod.pow\">Read more</a></div></details></div></details>","Pow<u16>","minewars::prelude::tokio::net::unix::pid_t"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pow%3C%26u32%3E-for-i32\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_traits/pow.rs.html#91\">source</a><a href=\"#impl-Pow%3C%26u32%3E-for-i32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a&gt; <a class=\"trait\" href=\"minewars/prelude/num/traits/trait.Pow.html\" title=\"trait minewars::prelude::num::traits::Pow\">Pow</a>&lt;&amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u32.html\">u32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"minewars/prelude/num/traits/trait.Pow.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h4></section></summary><div class='docblock'>The result after applying the operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.pow\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/pow.rs.html#91\">source</a><a href=\"#method.pow\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"minewars/prelude/num/traits/trait.Pow.html#tymethod.pow\" class=\"fn\">pow</a>(self, rhs: &amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h4></section></summary><div class='docblock'>Returns <code>self</code> to the power <code>rhs</code>. <a href=\"minewars/prelude/num/traits/trait.Pow.html#tymethod.pow\">Read more</a></div></details></div></details>","Pow<&'a u32>","minewars::prelude::tokio::net::unix::pid_t"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pow%3C%26usize%3E-for-i32\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_traits/pow.rs.html#92\">source</a><a href=\"#impl-Pow%3C%26usize%3E-for-i32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a&gt; <a class=\"trait\" href=\"minewars/prelude/num/traits/trait.Pow.html\" title=\"trait minewars::prelude::num::traits::Pow\">Pow</a>&lt;&amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"minewars/prelude/num/traits/trait.Pow.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h4></section></summary><div class='docblock'>The result after applying the operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.pow\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/pow.rs.html#92\">source</a><a href=\"#method.pow\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"minewars/prelude/num/traits/trait.Pow.html#tymethod.pow\" class=\"fn\">pow</a>(self, rhs: &amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h4></section></summary><div class='docblock'>Returns <code>self</code> to the power <code>rhs</code>. <a href=\"minewars/prelude/num/traits/trait.Pow.html#tymethod.pow\">Read more</a></div></details></div></details>","Pow<&'a usize>","minewars::prelude::tokio::net::unix::pid_t"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pow%3Cu32%3E-for-i32\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_traits/pow.rs.html#91\">source</a><a href=\"#impl-Pow%3Cu32%3E-for-i32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"minewars/prelude/num/traits/trait.Pow.html\" title=\"trait minewars::prelude::num::traits::Pow\">Pow</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u32.html\">u32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"minewars/prelude/num/traits/trait.Pow.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h4></section></summary><div class='docblock'>The result after applying the operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.pow\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/pow.rs.html#91\">source</a><a href=\"#method.pow\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"minewars/prelude/num/traits/trait.Pow.html#tymethod.pow\" class=\"fn\">pow</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h4></section></summary><div class='docblock'>Returns <code>self</code> to the power <code>rhs</code>. <a href=\"minewars/prelude/num/traits/trait.Pow.html#tymethod.pow\">Read more</a></div></details></div></details>","Pow<u32>","minewars::prelude::tokio::net::unix::pid_t"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pow%3Cu8%3E-for-i32\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_traits/pow.rs.html#89\">source</a><a href=\"#impl-Pow%3Cu8%3E-for-i32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"minewars/prelude/num/traits/trait.Pow.html\" title=\"trait minewars::prelude::num::traits::Pow\">Pow</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"minewars/prelude/num/traits/trait.Pow.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h4></section></summary><div class='docblock'>The result after applying the operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.pow\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/pow.rs.html#89\">source</a><a href=\"#method.pow\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"minewars/prelude/num/traits/trait.Pow.html#tymethod.pow\" class=\"fn\">pow</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h4></section></summary><div class='docblock'>Returns <code>self</code> to the power <code>rhs</code>. <a href=\"minewars/prelude/num/traits/trait.Pow.html#tymethod.pow\">Read more</a></div></details></div></details>","Pow<u8>","minewars::prelude::tokio::net::unix::pid_t"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pow%3Cusize%3E-for-i32\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_traits/pow.rs.html#92\">source</a><a href=\"#impl-Pow%3Cusize%3E-for-i32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"minewars/prelude/num/traits/trait.Pow.html\" title=\"trait minewars::prelude::num::traits::Pow\">Pow</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"minewars/prelude/num/traits/trait.Pow.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h4></section></summary><div class='docblock'>The result after applying the operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.pow\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/pow.rs.html#92\">source</a><a href=\"#method.pow\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"minewars/prelude/num/traits/trait.Pow.html#tymethod.pow\" class=\"fn\">pow</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h4></section></summary><div class='docblock'>Returns <code>self</code> to the power <code>rhs</code>. <a href=\"minewars/prelude/num/traits/trait.Pow.html#tymethod.pow\">Read more</a></div></details></div></details>","Pow<usize>","minewars::prelude::tokio::net::unix::pid_t"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedDiv-for-i32\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_traits/ops/checked.rs.html#96\">source</a><a href=\"#impl-CheckedDiv-for-i32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"minewars/prelude/num/trait.CheckedDiv.html\" title=\"trait minewars::prelude::num::CheckedDiv\">CheckedDiv</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_div\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/ops/checked.rs.html#96\">source</a><a href=\"#method.checked_div\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"minewars/prelude/num/trait.CheckedDiv.html#tymethod.checked_div\" class=\"fn\">checked_div</a>(&amp;self, v: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a>&gt;</h4></section></summary><div class='docblock'>Divides two numbers, checking for underflow, overflow and division by\nzero. If any of that happens, <code>None</code> is returned.</div></details></div></details>","CheckedDiv","minewars::prelude::tokio::net::unix::pid_t"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Num-for-i32\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_traits/lib.rs.html#175\">source</a><a href=\"#impl-Num-for-i32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"minewars/prelude/num/trait.Num.html\" title=\"trait minewars::prelude::num::Num\">Num</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.FromStrRadixErr\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.FromStrRadixErr\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"minewars/prelude/num/trait.Num.html#associatedtype.FromStrRadixErr\" class=\"associatedtype\">FromStrRadixErr</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/num/error/struct.ParseIntError.html\" title=\"struct core::num::error::ParseIntError\">ParseIntError</a></h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_str_radix\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/lib.rs.html#175\">source</a><a href=\"#method.from_str_radix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"minewars/prelude/num/trait.Num.html#tymethod.from_str_radix\" class=\"fn\">from_str_radix</a>(s: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.str.html\">str</a>, radix: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/num/error/struct.ParseIntError.html\" title=\"struct core::num::error::ParseIntError\">ParseIntError</a>&gt;</h4></section></summary><div class='docblock'>Convert from a string and radix (typically <code>2..=36</code>). <a href=\"minewars/prelude/num/trait.Num.html#tymethod.from_str_radix\">Read more</a></div></details></div></details>","Num","minewars::prelude::tokio::net::unix::pid_t"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WrappingSub-for-i32\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_traits/ops/wrapping.rs.html#60\">source</a><a href=\"#impl-WrappingSub-for-i32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"minewars/prelude/num/traits/trait.WrappingSub.html\" title=\"trait minewars::prelude::num::traits::WrappingSub\">WrappingSub</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_sub\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/ops/wrapping.rs.html#60\">source</a><a href=\"#method.wrapping_sub\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"minewars/prelude/num/traits/trait.WrappingSub.html#tymethod.wrapping_sub\" class=\"fn\">wrapping_sub</a>(&amp;self, v: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h4></section></summary><div class='docblock'>Wrapping (modular) subtraction. Computes <code>self - other</code>, wrapping around at the boundary\nof the type.</div></details></div></details>","WrappingSub","minewars::prelude::tokio::net::unix::pid_t"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MulAddAssign-for-i32\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_traits/ops/mul_add.rs.html#100\">source</a><a href=\"#impl-MulAddAssign-for-i32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"minewars/prelude/num/traits/trait.MulAddAssign.html\" title=\"trait minewars::prelude::num::traits::MulAddAssign\">MulAddAssign</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul_add_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/ops/mul_add.rs.html#100\">source</a><a href=\"#method.mul_add_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"minewars/prelude/num/traits/trait.MulAddAssign.html#tymethod.mul_add_assign\" class=\"fn\">mul_add_assign</a>(&amp;mut self, a: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a>, b: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a>)</h4></section></summary><div class='docblock'>Performs the fused multiply-add assignment operation <code>*self = (*self * a) + b</code></div></details></div></details>","MulAddAssign","minewars::prelude::tokio::net::unix::pid_t"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SaturatingAdd-for-i32\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_traits/ops/saturating.rs.html#61\">source</a><a href=\"#impl-SaturatingAdd-for-i32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"minewars/prelude/num/traits/trait.SaturatingAdd.html\" title=\"trait minewars::prelude::num::traits::SaturatingAdd\">SaturatingAdd</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_add\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/ops/saturating.rs.html#61\">source</a><a href=\"#method.saturating_add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"minewars/prelude/num/traits/trait.SaturatingAdd.html#tymethod.saturating_add\" class=\"fn\">saturating_add</a>(&amp;self, v: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h4></section></summary><div class='docblock'>Saturating addition. Computes <code>self + other</code>, saturating at the relevant high or low boundary of\nthe type.</div></details></div></details>","SaturatingAdd","minewars::prelude::tokio::net::unix::pid_t"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsPrimitive%3Cusize%3E-for-i32\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#768\">source</a><a href=\"#impl-AsPrimitive%3Cusize%3E-for-i32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"minewars/prelude/num/traits/trait.AsPrimitive.html\" title=\"trait minewars::prelude::num::traits::AsPrimitive\">AsPrimitive</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#768\">source</a><a href=\"#method.as_\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"minewars/prelude/num/traits/trait.AsPrimitive.html#tymethod.as_\" class=\"fn\">as_</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Convert a value to another, using the <code>as</code> operator.</div></details></div></details>","AsPrimitive<usize>","minewars::prelude::tokio::net::unix::pid_t"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsPrimitive%3Cisize%3E-for-i32\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#768\">source</a><a href=\"#impl-AsPrimitive%3Cisize%3E-for-i32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"minewars/prelude/num/traits/trait.AsPrimitive.html\" title=\"trait minewars::prelude::num::traits::AsPrimitive\">AsPrimitive</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.isize.html\">isize</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#768\">source</a><a href=\"#method.as_\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"minewars/prelude/num/traits/trait.AsPrimitive.html#tymethod.as_\" class=\"fn\">as_</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.isize.html\">isize</a></h4></section></summary><div class='docblock'>Convert a value to another, using the <code>as</code> operator.</div></details></div></details>","AsPrimitive<isize>","minewars::prelude::tokio::net::unix::pid_t"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsPrimitive%3Cu64%3E-for-i32\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#768\">source</a><a href=\"#impl-AsPrimitive%3Cu64%3E-for-i32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"minewars/prelude/num/traits/trait.AsPrimitive.html\" title=\"trait minewars::prelude::num::traits::AsPrimitive\">AsPrimitive</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u64.html\">u64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#768\">source</a><a href=\"#method.as_\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"minewars/prelude/num/traits/trait.AsPrimitive.html#tymethod.as_\" class=\"fn\">as_</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Convert a value to another, using the <code>as</code> operator.</div></details></div></details>","AsPrimitive<u64>","minewars::prelude::tokio::net::unix::pid_t"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsPrimitive%3Ci16%3E-for-i32\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#768\">source</a><a href=\"#impl-AsPrimitive%3Ci16%3E-for-i32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"minewars/prelude/num/traits/trait.AsPrimitive.html\" title=\"trait minewars::prelude::num::traits::AsPrimitive\">AsPrimitive</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i16.html\">i16</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#768\">source</a><a href=\"#method.as_\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"minewars/prelude/num/traits/trait.AsPrimitive.html#tymethod.as_\" class=\"fn\">as_</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i16.html\">i16</a></h4></section></summary><div class='docblock'>Convert a value to another, using the <code>as</code> operator.</div></details></div></details>","AsPrimitive<i16>","minewars::prelude::tokio::net::unix::pid_t"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsPrimitive%3Cf32%3E-for-i32\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#768\">source</a><a href=\"#impl-AsPrimitive%3Cf32%3E-for-i32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"minewars/prelude/num/traits/trait.AsPrimitive.html\" title=\"trait minewars::prelude::num::traits::AsPrimitive\">AsPrimitive</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.f32.html\">f32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#768\">source</a><a href=\"#method.as_\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"minewars/prelude/num/traits/trait.AsPrimitive.html#tymethod.as_\" class=\"fn\">as_</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.f32.html\">f32</a></h4></section></summary><div class='docblock'>Convert a value to another, using the <code>as</code> operator.</div></details></div></details>","AsPrimitive<f32>","minewars::prelude::tokio::net::unix::pid_t"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsPrimitive%3Ci8%3E-for-i32\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#768\">source</a><a href=\"#impl-AsPrimitive%3Ci8%3E-for-i32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"minewars/prelude/num/traits/trait.AsPrimitive.html\" title=\"trait minewars::prelude::num::traits::AsPrimitive\">AsPrimitive</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i8.html\">i8</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#768\">source</a><a href=\"#method.as_\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"minewars/prelude/num/traits/trait.AsPrimitive.html#tymethod.as_\" class=\"fn\">as_</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i8.html\">i8</a></h4></section></summary><div class='docblock'>Convert a value to another, using the <code>as</code> operator.</div></details></div></details>","AsPrimitive<i8>","minewars::prelude::tokio::net::unix::pid_t"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsPrimitive%3Cu16%3E-for-i32\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#768\">source</a><a href=\"#impl-AsPrimitive%3Cu16%3E-for-i32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"minewars/prelude/num/traits/trait.AsPrimitive.html\" title=\"trait minewars::prelude::num::traits::AsPrimitive\">AsPrimitive</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u16.html\">u16</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#768\">source</a><a href=\"#method.as_\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"minewars/prelude/num/traits/trait.AsPrimitive.html#tymethod.as_\" class=\"fn\">as_</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u16.html\">u16</a></h4></section></summary><div class='docblock'>Convert a value to another, using the <code>as</code> operator.</div></details></div></details>","AsPrimitive<u16>","minewars::prelude::tokio::net::unix::pid_t"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsPrimitive%3Cu128%3E-for-i32\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#768\">source</a><a href=\"#impl-AsPrimitive%3Cu128%3E-for-i32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"minewars/prelude/num/traits/trait.AsPrimitive.html\" title=\"trait minewars::prelude::num::traits::AsPrimitive\">AsPrimitive</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u128.html\">u128</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#768\">source</a><a href=\"#method.as_\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"minewars/prelude/num/traits/trait.AsPrimitive.html#tymethod.as_\" class=\"fn\">as_</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u128.html\">u128</a></h4></section></summary><div class='docblock'>Convert a value to another, using the <code>as</code> operator.</div></details></div></details>","AsPrimitive<u128>","minewars::prelude::tokio::net::unix::pid_t"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsPrimitive%3Cu8%3E-for-i32\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#768\">source</a><a href=\"#impl-AsPrimitive%3Cu8%3E-for-i32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"minewars/prelude/num/traits/trait.AsPrimitive.html\" title=\"trait minewars::prelude::num::traits::AsPrimitive\">AsPrimitive</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#768\">source</a><a href=\"#method.as_\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"minewars/prelude/num/traits/trait.AsPrimitive.html#tymethod.as_\" class=\"fn\">as_</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>Convert a value to another, using the <code>as</code> operator.</div></details></div></details>","AsPrimitive<u8>","minewars::prelude::tokio::net::unix::pid_t"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsPrimitive%3Ci32%3E-for-i32\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#768\">source</a><a href=\"#impl-AsPrimitive%3Ci32%3E-for-i32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"minewars/prelude/num/traits/trait.AsPrimitive.html\" title=\"trait minewars::prelude::num::traits::AsPrimitive\">AsPrimitive</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#768\">source</a><a href=\"#method.as_\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"minewars/prelude/num/traits/trait.AsPrimitive.html#tymethod.as_\" class=\"fn\">as_</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h4></section></summary><div class='docblock'>Convert a value to another, using the <code>as</code> operator.</div></details></div></details>","AsPrimitive<i32>","minewars::prelude::tokio::net::unix::pid_t"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsPrimitive%3Ci64%3E-for-i32\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#768\">source</a><a href=\"#impl-AsPrimitive%3Ci64%3E-for-i32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"minewars/prelude/num/traits/trait.AsPrimitive.html\" title=\"trait minewars::prelude::num::traits::AsPrimitive\">AsPrimitive</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i64.html\">i64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#768\">source</a><a href=\"#method.as_\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"minewars/prelude/num/traits/trait.AsPrimitive.html#tymethod.as_\" class=\"fn\">as_</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i64.html\">i64</a></h4></section></summary><div class='docblock'>Convert a value to another, using the <code>as</code> operator.</div></details></div></details>","AsPrimitive<i64>","minewars::prelude::tokio::net::unix::pid_t"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsPrimitive%3Cf64%3E-for-i32\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#768\">source</a><a href=\"#impl-AsPrimitive%3Cf64%3E-for-i32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"minewars/prelude/num/traits/trait.AsPrimitive.html\" title=\"trait minewars::prelude::num::traits::AsPrimitive\">AsPrimitive</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.f64.html\">f64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#768\">source</a><a href=\"#method.as_\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"minewars/prelude/num/traits/trait.AsPrimitive.html#tymethod.as_\" class=\"fn\">as_</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.f64.html\">f64</a></h4></section></summary><div class='docblock'>Convert a value to another, using the <code>as</code> operator.</div></details></div></details>","AsPrimitive<f64>","minewars::prelude::tokio::net::unix::pid_t"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsPrimitive%3Cu32%3E-for-i32\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#768\">source</a><a href=\"#impl-AsPrimitive%3Cu32%3E-for-i32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"minewars/prelude/num/traits/trait.AsPrimitive.html\" title=\"trait minewars::prelude::num::traits::AsPrimitive\">AsPrimitive</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u32.html\">u32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#768\">source</a><a href=\"#method.as_\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"minewars/prelude/num/traits/trait.AsPrimitive.html#tymethod.as_\" class=\"fn\">as_</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Convert a value to another, using the <code>as</code> operator.</div></details></div></details>","AsPrimitive<u32>","minewars::prelude::tokio::net::unix::pid_t"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsPrimitive%3Ci128%3E-for-i32\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#768\">source</a><a href=\"#impl-AsPrimitive%3Ci128%3E-for-i32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"minewars/prelude/num/traits/trait.AsPrimitive.html\" title=\"trait minewars::prelude::num::traits::AsPrimitive\">AsPrimitive</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i128.html\">i128</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#768\">source</a><a href=\"#method.as_\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"minewars/prelude/num/traits/trait.AsPrimitive.html#tymethod.as_\" class=\"fn\">as_</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i128.html\">i128</a></h4></section></summary><div class='docblock'>Convert a value to another, using the <code>as</code> operator.</div></details></div></details>","AsPrimitive<i128>","minewars::prelude::tokio::net::unix::pid_t"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OverflowingMul-for-i32\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_traits/ops/overflowing.rs.html#74\">source</a><a href=\"#impl-OverflowingMul-for-i32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"minewars/prelude/num_traits/ops/overflowing/trait.OverflowingMul.html\" title=\"trait minewars::prelude::num_traits::ops::overflowing::OverflowingMul\">OverflowingMul</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_mul\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/ops/overflowing.rs.html#74\">source</a><a href=\"#method.overflowing_mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"minewars/prelude/num_traits/ops/overflowing/trait.OverflowingMul.html#tymethod.overflowing_mul\" class=\"fn\">overflowing_mul</a>(&amp;self, v: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a>) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class='docblock'>Returns a tuple of the product along with a boolean indicating whether an arithmetic overflow would occur.\nIf an overflow would have occurred then the wrapped value is returned.</div></details></div></details>","OverflowingMul","minewars::prelude::tokio::net::unix::pid_t"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedEuclid-for-i32\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_traits/ops/euclid.rs.html#250\">source</a><a href=\"#impl-CheckedEuclid-for-i32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"minewars/prelude/num/traits/trait.CheckedEuclid.html\" title=\"trait minewars::prelude::num::traits::CheckedEuclid\">CheckedEuclid</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_div_euclid\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/ops/euclid.rs.html#250\">source</a><a href=\"#method.checked_div_euclid\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"minewars/prelude/num/traits/trait.CheckedEuclid.html#tymethod.checked_div_euclid\" class=\"fn\">checked_div_euclid</a>(&amp;self, v: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a>&gt;</h4></section></summary><div class='docblock'>Performs euclid division that returns <code>None</code> instead of panicking on division by zero\nand instead of wrapping around on underflow and overflow.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_rem_euclid\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/ops/euclid.rs.html#250\">source</a><a href=\"#method.checked_rem_euclid\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"minewars/prelude/num/traits/trait.CheckedEuclid.html#tymethod.checked_rem_euclid\" class=\"fn\">checked_rem_euclid</a>(&amp;self, v: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a>&gt;</h4></section></summary><div class='docblock'>Finds the euclid remainder of dividing two numbers, checking for underflow, overflow and\ndivision by zero. If any of that happens, <code>None</code> is returned.</div></details></div></details>","CheckedEuclid","minewars::prelude::tokio::net::unix::pid_t"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Euclid-for-i32\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_traits/ops/euclid.rs.html#119\">source</a><a href=\"#impl-Euclid-for-i32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"minewars/prelude/num/traits/trait.Euclid.html\" title=\"trait minewars::prelude::num::traits::Euclid\">Euclid</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.div_euclid\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/ops/euclid.rs.html#119\">source</a><a href=\"#method.div_euclid\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"minewars/prelude/num/traits/trait.Euclid.html#tymethod.div_euclid\" class=\"fn\">div_euclid</a>(&amp;self, v: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h4></section></summary><div class='docblock'>Calculates Euclidean division, the matching method for <code>rem_euclid</code>. <a href=\"minewars/prelude/num/traits/trait.Euclid.html#tymethod.div_euclid\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.rem_euclid\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/ops/euclid.rs.html#119\">source</a><a href=\"#method.rem_euclid\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"minewars/prelude/num/traits/trait.Euclid.html#tymethod.rem_euclid\" class=\"fn\">rem_euclid</a>(&amp;self, v: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h4></section></summary><div class='docblock'>Calculates the least nonnegative remainder of <code>self (mod v)</code>. <a href=\"minewars/prelude/num/traits/trait.Euclid.html#tymethod.rem_euclid\">Read more</a></div></details></div></details>","Euclid","minewars::prelude::tokio::net::unix::pid_t"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedShl-for-i32\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_traits/ops/checked.rs.html#225\">source</a><a href=\"#impl-CheckedShl-for-i32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"minewars/prelude/num/traits/trait.CheckedShl.html\" title=\"trait minewars::prelude::num::traits::CheckedShl\">CheckedShl</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_shl\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/ops/checked.rs.html#225\">source</a><a href=\"#method.checked_shl\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"minewars/prelude/num/traits/trait.CheckedShl.html#tymethod.checked_shl\" class=\"fn\">checked_shl</a>(&amp;self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a>&gt;</h4></section></summary><div class='docblock'>Checked shift left. Computes <code>self &lt;&lt; rhs</code>, returning <code>None</code>\nif <code>rhs</code> is larger than or equal to the number of bits in <code>self</code>. <a href=\"minewars/prelude/num/traits/trait.CheckedShl.html#tymethod.checked_shl\">Read more</a></div></details></div></details>","CheckedShl","minewars::prelude::tokio::net::unix::pid_t"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WrappingShr-for-i32\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_traits/ops/wrapping.rs.html#204\">source</a><a href=\"#impl-WrappingShr-for-i32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"minewars/prelude/num/traits/trait.WrappingShr.html\" title=\"trait minewars::prelude::num::traits::WrappingShr\">WrappingShr</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_shr\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/ops/wrapping.rs.html#204\">source</a><a href=\"#method.wrapping_shr\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"minewars/prelude/num/traits/trait.WrappingShr.html#tymethod.wrapping_shr\" class=\"fn\">wrapping_shr</a>(&amp;self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h4></section></summary><div class='docblock'>Panic-free bitwise shift-right; yields <code>self &gt;&gt; mask(rhs)</code>,\nwhere <code>mask</code> removes any high order bits of <code>rhs</code> that would\ncause the shift to exceed the bitwidth of the type. <a href=\"minewars/prelude/num/traits/trait.WrappingShr.html#tymethod.wrapping_shr\">Read more</a></div></details></div></details>","WrappingShr","minewars::prelude::tokio::net::unix::pid_t"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedShr-for-i32\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_traits/ops/checked.rs.html#258\">source</a><a href=\"#impl-CheckedShr-for-i32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"minewars/prelude/num/traits/trait.CheckedShr.html\" title=\"trait minewars::prelude::num::traits::CheckedShr\">CheckedShr</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_shr\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/ops/checked.rs.html#258\">source</a><a href=\"#method.checked_shr\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"minewars/prelude/num/traits/trait.CheckedShr.html#tymethod.checked_shr\" class=\"fn\">checked_shr</a>(&amp;self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a>&gt;</h4></section></summary><div class='docblock'>Checked shift right. Computes <code>self &gt;&gt; rhs</code>, returning <code>None</code>\nif <code>rhs</code> is larger than or equal to the number of bits in <code>self</code>. <a href=\"minewars/prelude/num/traits/trait.CheckedShr.html#tymethod.checked_shr\">Read more</a></div></details></div></details>","CheckedShr","minewars::prelude::tokio::net::unix::pid_t"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromPrimitive-for-i32\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#571\">source</a><a href=\"#impl-FromPrimitive-for-i32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"minewars/prelude/trait.FromPrimitive.html\" title=\"trait minewars::prelude::FromPrimitive\">FromPrimitive</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_isize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#571\">source</a><a href=\"#method.from_isize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"minewars/prelude/trait.FromPrimitive.html#method.from_isize\" class=\"fn\">from_isize</a>(n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.isize.html\">isize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a>&gt;</h4></section></summary><div class='docblock'>Converts an <code>isize</code> to return an optional value of this type. If the\nvalue cannot be represented by this type, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_i8\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#571\">source</a><a href=\"#method.from_i8\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"minewars/prelude/trait.FromPrimitive.html#method.from_i8\" class=\"fn\">from_i8</a>(n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i8.html\">i8</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a>&gt;</h4></section></summary><div class='docblock'>Converts an <code>i8</code> to return an optional value of this type. If the\nvalue cannot be represented by this type, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_i16\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#571\">source</a><a href=\"#method.from_i16\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"minewars/prelude/trait.FromPrimitive.html#method.from_i16\" class=\"fn\">from_i16</a>(n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i16.html\">i16</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a>&gt;</h4></section></summary><div class='docblock'>Converts an <code>i16</code> to return an optional value of this type. If the\nvalue cannot be represented by this type, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_i32\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#571\">source</a><a href=\"#method.from_i32\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"minewars/prelude/trait.FromPrimitive.html#method.from_i32\" class=\"fn\">from_i32</a>(n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a>&gt;</h4></section></summary><div class='docblock'>Converts an <code>i32</code> to return an optional value of this type. If the\nvalue cannot be represented by this type, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_i64\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#571\">source</a><a href=\"#method.from_i64\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"minewars/prelude/trait.FromPrimitive.html#tymethod.from_i64\" class=\"fn\">from_i64</a>(n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i64.html\">i64</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a>&gt;</h4></section></summary><div class='docblock'>Converts an <code>i64</code> to return an optional value of this type. If the\nvalue cannot be represented by this type, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_i128\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#571\">source</a><a href=\"#method.from_i128\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"minewars/prelude/trait.FromPrimitive.html#method.from_i128\" class=\"fn\">from_i128</a>(n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i128.html\">i128</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a>&gt;</h4></section></summary><div class='docblock'>Converts an <code>i128</code> to return an optional value of this type. If the\nvalue cannot be represented by this type, then <code>None</code> is returned. <a href=\"minewars/prelude/trait.FromPrimitive.html#method.from_i128\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_usize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#571\">source</a><a href=\"#method.from_usize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"minewars/prelude/trait.FromPrimitive.html#method.from_usize\" class=\"fn\">from_usize</a>(n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a>&gt;</h4></section></summary><div class='docblock'>Converts a <code>usize</code> to return an optional value of this type. If the\nvalue cannot be represented by this type, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_u8\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#571\">source</a><a href=\"#method.from_u8\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"minewars/prelude/trait.FromPrimitive.html#method.from_u8\" class=\"fn\">from_u8</a>(n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a>&gt;</h4></section></summary><div class='docblock'>Converts an <code>u8</code> to return an optional value of this type. If the\nvalue cannot be represented by this type, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_u16\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#571\">source</a><a href=\"#method.from_u16\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"minewars/prelude/trait.FromPrimitive.html#method.from_u16\" class=\"fn\">from_u16</a>(n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u16.html\">u16</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a>&gt;</h4></section></summary><div class='docblock'>Converts an <code>u16</code> to return an optional value of this type. If the\nvalue cannot be represented by this type, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_u32\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#571\">source</a><a href=\"#method.from_u32\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"minewars/prelude/trait.FromPrimitive.html#method.from_u32\" class=\"fn\">from_u32</a>(n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a>&gt;</h4></section></summary><div class='docblock'>Converts an <code>u32</code> to return an optional value of this type. If the\nvalue cannot be represented by this type, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_u64\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#571\">source</a><a href=\"#method.from_u64\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"minewars/prelude/trait.FromPrimitive.html#tymethod.from_u64\" class=\"fn\">from_u64</a>(n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a>&gt;</h4></section></summary><div class='docblock'>Converts an <code>u64</code> to return an optional value of this type. If the\nvalue cannot be represented by this type, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_u128\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#571\">source</a><a href=\"#method.from_u128\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"minewars/prelude/trait.FromPrimitive.html#method.from_u128\" class=\"fn\">from_u128</a>(n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u128.html\">u128</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a>&gt;</h4></section></summary><div class='docblock'>Converts an <code>u128</code> to return an optional value of this type. If the\nvalue cannot be represented by this type, then <code>None</code> is returned. <a href=\"minewars/prelude/trait.FromPrimitive.html#method.from_u128\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_f32\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#571\">source</a><a href=\"#method.from_f32\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"minewars/prelude/trait.FromPrimitive.html#method.from_f32\" class=\"fn\">from_f32</a>(n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.f32.html\">f32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a>&gt;</h4></section></summary><div class='docblock'>Converts a <code>f32</code> to return an optional value of this type. If the\nvalue cannot be represented by this type, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_f64\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#571\">source</a><a href=\"#method.from_f64\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"minewars/prelude/trait.FromPrimitive.html#method.from_f64\" class=\"fn\">from_f64</a>(n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.f64.html\">f64</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a>&gt;</h4></section></summary><div class='docblock'>Converts a <code>f64</code> to return an optional value of this type. If the\nvalue cannot be represented by this type, then <code>None</code> is returned. <a href=\"minewars/prelude/trait.FromPrimitive.html#method.from_f64\">Read more</a></div></details></div></details>","FromPrimitive","minewars::prelude::tokio::net::unix::pid_t"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedMul-for-i32\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_traits/ops/checked.rs.html#74\">source</a><a href=\"#impl-CheckedMul-for-i32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"minewars/prelude/num/trait.CheckedMul.html\" title=\"trait minewars::prelude::num::CheckedMul\">CheckedMul</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_mul\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/ops/checked.rs.html#74\">source</a><a href=\"#method.checked_mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"minewars/prelude/num/trait.CheckedMul.html#tymethod.checked_mul\" class=\"fn\">checked_mul</a>(&amp;self, v: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a>&gt;</h4></section></summary><div class='docblock'>Multiplies two numbers, checking for underflow or overflow. If underflow\nor overflow happens, <code>None</code> is returned.</div></details></div></details>","CheckedMul","minewars::prelude::tokio::net::unix::pid_t"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Bounded-for-i32\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_traits/bounds.rs.html#67\">source</a><a href=\"#impl-Bounded-for-i32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"minewars/prelude/num/trait.Bounded.html\" title=\"trait minewars::prelude::num::Bounded\">Bounded</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.min_value\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/bounds.rs.html#67\">source</a><a href=\"#method.min_value\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"minewars/prelude/num/trait.Bounded.html#tymethod.min_value\" class=\"fn\">min_value</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h4></section></summary><div class='docblock'>Returns the smallest finite number this type can represent</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.max_value\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/bounds.rs.html#67\">source</a><a href=\"#method.max_value\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"minewars/prelude/num/trait.Bounded.html#tymethod.max_value\" class=\"fn\">max_value</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h4></section></summary><div class='docblock'>Returns the largest finite number this type can represent</div></details></div></details>","Bounded","minewars::prelude::tokio::net::unix::pid_t"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WrappingAdd-for-i32\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_traits/ops/wrapping.rs.html#39\">source</a><a href=\"#impl-WrappingAdd-for-i32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"minewars/prelude/num/traits/trait.WrappingAdd.html\" title=\"trait minewars::prelude::num::traits::WrappingAdd\">WrappingAdd</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_add\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/ops/wrapping.rs.html#39\">source</a><a href=\"#method.wrapping_add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"minewars/prelude/num/traits/trait.WrappingAdd.html#tymethod.wrapping_add\" class=\"fn\">wrapping_add</a>(&amp;self, v: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h4></section></summary><div class='docblock'>Wrapping (modular) addition. Computes <code>self + other</code>, wrapping around at the boundary of\nthe type.</div></details></div></details>","WrappingAdd","minewars::prelude::tokio::net::unix::pid_t"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MulAdd-for-i32\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_traits/ops/mul_add.rs.html#70\">source</a><a href=\"#impl-MulAdd-for-i32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"minewars/prelude/num/traits/trait.MulAdd.html\" title=\"trait minewars::prelude::num::traits::MulAdd\">MulAdd</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"minewars/prelude/num/traits/trait.MulAdd.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h4></section></summary><div class='docblock'>The resulting type after applying the fused multiply-add.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul_add\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/ops/mul_add.rs.html#70\">source</a><a href=\"#method.mul_add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"minewars/prelude/num/traits/trait.MulAdd.html#tymethod.mul_add\" class=\"fn\">mul_add</a>(self, a: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a>, b: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a>) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a> as <a class=\"trait\" href=\"minewars/prelude/num/traits/trait.MulAdd.html\" title=\"trait minewars::prelude::num::traits::MulAdd\">MulAdd</a>&gt;::<a class=\"associatedtype\" href=\"minewars/prelude/num/traits/trait.MulAdd.html#associatedtype.Output\" title=\"type minewars::prelude::num::traits::MulAdd::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the fused multiply-add operation <code>(self * a) + b</code></div></details></div></details>","MulAdd","minewars::prelude::tokio::net::unix::pid_t"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromBytes-for-i32\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_traits/ops/bytes.rs.html#333\">source</a><a href=\"#impl-FromBytes-for-i32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"minewars/prelude/num/traits/trait.FromBytes.html\" title=\"trait minewars::prelude::num::traits::FromBytes\">FromBytes</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Bytes\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"minewars/prelude/num/traits/trait.FromBytes.html#associatedtype.Bytes\" class=\"associatedtype\">Bytes</a> = [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">4</a>]</h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_be_bytes\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/ops/bytes.rs.html#333\">source</a><a href=\"#method.from_be_bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"minewars/prelude/num/traits/trait.FromBytes.html#tymethod.from_be_bytes\" class=\"fn\">from_be_bytes</a>(bytes: &amp;&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a> as <a class=\"trait\" href=\"minewars/prelude/num/traits/trait.FromBytes.html\" title=\"trait minewars::prelude::num::traits::FromBytes\">FromBytes</a>&gt;::<a class=\"associatedtype\" href=\"minewars/prelude/num/traits/trait.FromBytes.html#associatedtype.Bytes\" title=\"type minewars::prelude::num::traits::FromBytes::Bytes\">Bytes</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h4></section></summary><div class='docblock'>Create a number from its representation as a byte array in big endian. <a href=\"minewars/prelude/num/traits/trait.FromBytes.html#tymethod.from_be_bytes\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_le_bytes\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/ops/bytes.rs.html#333\">source</a><a href=\"#method.from_le_bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"minewars/prelude/num/traits/trait.FromBytes.html#tymethod.from_le_bytes\" class=\"fn\">from_le_bytes</a>(bytes: &amp;&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a> as <a class=\"trait\" href=\"minewars/prelude/num/traits/trait.FromBytes.html\" title=\"trait minewars::prelude::num::traits::FromBytes\">FromBytes</a>&gt;::<a class=\"associatedtype\" href=\"minewars/prelude/num/traits/trait.FromBytes.html#associatedtype.Bytes\" title=\"type minewars::prelude::num::traits::FromBytes::Bytes\">Bytes</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h4></section></summary><div class='docblock'>Create a number from its representation as a byte array in little endian. <a href=\"minewars/prelude/num/traits/trait.FromBytes.html#tymethod.from_le_bytes\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_ne_bytes\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/ops/bytes.rs.html#333\">source</a><a href=\"#method.from_ne_bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"minewars/prelude/num/traits/trait.FromBytes.html#method.from_ne_bytes\" class=\"fn\">from_ne_bytes</a>(bytes: &amp;&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a> as <a class=\"trait\" href=\"minewars/prelude/num/traits/trait.FromBytes.html\" title=\"trait minewars::prelude::num::traits::FromBytes\">FromBytes</a>&gt;::<a class=\"associatedtype\" href=\"minewars/prelude/num/traits/trait.FromBytes.html#associatedtype.Bytes\" title=\"type minewars::prelude::num::traits::FromBytes::Bytes\">Bytes</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h4></section></summary><div class='docblock'>Create a number from its memory representation as a byte array in native endianness. <a href=\"minewars/prelude/num/traits/trait.FromBytes.html#method.from_ne_bytes\">Read more</a></div></details></div></details>","FromBytes","minewars::prelude::tokio::net::unix::pid_t"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SaturatingMul-for-i32\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_traits/ops/saturating.rs.html#103\">source</a><a href=\"#impl-SaturatingMul-for-i32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"minewars/prelude/num/traits/trait.SaturatingMul.html\" title=\"trait minewars::prelude::num::traits::SaturatingMul\">SaturatingMul</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_mul\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/ops/saturating.rs.html#103\">source</a><a href=\"#method.saturating_mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"minewars/prelude/num/traits/trait.SaturatingMul.html#tymethod.saturating_mul\" class=\"fn\">saturating_mul</a>(&amp;self, v: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h4></section></summary><div class='docblock'>Saturating multiplication. Computes <code>self * other</code>, saturating at the relevant high or low boundary of\nthe type.</div></details></div></details>","SaturatingMul","minewars::prelude::tokio::net::unix::pid_t"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Saturating-for-i32\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_traits/ops/saturating.rs.html#31\">source</a><a href=\"#impl-Saturating-for-i32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"minewars/prelude/num/trait.Saturating.html\" title=\"trait minewars::prelude::num::Saturating\">Saturating</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_add\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/ops/saturating.rs.html#31\">source</a><a href=\"#method.saturating_add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"minewars/prelude/num/trait.Saturating.html#tymethod.saturating_add\" class=\"fn\">saturating_add</a>(self, v: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h4></section></summary><div class='docblock'>Saturating addition operator.\nReturns a+b, saturating at the numeric bounds instead of overflowing.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_sub\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/ops/saturating.rs.html#31\">source</a><a href=\"#method.saturating_sub\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"minewars/prelude/num/trait.Saturating.html#tymethod.saturating_sub\" class=\"fn\">saturating_sub</a>(self, v: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h4></section></summary><div class='docblock'>Saturating subtraction operator.\nReturns a-b, saturating at the numeric bounds instead of overflowing.</div></details></div></details>","Saturating","minewars::prelude::tokio::net::unix::pid_t"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ToBigInt-for-i32\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_bigint/bigint/convert.rs.html#356\">source</a><a href=\"#impl-ToBigInt-for-i32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"minewars/prelude/num/bigint/trait.ToBigInt.html\" title=\"trait minewars::prelude::num::bigint::ToBigInt\">ToBigInt</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_bigint\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_bigint/bigint/convert.rs.html#356\">source</a><a href=\"#method.to_bigint\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"minewars/prelude/num/bigint/trait.ToBigInt.html#tymethod.to_bigint\" class=\"fn\">to_bigint</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"minewars/prelude/num/struct.BigInt.html\" title=\"struct minewars::prelude::num::BigInt\">BigInt</a>&gt;</h4></section></summary><div class='docblock'>Converts the value of <code>self</code> to a <a href=\"minewars/prelude/num/struct.BigInt.html\" title=\"struct minewars::prelude::num::BigInt\"><code>BigInt</code></a>.</div></details></div></details>","ToBigInt","minewars::prelude::tokio::net::unix::pid_t"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ToBigUint-for-i32\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_bigint/biguint/convert.rs.html#582\">source</a><a href=\"#impl-ToBigUint-for-i32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"minewars/prelude/num/bigint/trait.ToBigUint.html\" title=\"trait minewars::prelude::num::bigint::ToBigUint\">ToBigUint</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_biguint\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_bigint/biguint/convert.rs.html#582\">source</a><a href=\"#method.to_biguint\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"minewars/prelude/num/bigint/trait.ToBigUint.html#tymethod.to_biguint\" class=\"fn\">to_biguint</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"minewars/prelude/num/struct.BigUint.html\" title=\"struct minewars::prelude::num::BigUint\">BigUint</a>&gt;</h4></section></summary><div class='docblock'>Converts the value of <code>self</code> to a <a href=\"minewars/prelude/num/struct.BigUint.html\" title=\"struct minewars::prelude::num::BigUint\"><code>BigUint</code></a>.</div></details></div></details>","ToBigUint","minewars::prelude::tokio::net::unix::pid_t"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Integer-for-i32\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_integer/lib.rs.html#827\">source</a><a href=\"#impl-Integer-for-i32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"minewars/prelude/num/trait.Integer.html\" title=\"trait minewars::prelude::num::Integer\">Integer</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.div_floor\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_integer/lib.rs.html#827\">source</a><a href=\"#method.div_floor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"minewars/prelude/num/trait.Integer.html#tymethod.div_floor\" class=\"fn\">div_floor</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h4></section></summary><div class=\"docblock\"><p>Floored integer division</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mod_floor\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_integer/lib.rs.html#827\">source</a><a href=\"#method.mod_floor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"minewars/prelude/num/trait.Integer.html#tymethod.mod_floor\" class=\"fn\">mod_floor</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h4></section></summary><div class=\"docblock\"><p>Floored integer modulo</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.div_mod_floor\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_integer/lib.rs.html#827\">source</a><a href=\"#method.div_mod_floor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"minewars/prelude/num/trait.Integer.html#method.div_mod_floor\" class=\"fn\">div_mod_floor</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a>) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a>)</h4></section></summary><div class=\"docblock\"><p>Calculates <code>div_floor</code> and <code>mod_floor</code> simultaneously</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gcd\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_integer/lib.rs.html#827\">source</a><a href=\"#method.gcd\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"minewars/prelude/num/trait.Integer.html#tymethod.gcd\" class=\"fn\">gcd</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h4></section></summary><div class=\"docblock\"><p>Calculates the Greatest Common Divisor (GCD) of the number and\n<code>other</code>. The result is always non-negative.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lcm\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_integer/lib.rs.html#827\">source</a><a href=\"#method.lcm\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"minewars/prelude/num/trait.Integer.html#tymethod.lcm\" class=\"fn\">lcm</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h4></section></summary><div class=\"docblock\"><p>Calculates the Lowest Common Multiple (LCM) of the number and\n<code>other</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gcd_lcm\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_integer/lib.rs.html#827\">source</a><a href=\"#method.gcd_lcm\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"minewars/prelude/num/trait.Integer.html#method.gcd_lcm\" class=\"fn\">gcd_lcm</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a>) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a>)</h4></section></summary><div class=\"docblock\"><p>Calculates the Greatest Common Divisor (GCD) and\nLowest Common Multiple (LCM) of the number and <code>other</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.divides\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_integer/lib.rs.html#827\">source</a><a href=\"#method.divides\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"minewars/prelude/num/trait.Integer.html#tymethod.divides\" class=\"fn\">divides</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Deprecated, use <code>is_multiple_of</code> instead.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_multiple_of\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_integer/lib.rs.html#827\">source</a><a href=\"#method.is_multiple_of\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"minewars/prelude/num/trait.Integer.html#tymethod.is_multiple_of\" class=\"fn\">is_multiple_of</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns <code>true</code> if the number is a multiple of <code>other</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_even\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_integer/lib.rs.html#827\">source</a><a href=\"#method.is_even\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"minewars/prelude/num/trait.Integer.html#tymethod.is_even\" class=\"fn\">is_even</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns <code>true</code> if the number is divisible by <code>2</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_odd\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_integer/lib.rs.html#827\">source</a><a href=\"#method.is_odd\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"minewars/prelude/num/trait.Integer.html#tymethod.is_odd\" class=\"fn\">is_odd</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns <code>true</code> if the number is not divisible by <code>2</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.div_rem\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_integer/lib.rs.html#827\">source</a><a href=\"#method.div_rem\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"minewars/prelude/num/trait.Integer.html#tymethod.div_rem\" class=\"fn\">div_rem</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a>) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a>)</h4></section></summary><div class=\"docblock\"><p>Simultaneous truncated integer division and modulus.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.next_multiple_of\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_integer/lib.rs.html#827\">source</a><a href=\"#method.next_multiple_of\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"minewars/prelude/num/trait.Integer.html#method.next_multiple_of\" class=\"fn\">next_multiple_of</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h4></section></summary><div class=\"docblock\"><p>Rounds up to nearest multiple of argument.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.prev_multiple_of\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_integer/lib.rs.html#827\">source</a><a href=\"#method.prev_multiple_of\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"minewars/prelude/num/trait.Integer.html#method.prev_multiple_of\" class=\"fn\">prev_multiple_of</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h4></section></summary><div class=\"docblock\"><p>Rounds down to nearest multiple of argument.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.div_ceil\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_integer/lib.rs.html#827\">source</a><a href=\"#method.div_ceil\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"minewars/prelude/num/trait.Integer.html#method.div_ceil\" class=\"fn\">div_ceil</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h4></section></summary><div class='docblock'>Ceiled integer division. <a href=\"minewars/prelude/num/trait.Integer.html#method.div_ceil\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.extended_gcd_lcm\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_integer/lib.rs.html#827\">source</a><a href=\"#method.extended_gcd_lcm\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"minewars/prelude/num/trait.Integer.html#method.extended_gcd_lcm\" class=\"fn\">extended_gcd_lcm</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a>) -&gt; (<a class=\"struct\" href=\"minewars/prelude/num/integer/struct.ExtendedGcd.html\" title=\"struct minewars::prelude::num::integer::ExtendedGcd\">ExtendedGcd</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a>&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a>)</h4></section></summary><div class='docblock'>Greatest common divisor, least common multiple, and Bézout coefficients.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.extended_gcd\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_integer/lib.rs.html#165-167\">source</a><a href=\"#method.extended_gcd\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"minewars/prelude/num/trait.Integer.html#method.extended_gcd\" class=\"fn\">extended_gcd</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;Self</a>) -&gt; <a class=\"struct\" href=\"minewars/prelude/num/integer/struct.ExtendedGcd.html\" title=\"struct minewars::prelude::num::integer::ExtendedGcd\">ExtendedGcd</a>&lt;Self&gt;<span class=\"where fmt-newline\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</span></h4></section></summary><div class='docblock'>Greatest common divisor and Bézout coefficients. <a href=\"minewars/prelude/num/trait.Integer.html#method.extended_gcd\">Read more</a></div></details></div></details>","Integer","minewars::prelude::tokio::net::unix::pid_t"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Roots-for-i32\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_integer/roots.rs.html#167\">source</a><a href=\"#impl-Roots-for-i32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"minewars/prelude/num/integer/trait.Roots.html\" title=\"trait minewars::prelude::num::integer::Roots\">Roots</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.nth_root\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_integer/roots.rs.html#167\">source</a><a href=\"#method.nth_root\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"minewars/prelude/num/integer/trait.Roots.html#tymethod.nth_root\" class=\"fn\">nth_root</a>(&amp;self, n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h4></section></summary><div class='docblock'>Returns the truncated principal <code>n</code>th root of an integer\n– <code>if x &gt;= 0 { ⌊ⁿ√x⌋ } else { ⌈ⁿ√x⌉ }</code> <a href=\"minewars/prelude/num/integer/trait.Roots.html#tymethod.nth_root\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sqrt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_integer/roots.rs.html#167\">source</a><a href=\"#method.sqrt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"minewars/prelude/num/integer/trait.Roots.html#method.sqrt\" class=\"fn\">sqrt</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h4></section></summary><div class='docblock'>Returns the truncated principal square root of an integer – <code>⌊√x⌋</code> <a href=\"minewars/prelude/num/integer/trait.Roots.html#method.sqrt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.cbrt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_integer/roots.rs.html#167\">source</a><a href=\"#method.cbrt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"minewars/prelude/num/integer/trait.Roots.html#method.cbrt\" class=\"fn\">cbrt</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h4></section></summary><div class='docblock'>Returns the truncated principal cube root of an integer –\n<code>if x &gt;= 0 { ⌊∛x⌋ } else { ⌈∛x⌉ }</code> <a href=\"minewars/prelude/num/integer/trait.Roots.html#method.cbrt\">Read more</a></div></details></div></details>","Roots","minewars::prelude::tokio::net::unix::pid_t"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SampleUniform-for-i32\" class=\"impl\"><a class=\"src rightside\" href=\"src/rand/distributions/uniform.rs.html#561\">source</a><a href=\"#impl-SampleUniform-for-i32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"minewars/prelude/rand/distributions/uniform/trait.SampleUniform.html\" title=\"trait minewars::prelude::rand::distributions::uniform::SampleUniform\">SampleUniform</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Sampler\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Sampler\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"minewars/prelude/rand/distributions/uniform/trait.SampleUniform.html#associatedtype.Sampler\" class=\"associatedtype\">Sampler</a> = <a class=\"struct\" href=\"minewars/prelude/rand/distributions/uniform/struct.UniformInt.html\" title=\"struct minewars::prelude::rand::distributions::uniform::UniformInt\">UniformInt</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a>&gt;</h4></section></summary><div class='docblock'>The <code>UniformSampler</code> implementation supporting type <code>X</code>.</div></details></div></details>","SampleUniform","minewars::prelude::tokio::net::unix::pid_t"],["<section id=\"impl-Weight-for-i32\" class=\"impl\"><a class=\"src rightside\" href=\"src/rand/distributions/weighted.rs.html#45\">source</a><a href=\"#impl-Weight-for-i32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"minewars/prelude/rand/distributions/weighted/alias_method/trait.Weight.html\" title=\"trait minewars::prelude::rand::distributions::weighted::alias_method::Weight\">Weight</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h3></section>","Weight","minewars::prelude::tokio::net::unix::pid_t"]],
"mw_app":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Hash-for-i32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/hash/mod.rs.html#832-845\">source</a></span><a href=\"#impl-Hash-for-i32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"mw_app/prelude/trait.Hash.html\" title=\"trait mw_app::prelude::Hash\">Hash</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.75.0/src/core/hash/mod.rs.html#832-845\">source</a><a href=\"#method.hash\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"mw_app/prelude/trait.Hash.html#tymethod.hash\" class=\"fn\">hash</a>&lt;H&gt;(&amp;self, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut H</a>)<span class=\"where fmt-newline\">where\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,</span></h4></section></summary><div class='docblock'>Feeds this value into the given <a href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"mw_app/prelude/trait.Hash.html#tymethod.hash\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash_slice\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.75.0/src/core/hash/mod.rs.html#832-845\">source</a><a href=\"#method.hash_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"mw_app/prelude/trait.Hash.html#method.hash_slice\" class=\"fn\">hash_slice</a>&lt;H&gt;(data: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a>], state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut H</a>)<span class=\"where fmt-newline\">where\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,</span></h4></section></summary><div class='docblock'>Feeds a slice of this type into the given <a href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"mw_app/prelude/trait.Hash.html#method.hash_slice\">Read more</a></div></details></div></details>","Hash","mw_app::prelude::tokio::net::unix::pid_t"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Display-for-i32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/fmt/num.rs.html#466-469\">source</a></span><a href=\"#impl-Display-for-i32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"mw_app/prelude/trait.Display.html\" title=\"trait mw_app::prelude::Display\">Display</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.75.0/src/core/fmt/num.rs.html#466-469\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"mw_app/prelude/trait.Display.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"mw_app/prelude/trait.Display.html#tymethod.fmt\">Read more</a></div></details></div></details>","Display","mw_app::prelude::tokio::net::unix::pid_t"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-i32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/fmt/num.rs.html#201-204\">source</a></span><a href=\"#impl-Debug-for-i32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"mw_app/prelude/trait.Debug.html\" title=\"trait mw_app::prelude::Debug\">Debug</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.75.0/src/core/fmt/num.rs.html#201-204\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"mw_app/prelude/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"mw_app/prelude/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","mw_app::prelude::tokio::net::unix::pid_t"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Serialize-for-i32\" class=\"impl\"><a class=\"src rightside\" href=\"src/serde/ser/impls.rs.html#25\">source</a><a href=\"#impl-Serialize-for-i32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"mw_app/prelude/trait.Serialize.html\" title=\"trait mw_app::prelude::Serialize\">Serialize</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.serialize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/serde/ser/impls.rs.html#25\">source</a><a href=\"#method.serialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"mw_app/prelude/trait.Serialize.html#tymethod.serialize\" class=\"fn\">serialize</a>&lt;S&gt;(\n    &amp;self,\n    serializer: S\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;S as <a class=\"trait\" href=\"serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"serde/ser/trait.Serializer.html#associatedtype.Ok\" title=\"type serde::ser::Serializer::Ok\">Ok</a>, &lt;S as <a class=\"trait\" href=\"serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"serde/ser/trait.Serializer.html#associatedtype.Error\" title=\"type serde::ser::Serializer::Error\">Error</a>&gt;<span class=\"where fmt-newline\">where\n    S: <a class=\"trait\" href=\"serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>,</span></h4></section></summary><div class='docblock'>Serialize this value into the given Serde serializer. <a href=\"mw_app/prelude/trait.Serialize.html#tymethod.serialize\">Read more</a></div></details></div></details>","Serialize","mw_app::prelude::tokio::net::unix::pid_t"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Deserialize%3C'de%3E-for-i32\" class=\"impl\"><a class=\"src rightside\" href=\"src/serde/de/impls.rs.html#315-321\">source</a><a href=\"#impl-Deserialize%3C'de%3E-for-i32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'de&gt; <a class=\"trait\" href=\"mw_app/prelude/trait.Deserialize.html\" title=\"trait mw_app::prelude::Deserialize\">Deserialize</a>&lt;'de&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.deserialize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/serde/de/impls.rs.html#315-321\">source</a><a href=\"#method.deserialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"mw_app/prelude/trait.Deserialize.html#tymethod.deserialize\" class=\"fn\">deserialize</a>&lt;D&gt;(\n    deserializer: D\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a>, &lt;D as <a class=\"trait\" href=\"serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;&gt;::<a class=\"associatedtype\" href=\"serde/de/trait.Deserializer.html#associatedtype.Error\" title=\"type serde::de::Deserializer::Error\">Error</a>&gt;<span class=\"where fmt-newline\">where\n    D: <a class=\"trait\" href=\"serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;,</span></h4></section></summary><div class='docblock'>Deserialize this value from the given Serde deserializer. <a href=\"mw_app/prelude/trait.Deserialize.html#tymethod.deserialize\">Read more</a></div></details></div></details>","Deserialize<'de>","mw_app::prelude::tokio::net::unix::pid_t"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromReflect-for-i32\" class=\"impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/impls/std.rs.html#62\">source</a><a href=\"#impl-FromReflect-for-i32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"mw_app/prelude/trait.FromReflect.html\" title=\"trait mw_app::prelude::FromReflect\">FromReflect</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_reflect\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/impls/std.rs.html#62\">source</a><a href=\"#method.from_reflect\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"mw_app/prelude/trait.FromReflect.html#tymethod.from_reflect\" class=\"fn\">from_reflect</a>(reflect: &amp;(dyn <a class=\"trait\" href=\"mw_app/prelude/trait.Reflect.html\" title=\"trait mw_app::prelude::Reflect\">Reflect</a> + 'static)) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a>&gt;</h4></section></summary><div class='docblock'>Constructs a concrete instance of <code>Self</code> from a reflected value.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take_from_reflect\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/from_reflect.rs.html#38\">source</a><a href=\"#method.take_from_reflect\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"mw_app/prelude/trait.FromReflect.html#method.take_from_reflect\" class=\"fn\">take_from_reflect</a>(\n    reflect: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"mw_app/prelude/trait.Reflect.html\" title=\"trait mw_app::prelude::Reflect\">Reflect</a>&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"mw_app/prelude/trait.Reflect.html\" title=\"trait mw_app::prelude::Reflect\">Reflect</a>&gt;&gt;</h4></section></summary><div class='docblock'>Attempts to downcast the given value to <code>Self</code> using,\nconstructing the value using <a href=\"mw_app/prelude/trait.FromReflect.html#tymethod.from_reflect\" title=\"associated function bevy_reflect::from_reflect::FromReflect::from_reflect::from_reflect\"><code>from_reflect</code></a> if that fails. <a href=\"mw_app/prelude/trait.FromReflect.html#method.take_from_reflect\">Read more</a></div></details></div></details>","FromReflect","mw_app::prelude::tokio::net::unix::pid_t"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Reflect-for-i32\" class=\"impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/impls/std.rs.html#62\">source</a><a href=\"#impl-Reflect-for-i32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"mw_app/prelude/trait.Reflect.html\" title=\"trait mw_app::prelude::Reflect\">Reflect</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.type_name\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/impls/std.rs.html#62\">source</a><a href=\"#method.type_name\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"mw_app/prelude/trait.Reflect.html#tymethod.type_name\" class=\"fn\">type_name</a>(&amp;self) -&gt; &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.str.html\">str</a></h4></section></summary><div class='docblock'>Returns the <a href=\"https://doc.rust-lang.org/1.75.0/core/any/fn.type_name.html\" title=\"fn core::any::type_name\">type name</a> of the underlying type.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_represented_type_info\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/impls/std.rs.html#62\">source</a><a href=\"#method.get_represented_type_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"mw_app/prelude/trait.Reflect.html#tymethod.get_represented_type_info\" class=\"fn\">get_represented_type_info</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;'static <a class=\"enum\" href=\"bevy_reflect/type_info/enum.TypeInfo.html\" title=\"enum bevy_reflect::type_info::TypeInfo\">TypeInfo</a>&gt;</h4></section></summary><div class='docblock'>Returns the <a href=\"bevy_reflect/type_info/enum.TypeInfo.html\" title=\"enum bevy_reflect::type_info::TypeInfo\"><code>TypeInfo</code></a> of the type <em>represented</em> by this value. <a href=\"mw_app/prelude/trait.Reflect.html#tymethod.get_represented_type_info\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_any\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/impls/std.rs.html#62\">source</a><a href=\"#method.into_any\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"mw_app/prelude/trait.Reflect.html#tymethod.into_any\" class=\"fn\">into_any</a>(self: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a>&gt;) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/any/trait.Any.html\" title=\"trait core::any::Any\">Any</a>&gt;</h4></section></summary><div class='docblock'>Returns the value as a <a href=\"https://doc.rust-lang.org/1.75.0/core/any/trait.Any.html\" title=\"trait core::any::Any\"><code>Box&lt;dyn Any&gt;</code></a>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_any\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/impls/std.rs.html#62\">source</a><a href=\"#method.as_any\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"mw_app/prelude/trait.Reflect.html#tymethod.as_any\" class=\"fn\">as_any</a>(&amp;self) -&gt; &amp;(dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/any/trait.Any.html\" title=\"trait core::any::Any\">Any</a> + 'static)</h4></section></summary><div class='docblock'>Returns the value as a <a href=\"https://doc.rust-lang.org/1.75.0/core/any/trait.Any.html\" title=\"trait core::any::Any\"><code>&amp;dyn Any</code></a>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_any_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/impls/std.rs.html#62\">source</a><a href=\"#method.as_any_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"mw_app/prelude/trait.Reflect.html#tymethod.as_any_mut\" class=\"fn\">as_any_mut</a>(&amp;mut self) -&gt; &amp;mut (dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/any/trait.Any.html\" title=\"trait core::any::Any\">Any</a> + 'static)</h4></section></summary><div class='docblock'>Returns the value as a <a href=\"https://doc.rust-lang.org/1.75.0/core/any/trait.Any.html\" title=\"trait core::any::Any\"><code>&amp;mut dyn Any</code></a>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_reflect\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/impls/std.rs.html#62\">source</a><a href=\"#method.into_reflect\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"mw_app/prelude/trait.Reflect.html#tymethod.into_reflect\" class=\"fn\">into_reflect</a>(self: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a>&gt;) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"mw_app/prelude/trait.Reflect.html\" title=\"trait mw_app::prelude::Reflect\">Reflect</a>&gt;</h4></section></summary><div class='docblock'>Casts this type to a boxed reflected value.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_reflect\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/impls/std.rs.html#62\">source</a><a href=\"#method.as_reflect\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"mw_app/prelude/trait.Reflect.html#tymethod.as_reflect\" class=\"fn\">as_reflect</a>(&amp;self) -&gt; &amp;(dyn <a class=\"trait\" href=\"mw_app/prelude/trait.Reflect.html\" title=\"trait mw_app::prelude::Reflect\">Reflect</a> + 'static)</h4></section></summary><div class='docblock'>Casts this type to a reflected value.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_reflect_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/impls/std.rs.html#62\">source</a><a href=\"#method.as_reflect_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"mw_app/prelude/trait.Reflect.html#tymethod.as_reflect_mut\" class=\"fn\">as_reflect_mut</a>(&amp;mut self) -&gt; &amp;mut (dyn <a class=\"trait\" href=\"mw_app/prelude/trait.Reflect.html\" title=\"trait mw_app::prelude::Reflect\">Reflect</a> + 'static)</h4></section></summary><div class='docblock'>Casts this type to a mutable reflected value.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_value\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/impls/std.rs.html#62\">source</a><a href=\"#method.clone_value\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"mw_app/prelude/trait.Reflect.html#tymethod.clone_value\" class=\"fn\">clone_value</a>(&amp;self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"mw_app/prelude/trait.Reflect.html\" title=\"trait mw_app::prelude::Reflect\">Reflect</a>&gt;</h4></section></summary><div class='docblock'>Clones the value as a <code>Reflect</code> trait object. <a href=\"mw_app/prelude/trait.Reflect.html#tymethod.clone_value\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.apply\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/impls/std.rs.html#62\">source</a><a href=\"#method.apply\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"mw_app/prelude/trait.Reflect.html#tymethod.apply\" class=\"fn\">apply</a>(&amp;mut self, value: &amp;(dyn <a class=\"trait\" href=\"mw_app/prelude/trait.Reflect.html\" title=\"trait mw_app::prelude::Reflect\">Reflect</a> + 'static))</h4></section></summary><div class='docblock'>Applies a reflected value to this value. <a href=\"mw_app/prelude/trait.Reflect.html#tymethod.apply\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/impls/std.rs.html#62\">source</a><a href=\"#method.set\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"mw_app/prelude/trait.Reflect.html#tymethod.set\" class=\"fn\">set</a>(&amp;mut self, value: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"mw_app/prelude/trait.Reflect.html\" title=\"trait mw_app::prelude::Reflect\">Reflect</a>&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"mw_app/prelude/trait.Reflect.html\" title=\"trait mw_app::prelude::Reflect\">Reflect</a>&gt;&gt;</h4></section></summary><div class='docblock'>Performs a type-checked assignment of a reflected value to this value. <a href=\"mw_app/prelude/trait.Reflect.html#tymethod.set\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.reflect_ref\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/impls/std.rs.html#62\">source</a><a href=\"#method.reflect_ref\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"mw_app/prelude/trait.Reflect.html#tymethod.reflect_ref\" class=\"fn\">reflect_ref</a>(&amp;self) -&gt; <a class=\"enum\" href=\"bevy_reflect/reflect/enum.ReflectRef.html\" title=\"enum bevy_reflect::reflect::ReflectRef\">ReflectRef</a>&lt;'_&gt;</h4></section></summary><div class='docblock'>Returns an enumeration of “kinds” of type. <a href=\"mw_app/prelude/trait.Reflect.html#tymethod.reflect_ref\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.reflect_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/impls/std.rs.html#62\">source</a><a href=\"#method.reflect_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"mw_app/prelude/trait.Reflect.html#tymethod.reflect_mut\" class=\"fn\">reflect_mut</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"bevy_reflect/reflect/enum.ReflectMut.html\" title=\"enum bevy_reflect::reflect::ReflectMut\">ReflectMut</a>&lt;'_&gt;</h4></section></summary><div class='docblock'>Returns a mutable enumeration of “kinds” of type. <a href=\"mw_app/prelude/trait.Reflect.html#tymethod.reflect_mut\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.reflect_owned\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/impls/std.rs.html#62\">source</a><a href=\"#method.reflect_owned\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"mw_app/prelude/trait.Reflect.html#tymethod.reflect_owned\" class=\"fn\">reflect_owned</a>(self: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a>&gt;) -&gt; <a class=\"enum\" href=\"bevy_reflect/reflect/enum.ReflectOwned.html\" title=\"enum bevy_reflect::reflect::ReflectOwned\">ReflectOwned</a></h4></section></summary><div class='docblock'>Returns an owned enumeration of “kinds” of type. <a href=\"mw_app/prelude/trait.Reflect.html#tymethod.reflect_owned\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.reflect_hash\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/impls/std.rs.html#62\">source</a><a href=\"#method.reflect_hash\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"mw_app/prelude/trait.Reflect.html#method.reflect_hash\" class=\"fn\">reflect_hash</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u64.html\">u64</a>&gt;</h4></section></summary><div class='docblock'>Returns a hash of the value (which includes the type). <a href=\"mw_app/prelude/trait.Reflect.html#method.reflect_hash\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.reflect_partial_eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/impls/std.rs.html#62\">source</a><a href=\"#method.reflect_partial_eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"mw_app/prelude/trait.Reflect.html#method.reflect_partial_eq\" class=\"fn\">reflect_partial_eq</a>(&amp;self, value: &amp;(dyn <a class=\"trait\" href=\"mw_app/prelude/trait.Reflect.html\" title=\"trait mw_app::prelude::Reflect\">Reflect</a> + 'static)) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a>&gt;</h4></section></summary><div class='docblock'>Returns a “partial equality” comparison result. <a href=\"mw_app/prelude/trait.Reflect.html#method.reflect_partial_eq\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.debug\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/impls/std.rs.html#62\">source</a><a href=\"#method.debug\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"mw_app/prelude/trait.Reflect.html#method.debug\" class=\"fn\">debug</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Debug formatter for the value. <a href=\"mw_app/prelude/trait.Reflect.html#method.debug\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.serializable\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/reflect.rs.html#223\">source</a><a href=\"#method.serializable\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"mw_app/prelude/trait.Reflect.html#method.serializable\" class=\"fn\">serializable</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"bevy_reflect/serde/ser/enum.Serializable.html\" title=\"enum bevy_reflect::serde::ser::Serializable\">Serializable</a>&lt;'_&gt;&gt;</h4></section></summary><div class='docblock'>Returns a serializable version of the value. <a href=\"mw_app/prelude/trait.Reflect.html#method.serializable\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_dynamic\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/reflect.rs.html#239\">source</a><a href=\"#method.is_dynamic\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"mw_app/prelude/trait.Reflect.html#method.is_dynamic\" class=\"fn\">is_dynamic</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Indicates whether or not this type is a <em>dynamic</em> type. <a href=\"mw_app/prelude/trait.Reflect.html#method.is_dynamic\">Read more</a></div></details></div></details>","Reflect","mw_app::prelude::tokio::net::unix::pid_t"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OverflowingSub-for-i32\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_traits/ops/overflowing.rs.html#53\">source</a><a href=\"#impl-OverflowingSub-for-i32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"mw_app/prelude/num_traits/ops/overflowing/trait.OverflowingSub.html\" title=\"trait mw_app::prelude::num_traits::ops::overflowing::OverflowingSub\">OverflowingSub</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_sub\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/ops/overflowing.rs.html#53\">source</a><a href=\"#method.overflowing_sub\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"mw_app/prelude/num_traits/ops/overflowing/trait.OverflowingSub.html#tymethod.overflowing_sub\" class=\"fn\">overflowing_sub</a>(&amp;self, v: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a>) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class='docblock'>Returns a tuple of the difference along with a boolean indicating whether an arithmetic overflow would occur.\nIf an overflow would have occurred then the wrapped value is returned.</div></details></div></details>","OverflowingSub","mw_app::prelude::tokio::net::unix::pid_t"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Zero-for-i32\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_traits/identities.rs.html#56\">source</a><a href=\"#impl-Zero-for-i32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"mw_app/prelude/num/trait.Zero.html\" title=\"trait mw_app::prelude::num::Zero\">Zero</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.zero\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/identities.rs.html#56\">source</a><a href=\"#method.zero\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"mw_app/prelude/num/trait.Zero.html#tymethod.zero\" class=\"fn\">zero</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h4></section></summary><div class='docblock'>Returns the additive identity element of <code>Self</code>, <code>0</code>. <a href=\"mw_app/prelude/num/trait.Zero.html#tymethod.zero\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_zero\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/identities.rs.html#56\">source</a><a href=\"#method.is_zero\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"mw_app/prelude/num/trait.Zero.html#tymethod.is_zero\" class=\"fn\">is_zero</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Returns <code>true</code> if <code>self</code> is equal to the additive identity.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_zero\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/identities.rs.html#23\">source</a><a href=\"#method.set_zero\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"mw_app/prelude/num/trait.Zero.html#method.set_zero\" class=\"fn\">set_zero</a>(&amp;mut self)</h4></section></summary><div class='docblock'>Sets <code>self</code> to the additive identity element of <code>Self</code>, <code>0</code>.</div></details></div></details>","Zero","mw_app::prelude::tokio::net::unix::pid_t"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-NumCast-for-i32\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#699\">source</a><a href=\"#impl-NumCast-for-i32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"mw_app/prelude/num/trait.NumCast.html\" title=\"trait mw_app::prelude::num::NumCast\">NumCast</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#699\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"mw_app/prelude/num/trait.NumCast.html#tymethod.from\" class=\"fn\">from</a>&lt;N&gt;(n: N) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a>&gt;<span class=\"where fmt-newline\">where\n    N: <a class=\"trait\" href=\"mw_app/prelude/trait.ToPrimitive.html\" title=\"trait mw_app::prelude::ToPrimitive\">ToPrimitive</a>,</span></h4></section></summary><div class='docblock'>Creates a number from another value that can be converted into\na primitive via the <code>ToPrimitive</code> trait. If the source value cannot be\nrepresented by the target type, then <code>None</code> is returned. <a href=\"mw_app/prelude/num/trait.NumCast.html#tymethod.from\">Read more</a></div></details></div></details>","NumCast","mw_app::prelude::tokio::net::unix::pid_t"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedNeg-for-i32\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_traits/ops/checked.rs.html#181\">source</a><a href=\"#impl-CheckedNeg-for-i32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"mw_app/prelude/num/traits/trait.CheckedNeg.html\" title=\"trait mw_app::prelude::num::traits::CheckedNeg\">CheckedNeg</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_neg\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/ops/checked.rs.html#181\">source</a><a href=\"#method.checked_neg\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"mw_app/prelude/num/traits/trait.CheckedNeg.html#tymethod.checked_neg\" class=\"fn\">checked_neg</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a>&gt;</h4></section></summary><div class='docblock'>Negates a number, returning <code>None</code> for results that can’t be represented, like signed <code>MIN</code>\nvalues that can’t be positive, or non-zero unsigned values that can’t be negative. <a href=\"mw_app/prelude/num/traits/trait.CheckedNeg.html#tymethod.checked_neg\">Read more</a></div></details></div></details>","CheckedNeg","mw_app::prelude::tokio::net::unix::pid_t"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedRem-for-i32\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_traits/ops/checked.rs.html#135\">source</a><a href=\"#impl-CheckedRem-for-i32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"mw_app/prelude/num/traits/trait.CheckedRem.html\" title=\"trait mw_app::prelude::num::traits::CheckedRem\">CheckedRem</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_rem\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/ops/checked.rs.html#135\">source</a><a href=\"#method.checked_rem\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"mw_app/prelude/num/traits/trait.CheckedRem.html#tymethod.checked_rem\" class=\"fn\">checked_rem</a>(&amp;self, v: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a>&gt;</h4></section></summary><div class='docblock'>Finds the remainder of dividing two numbers, checking for underflow, overflow and division\nby zero. If any of that happens, <code>None</code> is returned. <a href=\"mw_app/prelude/num/traits/trait.CheckedRem.html#tymethod.checked_rem\">Read more</a></div></details></div></details>","CheckedRem","mw_app::prelude::tokio::net::unix::pid_t"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WrappingNeg-for-i32\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_traits/ops/wrapping.rs.html#127\">source</a><a href=\"#impl-WrappingNeg-for-i32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"mw_app/prelude/num/traits/trait.WrappingNeg.html\" title=\"trait mw_app::prelude::num::traits::WrappingNeg\">WrappingNeg</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_neg\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/ops/wrapping.rs.html#127\">source</a><a href=\"#method.wrapping_neg\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"mw_app/prelude/num/traits/trait.WrappingNeg.html#tymethod.wrapping_neg\" class=\"fn\">wrapping_neg</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h4></section></summary><div class='docblock'>Wrapping (modular) negation. Computes <code>-self</code>,\nwrapping around at the boundary of the type. <a href=\"mw_app/prelude/num/traits/trait.WrappingNeg.html#tymethod.wrapping_neg\">Read more</a></div></details></div></details>","WrappingNeg","mw_app::prelude::tokio::net::unix::pid_t"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PrimInt-for-i32\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_traits/int.rs.html#507\">source</a><a href=\"#impl-PrimInt-for-i32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"mw_app/prelude/num/trait.PrimInt.html\" title=\"trait mw_app::prelude::num::PrimInt\">PrimInt</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.count_ones\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/int.rs.html#507\">source</a><a href=\"#method.count_ones\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"mw_app/prelude/num/trait.PrimInt.html#tymethod.count_ones\" class=\"fn\">count_ones</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Returns the number of ones in the binary representation of <code>self</code>. <a href=\"mw_app/prelude/num/trait.PrimInt.html#tymethod.count_ones\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.count_zeros\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/int.rs.html#507\">source</a><a href=\"#method.count_zeros\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"mw_app/prelude/num/trait.PrimInt.html#tymethod.count_zeros\" class=\"fn\">count_zeros</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Returns the number of zeros in the binary representation of <code>self</code>. <a href=\"mw_app/prelude/num/trait.PrimInt.html#tymethod.count_zeros\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.leading_ones\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/int.rs.html#507\">source</a><a href=\"#method.leading_ones\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"mw_app/prelude/num/trait.PrimInt.html#method.leading_ones\" class=\"fn\">leading_ones</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Returns the number of leading ones in the binary representation\nof <code>self</code>. <a href=\"mw_app/prelude/num/trait.PrimInt.html#method.leading_ones\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.leading_zeros\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/int.rs.html#507\">source</a><a href=\"#method.leading_zeros\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"mw_app/prelude/num/trait.PrimInt.html#tymethod.leading_zeros\" class=\"fn\">leading_zeros</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Returns the number of leading zeros in the binary representation\nof <code>self</code>. <a href=\"mw_app/prelude/num/trait.PrimInt.html#tymethod.leading_zeros\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.trailing_ones\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/int.rs.html#507\">source</a><a href=\"#method.trailing_ones\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"mw_app/prelude/num/trait.PrimInt.html#method.trailing_ones\" class=\"fn\">trailing_ones</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Returns the number of trailing ones in the binary representation\nof <code>self</code>. <a href=\"mw_app/prelude/num/trait.PrimInt.html#method.trailing_ones\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.trailing_zeros\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/int.rs.html#507\">source</a><a href=\"#method.trailing_zeros\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"mw_app/prelude/num/trait.PrimInt.html#tymethod.trailing_zeros\" class=\"fn\">trailing_zeros</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Returns the number of trailing zeros in the binary representation\nof <code>self</code>. <a href=\"mw_app/prelude/num/trait.PrimInt.html#tymethod.trailing_zeros\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.rotate_left\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/int.rs.html#507\">source</a><a href=\"#method.rotate_left\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"mw_app/prelude/num/trait.PrimInt.html#tymethod.rotate_left\" class=\"fn\">rotate_left</a>(self, n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h4></section></summary><div class='docblock'>Shifts the bits to the left by a specified amount, <code>n</code>, wrapping\nthe truncated bits to the end of the resulting integer. <a href=\"mw_app/prelude/num/trait.PrimInt.html#tymethod.rotate_left\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.rotate_right\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/int.rs.html#507\">source</a><a href=\"#method.rotate_right\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"mw_app/prelude/num/trait.PrimInt.html#tymethod.rotate_right\" class=\"fn\">rotate_right</a>(self, n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h4></section></summary><div class='docblock'>Shifts the bits to the right by a specified amount, <code>n</code>, wrapping\nthe truncated bits to the beginning of the resulting integer. <a href=\"mw_app/prelude/num/trait.PrimInt.html#tymethod.rotate_right\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.signed_shl\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/int.rs.html#507\">source</a><a href=\"#method.signed_shl\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"mw_app/prelude/num/trait.PrimInt.html#tymethod.signed_shl\" class=\"fn\">signed_shl</a>(self, n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h4></section></summary><div class='docblock'>Shifts the bits to the left by a specified amount, <code>n</code>, filling\nzeros in the least significant bits. <a href=\"mw_app/prelude/num/trait.PrimInt.html#tymethod.signed_shl\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.signed_shr\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/int.rs.html#507\">source</a><a href=\"#method.signed_shr\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"mw_app/prelude/num/trait.PrimInt.html#tymethod.signed_shr\" class=\"fn\">signed_shr</a>(self, n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h4></section></summary><div class='docblock'>Shifts the bits to the right by a specified amount, <code>n</code>, copying\nthe “sign bit” in the most significant bits even for unsigned types. <a href=\"mw_app/prelude/num/trait.PrimInt.html#tymethod.signed_shr\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unsigned_shl\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/int.rs.html#507\">source</a><a href=\"#method.unsigned_shl\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"mw_app/prelude/num/trait.PrimInt.html#tymethod.unsigned_shl\" class=\"fn\">unsigned_shl</a>(self, n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h4></section></summary><div class='docblock'>Shifts the bits to the left by a specified amount, <code>n</code>, filling\nzeros in the least significant bits. <a href=\"mw_app/prelude/num/trait.PrimInt.html#tymethod.unsigned_shl\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unsigned_shr\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/int.rs.html#507\">source</a><a href=\"#method.unsigned_shr\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"mw_app/prelude/num/trait.PrimInt.html#tymethod.unsigned_shr\" class=\"fn\">unsigned_shr</a>(self, n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h4></section></summary><div class='docblock'>Shifts the bits to the right by a specified amount, <code>n</code>, filling\nzeros in the most significant bits. <a href=\"mw_app/prelude/num/trait.PrimInt.html#tymethod.unsigned_shr\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.swap_bytes\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/int.rs.html#507\">source</a><a href=\"#method.swap_bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"mw_app/prelude/num/trait.PrimInt.html#tymethod.swap_bytes\" class=\"fn\">swap_bytes</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h4></section></summary><div class='docblock'>Reverses the byte order of the integer. <a href=\"mw_app/prelude/num/trait.PrimInt.html#tymethod.swap_bytes\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.reverse_bits\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/int.rs.html#507\">source</a><a href=\"#method.reverse_bits\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"mw_app/prelude/num/trait.PrimInt.html#method.reverse_bits\" class=\"fn\">reverse_bits</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h4></section></summary><div class='docblock'>Reverses the order of bits in the integer. <a href=\"mw_app/prelude/num/trait.PrimInt.html#method.reverse_bits\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_be\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/int.rs.html#507\">source</a><a href=\"#method.from_be\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"mw_app/prelude/num/trait.PrimInt.html#tymethod.from_be\" class=\"fn\">from_be</a>(x: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h4></section></summary><div class='docblock'>Convert an integer from big endian to the target’s endianness. <a href=\"mw_app/prelude/num/trait.PrimInt.html#tymethod.from_be\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_le\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/int.rs.html#507\">source</a><a href=\"#method.from_le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"mw_app/prelude/num/trait.PrimInt.html#tymethod.from_le\" class=\"fn\">from_le</a>(x: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h4></section></summary><div class='docblock'>Convert an integer from little endian to the target’s endianness. <a href=\"mw_app/prelude/num/trait.PrimInt.html#tymethod.from_le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_be\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/int.rs.html#507\">source</a><a href=\"#method.to_be\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"mw_app/prelude/num/trait.PrimInt.html#tymethod.to_be\" class=\"fn\">to_be</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h4></section></summary><div class='docblock'>Convert <code>self</code> to big endian from the target’s endianness. <a href=\"mw_app/prelude/num/trait.PrimInt.html#tymethod.to_be\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_le\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/int.rs.html#507\">source</a><a href=\"#method.to_le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"mw_app/prelude/num/trait.PrimInt.html#tymethod.to_le\" class=\"fn\">to_le</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h4></section></summary><div class='docblock'>Convert <code>self</code> to little endian from the target’s endianness. <a href=\"mw_app/prelude/num/trait.PrimInt.html#tymethod.to_le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.pow\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/int.rs.html#507\">source</a><a href=\"#method.pow\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"mw_app/prelude/num/trait.PrimInt.html#tymethod.pow\" class=\"fn\">pow</a>(self, exp: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h4></section></summary><div class='docblock'>Raises self to the power of <code>exp</code>, using exponentiation by squaring. <a href=\"mw_app/prelude/num/trait.PrimInt.html#tymethod.pow\">Read more</a></div></details></div></details>","PrimInt","mw_app::prelude::tokio::net::unix::pid_t"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WrappingMul-for-i32\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_traits/ops/wrapping.rs.html#81\">source</a><a href=\"#impl-WrappingMul-for-i32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"mw_app/prelude/num/traits/trait.WrappingMul.html\" title=\"trait mw_app::prelude::num::traits::WrappingMul\">WrappingMul</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_mul\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/ops/wrapping.rs.html#81\">source</a><a href=\"#method.wrapping_mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"mw_app/prelude/num/traits/trait.WrappingMul.html#tymethod.wrapping_mul\" class=\"fn\">wrapping_mul</a>(&amp;self, v: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h4></section></summary><div class='docblock'>Wrapping (modular) multiplication. Computes <code>self * other</code>, wrapping around at the boundary\nof the type.</div></details></div></details>","WrappingMul","mw_app::prelude::tokio::net::unix::pid_t"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedSub-for-i32\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_traits/ops/checked.rs.html#52\">source</a><a href=\"#impl-CheckedSub-for-i32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"mw_app/prelude/num/trait.CheckedSub.html\" title=\"trait mw_app::prelude::num::CheckedSub\">CheckedSub</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_sub\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/ops/checked.rs.html#52\">source</a><a href=\"#method.checked_sub\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"mw_app/prelude/num/trait.CheckedSub.html#tymethod.checked_sub\" class=\"fn\">checked_sub</a>(&amp;self, v: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a>&gt;</h4></section></summary><div class='docblock'>Subtracts two numbers, checking for underflow. If underflow happens,\n<code>None</code> is returned.</div></details></div></details>","CheckedSub","mw_app::prelude::tokio::net::unix::pid_t"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedAdd-for-i32\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_traits/ops/checked.rs.html#31\">source</a><a href=\"#impl-CheckedAdd-for-i32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"mw_app/prelude/num/trait.CheckedAdd.html\" title=\"trait mw_app::prelude::num::CheckedAdd\">CheckedAdd</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_add\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/ops/checked.rs.html#31\">source</a><a href=\"#method.checked_add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"mw_app/prelude/num/trait.CheckedAdd.html#tymethod.checked_add\" class=\"fn\">checked_add</a>(&amp;self, v: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a>&gt;</h4></section></summary><div class='docblock'>Adds two numbers, checking for overflow. If overflow happens, <code>None</code> is\nreturned.</div></details></div></details>","CheckedAdd","mw_app::prelude::tokio::net::unix::pid_t"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SaturatingSub-for-i32\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_traits/ops/saturating.rs.html#82\">source</a><a href=\"#impl-SaturatingSub-for-i32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"mw_app/prelude/num/traits/trait.SaturatingSub.html\" title=\"trait mw_app::prelude::num::traits::SaturatingSub\">SaturatingSub</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_sub\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/ops/saturating.rs.html#82\">source</a><a href=\"#method.saturating_sub\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"mw_app/prelude/num/traits/trait.SaturatingSub.html#tymethod.saturating_sub\" class=\"fn\">saturating_sub</a>(&amp;self, v: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h4></section></summary><div class='docblock'>Saturating subtraction. Computes <code>self - other</code>, saturating at the relevant high or low boundary of\nthe type.</div></details></div></details>","SaturatingSub","mw_app::prelude::tokio::net::unix::pid_t"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Signed-for-i32\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_traits/sign.rs.html#75\">source</a><a href=\"#impl-Signed-for-i32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"mw_app/prelude/num/trait.Signed.html\" title=\"trait mw_app::prelude::num::Signed\">Signed</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.abs\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/sign.rs.html#75\">source</a><a href=\"#method.abs\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"mw_app/prelude/num/trait.Signed.html#tymethod.abs\" class=\"fn\">abs</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h4></section></summary><div class='docblock'>Computes the absolute value. <a href=\"mw_app/prelude/num/trait.Signed.html#tymethod.abs\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.abs_sub\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/sign.rs.html#75\">source</a><a href=\"#method.abs_sub\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"mw_app/prelude/num/trait.Signed.html#tymethod.abs_sub\" class=\"fn\">abs_sub</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h4></section></summary><div class='docblock'>The positive difference of two numbers. <a href=\"mw_app/prelude/num/trait.Signed.html#tymethod.abs_sub\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.signum\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/sign.rs.html#75\">source</a><a href=\"#method.signum\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"mw_app/prelude/num/trait.Signed.html#tymethod.signum\" class=\"fn\">signum</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h4></section></summary><div class='docblock'>Returns the sign of the number. <a href=\"mw_app/prelude/num/trait.Signed.html#tymethod.signum\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_positive\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/sign.rs.html#75\">source</a><a href=\"#method.is_positive\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"mw_app/prelude/num/trait.Signed.html#tymethod.is_positive\" class=\"fn\">is_positive</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Returns true if the number is positive and false if the number is zero or negative.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_negative\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/sign.rs.html#75\">source</a><a href=\"#method.is_negative\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"mw_app/prelude/num/trait.Signed.html#tymethod.is_negative\" class=\"fn\">is_negative</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Returns true if the number is negative and false if the number is zero or positive.</div></details></div></details>","Signed","mw_app::prelude::tokio::net::unix::pid_t"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ToBytes-for-i32\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_traits/ops/bytes.rs.html#333\">source</a><a href=\"#impl-ToBytes-for-i32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"mw_app/prelude/num/traits/trait.ToBytes.html\" title=\"trait mw_app::prelude::num::traits::ToBytes\">ToBytes</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Bytes\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"mw_app/prelude/num/traits/trait.ToBytes.html#associatedtype.Bytes\" class=\"associatedtype\">Bytes</a> = [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">4</a>]</h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_be_bytes\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/ops/bytes.rs.html#333\">source</a><a href=\"#method.to_be_bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"mw_app/prelude/num/traits/trait.ToBytes.html#tymethod.to_be_bytes\" class=\"fn\">to_be_bytes</a>(&amp;self) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a> as <a class=\"trait\" href=\"mw_app/prelude/num/traits/trait.ToBytes.html\" title=\"trait mw_app::prelude::num::traits::ToBytes\">ToBytes</a>&gt;::<a class=\"associatedtype\" href=\"mw_app/prelude/num/traits/trait.ToBytes.html#associatedtype.Bytes\" title=\"type mw_app::prelude::num::traits::ToBytes::Bytes\">Bytes</a></h4></section></summary><div class='docblock'>Return the memory representation of this number as a byte array in big-endian byte order. <a href=\"mw_app/prelude/num/traits/trait.ToBytes.html#tymethod.to_be_bytes\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_le_bytes\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/ops/bytes.rs.html#333\">source</a><a href=\"#method.to_le_bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"mw_app/prelude/num/traits/trait.ToBytes.html#tymethod.to_le_bytes\" class=\"fn\">to_le_bytes</a>(&amp;self) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a> as <a class=\"trait\" href=\"mw_app/prelude/num/traits/trait.ToBytes.html\" title=\"trait mw_app::prelude::num::traits::ToBytes\">ToBytes</a>&gt;::<a class=\"associatedtype\" href=\"mw_app/prelude/num/traits/trait.ToBytes.html#associatedtype.Bytes\" title=\"type mw_app::prelude::num::traits::ToBytes::Bytes\">Bytes</a></h4></section></summary><div class='docblock'>Return the memory representation of this number as a byte array in little-endian byte order. <a href=\"mw_app/prelude/num/traits/trait.ToBytes.html#tymethod.to_le_bytes\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_ne_bytes\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/ops/bytes.rs.html#333\">source</a><a href=\"#method.to_ne_bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"mw_app/prelude/num/traits/trait.ToBytes.html#method.to_ne_bytes\" class=\"fn\">to_ne_bytes</a>(&amp;self) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a> as <a class=\"trait\" href=\"mw_app/prelude/num/traits/trait.ToBytes.html\" title=\"trait mw_app::prelude::num::traits::ToBytes\">ToBytes</a>&gt;::<a class=\"associatedtype\" href=\"mw_app/prelude/num/traits/trait.ToBytes.html#associatedtype.Bytes\" title=\"type mw_app::prelude::num::traits::ToBytes::Bytes\">Bytes</a></h4></section></summary><div class='docblock'>Return the memory representation of this number as a byte array in native byte order. <a href=\"mw_app/prelude/num/traits/trait.ToBytes.html#method.to_ne_bytes\">Read more</a></div></details></div></details>","ToBytes","mw_app::prelude::tokio::net::unix::pid_t"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ToPrimitive-for-i32\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#195\">source</a><a href=\"#impl-ToPrimitive-for-i32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"mw_app/prelude/trait.ToPrimitive.html\" title=\"trait mw_app::prelude::ToPrimitive\">ToPrimitive</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_isize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#195\">source</a><a href=\"#method.to_isize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"mw_app/prelude/trait.ToPrimitive.html#method.to_isize\" class=\"fn\">to_isize</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.isize.html\">isize</a>&gt;</h4></section></summary><div class='docblock'>Converts the value of <code>self</code> to an <code>isize</code>. If the value cannot be\nrepresented by an <code>isize</code>, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_i8\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#195\">source</a><a href=\"#method.to_i8\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"mw_app/prelude/trait.ToPrimitive.html#method.to_i8\" class=\"fn\">to_i8</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i8.html\">i8</a>&gt;</h4></section></summary><div class='docblock'>Converts the value of <code>self</code> to an <code>i8</code>. If the value cannot be\nrepresented by an <code>i8</code>, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_i16\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#195\">source</a><a href=\"#method.to_i16\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"mw_app/prelude/trait.ToPrimitive.html#method.to_i16\" class=\"fn\">to_i16</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i16.html\">i16</a>&gt;</h4></section></summary><div class='docblock'>Converts the value of <code>self</code> to an <code>i16</code>. If the value cannot be\nrepresented by an <code>i16</code>, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_i32\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#195\">source</a><a href=\"#method.to_i32\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"mw_app/prelude/trait.ToPrimitive.html#method.to_i32\" class=\"fn\">to_i32</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a>&gt;</h4></section></summary><div class='docblock'>Converts the value of <code>self</code> to an <code>i32</code>. If the value cannot be\nrepresented by an <code>i32</code>, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_i64\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#195\">source</a><a href=\"#method.to_i64\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"mw_app/prelude/trait.ToPrimitive.html#tymethod.to_i64\" class=\"fn\">to_i64</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i64.html\">i64</a>&gt;</h4></section></summary><div class='docblock'>Converts the value of <code>self</code> to an <code>i64</code>. If the value cannot be\nrepresented by an <code>i64</code>, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_i128\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#195\">source</a><a href=\"#method.to_i128\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"mw_app/prelude/trait.ToPrimitive.html#method.to_i128\" class=\"fn\">to_i128</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i128.html\">i128</a>&gt;</h4></section></summary><div class='docblock'>Converts the value of <code>self</code> to an <code>i128</code>. If the value cannot be\nrepresented by an <code>i128</code> (<code>i64</code> under the default implementation), then\n<code>None</code> is returned. <a href=\"mw_app/prelude/trait.ToPrimitive.html#method.to_i128\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_usize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#195\">source</a><a href=\"#method.to_usize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"mw_app/prelude/trait.ToPrimitive.html#method.to_usize\" class=\"fn\">to_usize</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a>&gt;</h4></section></summary><div class='docblock'>Converts the value of <code>self</code> to a <code>usize</code>. If the value cannot be\nrepresented by a <code>usize</code>, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_u8\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#195\">source</a><a href=\"#method.to_u8\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"mw_app/prelude/trait.ToPrimitive.html#method.to_u8\" class=\"fn\">to_u8</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>&gt;</h4></section></summary><div class='docblock'>Converts the value of <code>self</code> to a <code>u8</code>. If the value cannot be\nrepresented by a <code>u8</code>, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_u16\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#195\">source</a><a href=\"#method.to_u16\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"mw_app/prelude/trait.ToPrimitive.html#method.to_u16\" class=\"fn\">to_u16</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u16.html\">u16</a>&gt;</h4></section></summary><div class='docblock'>Converts the value of <code>self</code> to a <code>u16</code>. If the value cannot be\nrepresented by a <code>u16</code>, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_u32\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#195\">source</a><a href=\"#method.to_u32\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"mw_app/prelude/trait.ToPrimitive.html#method.to_u32\" class=\"fn\">to_u32</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class='docblock'>Converts the value of <code>self</code> to a <code>u32</code>. If the value cannot be\nrepresented by a <code>u32</code>, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_u64\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#195\">source</a><a href=\"#method.to_u64\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"mw_app/prelude/trait.ToPrimitive.html#tymethod.to_u64\" class=\"fn\">to_u64</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u64.html\">u64</a>&gt;</h4></section></summary><div class='docblock'>Converts the value of <code>self</code> to a <code>u64</code>. If the value cannot be\nrepresented by a <code>u64</code>, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_u128\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#195\">source</a><a href=\"#method.to_u128\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"mw_app/prelude/trait.ToPrimitive.html#method.to_u128\" class=\"fn\">to_u128</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u128.html\">u128</a>&gt;</h4></section></summary><div class='docblock'>Converts the value of <code>self</code> to a <code>u128</code>. If the value cannot be\nrepresented by a <code>u128</code> (<code>u64</code> under the default implementation), then\n<code>None</code> is returned. <a href=\"mw_app/prelude/trait.ToPrimitive.html#method.to_u128\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_f32\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#195\">source</a><a href=\"#method.to_f32\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"mw_app/prelude/trait.ToPrimitive.html#method.to_f32\" class=\"fn\">to_f32</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.f32.html\">f32</a>&gt;</h4></section></summary><div class='docblock'>Converts the value of <code>self</code> to an <code>f32</code>. Overflows may map to positive\nor negative inifinity, otherwise <code>None</code> is returned if the value cannot\nbe represented by an <code>f32</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_f64\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#195\">source</a><a href=\"#method.to_f64\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"mw_app/prelude/trait.ToPrimitive.html#method.to_f64\" class=\"fn\">to_f64</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.f64.html\">f64</a>&gt;</h4></section></summary><div class='docblock'>Converts the value of <code>self</code> to an <code>f64</code>. Overflows may map to positive\nor negative inifinity, otherwise <code>None</code> is returned if the value cannot\nbe represented by an <code>f64</code>. <a href=\"mw_app/prelude/trait.ToPrimitive.html#method.to_f64\">Read more</a></div></details></div></details>","ToPrimitive","mw_app::prelude::tokio::net::unix::pid_t"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OverflowingAdd-for-i32\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_traits/ops/overflowing.rs.html#32\">source</a><a href=\"#impl-OverflowingAdd-for-i32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"mw_app/prelude/num_traits/ops/overflowing/trait.OverflowingAdd.html\" title=\"trait mw_app::prelude::num_traits::ops::overflowing::OverflowingAdd\">OverflowingAdd</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_add\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/ops/overflowing.rs.html#32\">source</a><a href=\"#method.overflowing_add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"mw_app/prelude/num_traits/ops/overflowing/trait.OverflowingAdd.html#tymethod.overflowing_add\" class=\"fn\">overflowing_add</a>(&amp;self, v: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a>) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class='docblock'>Returns a tuple of the sum along with a boolean indicating whether an arithmetic overflow would occur.\nIf an overflow would have occurred then the wrapped value is returned.</div></details></div></details>","OverflowingAdd","mw_app::prelude::tokio::net::unix::pid_t"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-One-for-i32\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_traits/identities.rs.html#143\">source</a><a href=\"#impl-One-for-i32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"mw_app/prelude/num/trait.One.html\" title=\"trait mw_app::prelude::num::One\">One</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.one\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/identities.rs.html#143\">source</a><a href=\"#method.one\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"mw_app/prelude/num/trait.One.html#tymethod.one\" class=\"fn\">one</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h4></section></summary><div class='docblock'>Returns the multiplicative identity element of <code>Self</code>, <code>1</code>. <a href=\"mw_app/prelude/num/trait.One.html#tymethod.one\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_one\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/identities.rs.html#143\">source</a><a href=\"#method.is_one\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"mw_app/prelude/num/trait.One.html#method.is_one\" class=\"fn\">is_one</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Returns <code>true</code> if <code>self</code> is equal to the multiplicative identity. <a href=\"mw_app/prelude/num/trait.One.html#method.is_one\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_one\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/identities.rs.html#100\">source</a><a href=\"#method.set_one\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"mw_app/prelude/num/trait.One.html#method.set_one\" class=\"fn\">set_one</a>(&amp;mut self)</h4></section></summary><div class='docblock'>Sets <code>self</code> to the multiplicative identity element of <code>Self</code>, <code>1</code>.</div></details></div></details>","One","mw_app::prelude::tokio::net::unix::pid_t"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WrappingShl-for-i32\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_traits/ops/wrapping.rs.html#171\">source</a><a href=\"#impl-WrappingShl-for-i32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"mw_app/prelude/num/traits/trait.WrappingShl.html\" title=\"trait mw_app::prelude::num::traits::WrappingShl\">WrappingShl</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_shl\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/ops/wrapping.rs.html#171\">source</a><a href=\"#method.wrapping_shl\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"mw_app/prelude/num/traits/trait.WrappingShl.html#tymethod.wrapping_shl\" class=\"fn\">wrapping_shl</a>(&amp;self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h4></section></summary><div class='docblock'>Panic-free bitwise shift-left; yields <code>self &lt;&lt; mask(rhs)</code>,\nwhere <code>mask</code> removes any high order bits of <code>rhs</code> that would\ncause the shift to exceed the bitwidth of the type. <a href=\"mw_app/prelude/num/traits/trait.WrappingShl.html#tymethod.wrapping_shl\">Read more</a></div></details></div></details>","WrappingShl","mw_app::prelude::tokio::net::unix::pid_t"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pow%3C%26u8%3E-for-i32\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_traits/pow.rs.html#89\">source</a><a href=\"#impl-Pow%3C%26u8%3E-for-i32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a&gt; <a class=\"trait\" href=\"mw_app/prelude/num/traits/trait.Pow.html\" title=\"trait mw_app::prelude::num::traits::Pow\">Pow</a>&lt;&amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"mw_app/prelude/num/traits/trait.Pow.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h4></section></summary><div class='docblock'>The result after applying the operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.pow\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/pow.rs.html#89\">source</a><a href=\"#method.pow\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"mw_app/prelude/num/traits/trait.Pow.html#tymethod.pow\" class=\"fn\">pow</a>(self, rhs: &amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h4></section></summary><div class='docblock'>Returns <code>self</code> to the power <code>rhs</code>. <a href=\"mw_app/prelude/num/traits/trait.Pow.html#tymethod.pow\">Read more</a></div></details></div></details>","Pow<&'a u8>","mw_app::prelude::tokio::net::unix::pid_t"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pow%3C%26u16%3E-for-i32\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_traits/pow.rs.html#90\">source</a><a href=\"#impl-Pow%3C%26u16%3E-for-i32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a&gt; <a class=\"trait\" href=\"mw_app/prelude/num/traits/trait.Pow.html\" title=\"trait mw_app::prelude::num::traits::Pow\">Pow</a>&lt;&amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u16.html\">u16</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"mw_app/prelude/num/traits/trait.Pow.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h4></section></summary><div class='docblock'>The result after applying the operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.pow\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/pow.rs.html#90\">source</a><a href=\"#method.pow\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"mw_app/prelude/num/traits/trait.Pow.html#tymethod.pow\" class=\"fn\">pow</a>(self, rhs: &amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u16.html\">u16</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h4></section></summary><div class='docblock'>Returns <code>self</code> to the power <code>rhs</code>. <a href=\"mw_app/prelude/num/traits/trait.Pow.html#tymethod.pow\">Read more</a></div></details></div></details>","Pow<&'a u16>","mw_app::prelude::tokio::net::unix::pid_t"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pow%3Cu16%3E-for-i32\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_traits/pow.rs.html#90\">source</a><a href=\"#impl-Pow%3Cu16%3E-for-i32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"mw_app/prelude/num/traits/trait.Pow.html\" title=\"trait mw_app::prelude::num::traits::Pow\">Pow</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u16.html\">u16</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"mw_app/prelude/num/traits/trait.Pow.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h4></section></summary><div class='docblock'>The result after applying the operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.pow\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/pow.rs.html#90\">source</a><a href=\"#method.pow\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"mw_app/prelude/num/traits/trait.Pow.html#tymethod.pow\" class=\"fn\">pow</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u16.html\">u16</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h4></section></summary><div class='docblock'>Returns <code>self</code> to the power <code>rhs</code>. <a href=\"mw_app/prelude/num/traits/trait.Pow.html#tymethod.pow\">Read more</a></div></details></div></details>","Pow<u16>","mw_app::prelude::tokio::net::unix::pid_t"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pow%3C%26u32%3E-for-i32\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_traits/pow.rs.html#91\">source</a><a href=\"#impl-Pow%3C%26u32%3E-for-i32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a&gt; <a class=\"trait\" href=\"mw_app/prelude/num/traits/trait.Pow.html\" title=\"trait mw_app::prelude::num::traits::Pow\">Pow</a>&lt;&amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u32.html\">u32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"mw_app/prelude/num/traits/trait.Pow.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h4></section></summary><div class='docblock'>The result after applying the operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.pow\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/pow.rs.html#91\">source</a><a href=\"#method.pow\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"mw_app/prelude/num/traits/trait.Pow.html#tymethod.pow\" class=\"fn\">pow</a>(self, rhs: &amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h4></section></summary><div class='docblock'>Returns <code>self</code> to the power <code>rhs</code>. <a href=\"mw_app/prelude/num/traits/trait.Pow.html#tymethod.pow\">Read more</a></div></details></div></details>","Pow<&'a u32>","mw_app::prelude::tokio::net::unix::pid_t"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pow%3C%26usize%3E-for-i32\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_traits/pow.rs.html#92\">source</a><a href=\"#impl-Pow%3C%26usize%3E-for-i32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a&gt; <a class=\"trait\" href=\"mw_app/prelude/num/traits/trait.Pow.html\" title=\"trait mw_app::prelude::num::traits::Pow\">Pow</a>&lt;&amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"mw_app/prelude/num/traits/trait.Pow.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h4></section></summary><div class='docblock'>The result after applying the operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.pow\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/pow.rs.html#92\">source</a><a href=\"#method.pow\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"mw_app/prelude/num/traits/trait.Pow.html#tymethod.pow\" class=\"fn\">pow</a>(self, rhs: &amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h4></section></summary><div class='docblock'>Returns <code>self</code> to the power <code>rhs</code>. <a href=\"mw_app/prelude/num/traits/trait.Pow.html#tymethod.pow\">Read more</a></div></details></div></details>","Pow<&'a usize>","mw_app::prelude::tokio::net::unix::pid_t"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pow%3Cu32%3E-for-i32\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_traits/pow.rs.html#91\">source</a><a href=\"#impl-Pow%3Cu32%3E-for-i32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"mw_app/prelude/num/traits/trait.Pow.html\" title=\"trait mw_app::prelude::num::traits::Pow\">Pow</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u32.html\">u32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"mw_app/prelude/num/traits/trait.Pow.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h4></section></summary><div class='docblock'>The result after applying the operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.pow\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/pow.rs.html#91\">source</a><a href=\"#method.pow\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"mw_app/prelude/num/traits/trait.Pow.html#tymethod.pow\" class=\"fn\">pow</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h4></section></summary><div class='docblock'>Returns <code>self</code> to the power <code>rhs</code>. <a href=\"mw_app/prelude/num/traits/trait.Pow.html#tymethod.pow\">Read more</a></div></details></div></details>","Pow<u32>","mw_app::prelude::tokio::net::unix::pid_t"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pow%3Cu8%3E-for-i32\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_traits/pow.rs.html#89\">source</a><a href=\"#impl-Pow%3Cu8%3E-for-i32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"mw_app/prelude/num/traits/trait.Pow.html\" title=\"trait mw_app::prelude::num::traits::Pow\">Pow</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"mw_app/prelude/num/traits/trait.Pow.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h4></section></summary><div class='docblock'>The result after applying the operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.pow\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/pow.rs.html#89\">source</a><a href=\"#method.pow\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"mw_app/prelude/num/traits/trait.Pow.html#tymethod.pow\" class=\"fn\">pow</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h4></section></summary><div class='docblock'>Returns <code>self</code> to the power <code>rhs</code>. <a href=\"mw_app/prelude/num/traits/trait.Pow.html#tymethod.pow\">Read more</a></div></details></div></details>","Pow<u8>","mw_app::prelude::tokio::net::unix::pid_t"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pow%3Cusize%3E-for-i32\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_traits/pow.rs.html#92\">source</a><a href=\"#impl-Pow%3Cusize%3E-for-i32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"mw_app/prelude/num/traits/trait.Pow.html\" title=\"trait mw_app::prelude::num::traits::Pow\">Pow</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"mw_app/prelude/num/traits/trait.Pow.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h4></section></summary><div class='docblock'>The result after applying the operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.pow\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/pow.rs.html#92\">source</a><a href=\"#method.pow\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"mw_app/prelude/num/traits/trait.Pow.html#tymethod.pow\" class=\"fn\">pow</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h4></section></summary><div class='docblock'>Returns <code>self</code> to the power <code>rhs</code>. <a href=\"mw_app/prelude/num/traits/trait.Pow.html#tymethod.pow\">Read more</a></div></details></div></details>","Pow<usize>","mw_app::prelude::tokio::net::unix::pid_t"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedDiv-for-i32\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_traits/ops/checked.rs.html#96\">source</a><a href=\"#impl-CheckedDiv-for-i32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"mw_app/prelude/num/trait.CheckedDiv.html\" title=\"trait mw_app::prelude::num::CheckedDiv\">CheckedDiv</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_div\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/ops/checked.rs.html#96\">source</a><a href=\"#method.checked_div\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"mw_app/prelude/num/trait.CheckedDiv.html#tymethod.checked_div\" class=\"fn\">checked_div</a>(&amp;self, v: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a>&gt;</h4></section></summary><div class='docblock'>Divides two numbers, checking for underflow, overflow and division by\nzero. If any of that happens, <code>None</code> is returned.</div></details></div></details>","CheckedDiv","mw_app::prelude::tokio::net::unix::pid_t"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Num-for-i32\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_traits/lib.rs.html#175\">source</a><a href=\"#impl-Num-for-i32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"mw_app/prelude/num/trait.Num.html\" title=\"trait mw_app::prelude::num::Num\">Num</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.FromStrRadixErr\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.FromStrRadixErr\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"mw_app/prelude/num/trait.Num.html#associatedtype.FromStrRadixErr\" class=\"associatedtype\">FromStrRadixErr</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/num/error/struct.ParseIntError.html\" title=\"struct core::num::error::ParseIntError\">ParseIntError</a></h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_str_radix\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/lib.rs.html#175\">source</a><a href=\"#method.from_str_radix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"mw_app/prelude/num/trait.Num.html#tymethod.from_str_radix\" class=\"fn\">from_str_radix</a>(s: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.str.html\">str</a>, radix: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/num/error/struct.ParseIntError.html\" title=\"struct core::num::error::ParseIntError\">ParseIntError</a>&gt;</h4></section></summary><div class='docblock'>Convert from a string and radix (typically <code>2..=36</code>). <a href=\"mw_app/prelude/num/trait.Num.html#tymethod.from_str_radix\">Read more</a></div></details></div></details>","Num","mw_app::prelude::tokio::net::unix::pid_t"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WrappingSub-for-i32\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_traits/ops/wrapping.rs.html#60\">source</a><a href=\"#impl-WrappingSub-for-i32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"mw_app/prelude/num/traits/trait.WrappingSub.html\" title=\"trait mw_app::prelude::num::traits::WrappingSub\">WrappingSub</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_sub\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/ops/wrapping.rs.html#60\">source</a><a href=\"#method.wrapping_sub\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"mw_app/prelude/num/traits/trait.WrappingSub.html#tymethod.wrapping_sub\" class=\"fn\">wrapping_sub</a>(&amp;self, v: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h4></section></summary><div class='docblock'>Wrapping (modular) subtraction. Computes <code>self - other</code>, wrapping around at the boundary\nof the type.</div></details></div></details>","WrappingSub","mw_app::prelude::tokio::net::unix::pid_t"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MulAddAssign-for-i32\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_traits/ops/mul_add.rs.html#100\">source</a><a href=\"#impl-MulAddAssign-for-i32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"mw_app/prelude/num/traits/trait.MulAddAssign.html\" title=\"trait mw_app::prelude::num::traits::MulAddAssign\">MulAddAssign</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul_add_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/ops/mul_add.rs.html#100\">source</a><a href=\"#method.mul_add_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"mw_app/prelude/num/traits/trait.MulAddAssign.html#tymethod.mul_add_assign\" class=\"fn\">mul_add_assign</a>(&amp;mut self, a: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a>, b: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a>)</h4></section></summary><div class='docblock'>Performs the fused multiply-add assignment operation <code>*self = (*self * a) + b</code></div></details></div></details>","MulAddAssign","mw_app::prelude::tokio::net::unix::pid_t"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SaturatingAdd-for-i32\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_traits/ops/saturating.rs.html#61\">source</a><a href=\"#impl-SaturatingAdd-for-i32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"mw_app/prelude/num/traits/trait.SaturatingAdd.html\" title=\"trait mw_app::prelude::num::traits::SaturatingAdd\">SaturatingAdd</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_add\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/ops/saturating.rs.html#61\">source</a><a href=\"#method.saturating_add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"mw_app/prelude/num/traits/trait.SaturatingAdd.html#tymethod.saturating_add\" class=\"fn\">saturating_add</a>(&amp;self, v: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h4></section></summary><div class='docblock'>Saturating addition. Computes <code>self + other</code>, saturating at the relevant high or low boundary of\nthe type.</div></details></div></details>","SaturatingAdd","mw_app::prelude::tokio::net::unix::pid_t"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsPrimitive%3Cusize%3E-for-i32\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#768\">source</a><a href=\"#impl-AsPrimitive%3Cusize%3E-for-i32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"mw_app/prelude/num/traits/trait.AsPrimitive.html\" title=\"trait mw_app::prelude::num::traits::AsPrimitive\">AsPrimitive</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#768\">source</a><a href=\"#method.as_\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"mw_app/prelude/num/traits/trait.AsPrimitive.html#tymethod.as_\" class=\"fn\">as_</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Convert a value to another, using the <code>as</code> operator.</div></details></div></details>","AsPrimitive<usize>","mw_app::prelude::tokio::net::unix::pid_t"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsPrimitive%3Cisize%3E-for-i32\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#768\">source</a><a href=\"#impl-AsPrimitive%3Cisize%3E-for-i32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"mw_app/prelude/num/traits/trait.AsPrimitive.html\" title=\"trait mw_app::prelude::num::traits::AsPrimitive\">AsPrimitive</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.isize.html\">isize</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#768\">source</a><a href=\"#method.as_\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"mw_app/prelude/num/traits/trait.AsPrimitive.html#tymethod.as_\" class=\"fn\">as_</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.isize.html\">isize</a></h4></section></summary><div class='docblock'>Convert a value to another, using the <code>as</code> operator.</div></details></div></details>","AsPrimitive<isize>","mw_app::prelude::tokio::net::unix::pid_t"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsPrimitive%3Cu64%3E-for-i32\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#768\">source</a><a href=\"#impl-AsPrimitive%3Cu64%3E-for-i32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"mw_app/prelude/num/traits/trait.AsPrimitive.html\" title=\"trait mw_app::prelude::num::traits::AsPrimitive\">AsPrimitive</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u64.html\">u64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#768\">source</a><a href=\"#method.as_\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"mw_app/prelude/num/traits/trait.AsPrimitive.html#tymethod.as_\" class=\"fn\">as_</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Convert a value to another, using the <code>as</code> operator.</div></details></div></details>","AsPrimitive<u64>","mw_app::prelude::tokio::net::unix::pid_t"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsPrimitive%3Ci16%3E-for-i32\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#768\">source</a><a href=\"#impl-AsPrimitive%3Ci16%3E-for-i32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"mw_app/prelude/num/traits/trait.AsPrimitive.html\" title=\"trait mw_app::prelude::num::traits::AsPrimitive\">AsPrimitive</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i16.html\">i16</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#768\">source</a><a href=\"#method.as_\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"mw_app/prelude/num/traits/trait.AsPrimitive.html#tymethod.as_\" class=\"fn\">as_</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i16.html\">i16</a></h4></section></summary><div class='docblock'>Convert a value to another, using the <code>as</code> operator.</div></details></div></details>","AsPrimitive<i16>","mw_app::prelude::tokio::net::unix::pid_t"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsPrimitive%3Cf32%3E-for-i32\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#768\">source</a><a href=\"#impl-AsPrimitive%3Cf32%3E-for-i32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"mw_app/prelude/num/traits/trait.AsPrimitive.html\" title=\"trait mw_app::prelude::num::traits::AsPrimitive\">AsPrimitive</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.f32.html\">f32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#768\">source</a><a href=\"#method.as_\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"mw_app/prelude/num/traits/trait.AsPrimitive.html#tymethod.as_\" class=\"fn\">as_</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.f32.html\">f32</a></h4></section></summary><div class='docblock'>Convert a value to another, using the <code>as</code> operator.</div></details></div></details>","AsPrimitive<f32>","mw_app::prelude::tokio::net::unix::pid_t"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsPrimitive%3Ci8%3E-for-i32\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#768\">source</a><a href=\"#impl-AsPrimitive%3Ci8%3E-for-i32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"mw_app/prelude/num/traits/trait.AsPrimitive.html\" title=\"trait mw_app::prelude::num::traits::AsPrimitive\">AsPrimitive</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i8.html\">i8</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#768\">source</a><a href=\"#method.as_\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"mw_app/prelude/num/traits/trait.AsPrimitive.html#tymethod.as_\" class=\"fn\">as_</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i8.html\">i8</a></h4></section></summary><div class='docblock'>Convert a value to another, using the <code>as</code> operator.</div></details></div></details>","AsPrimitive<i8>","mw_app::prelude::tokio::net::unix::pid_t"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsPrimitive%3Cu16%3E-for-i32\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#768\">source</a><a href=\"#impl-AsPrimitive%3Cu16%3E-for-i32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"mw_app/prelude/num/traits/trait.AsPrimitive.html\" title=\"trait mw_app::prelude::num::traits::AsPrimitive\">AsPrimitive</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u16.html\">u16</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#768\">source</a><a href=\"#method.as_\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"mw_app/prelude/num/traits/trait.AsPrimitive.html#tymethod.as_\" class=\"fn\">as_</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u16.html\">u16</a></h4></section></summary><div class='docblock'>Convert a value to another, using the <code>as</code> operator.</div></details></div></details>","AsPrimitive<u16>","mw_app::prelude::tokio::net::unix::pid_t"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsPrimitive%3Cu128%3E-for-i32\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#768\">source</a><a href=\"#impl-AsPrimitive%3Cu128%3E-for-i32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"mw_app/prelude/num/traits/trait.AsPrimitive.html\" title=\"trait mw_app::prelude::num::traits::AsPrimitive\">AsPrimitive</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u128.html\">u128</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#768\">source</a><a href=\"#method.as_\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"mw_app/prelude/num/traits/trait.AsPrimitive.html#tymethod.as_\" class=\"fn\">as_</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u128.html\">u128</a></h4></section></summary><div class='docblock'>Convert a value to another, using the <code>as</code> operator.</div></details></div></details>","AsPrimitive<u128>","mw_app::prelude::tokio::net::unix::pid_t"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsPrimitive%3Cu8%3E-for-i32\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#768\">source</a><a href=\"#impl-AsPrimitive%3Cu8%3E-for-i32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"mw_app/prelude/num/traits/trait.AsPrimitive.html\" title=\"trait mw_app::prelude::num::traits::AsPrimitive\">AsPrimitive</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#768\">source</a><a href=\"#method.as_\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"mw_app/prelude/num/traits/trait.AsPrimitive.html#tymethod.as_\" class=\"fn\">as_</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>Convert a value to another, using the <code>as</code> operator.</div></details></div></details>","AsPrimitive<u8>","mw_app::prelude::tokio::net::unix::pid_t"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsPrimitive%3Ci32%3E-for-i32\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#768\">source</a><a href=\"#impl-AsPrimitive%3Ci32%3E-for-i32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"mw_app/prelude/num/traits/trait.AsPrimitive.html\" title=\"trait mw_app::prelude::num::traits::AsPrimitive\">AsPrimitive</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#768\">source</a><a href=\"#method.as_\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"mw_app/prelude/num/traits/trait.AsPrimitive.html#tymethod.as_\" class=\"fn\">as_</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h4></section></summary><div class='docblock'>Convert a value to another, using the <code>as</code> operator.</div></details></div></details>","AsPrimitive<i32>","mw_app::prelude::tokio::net::unix::pid_t"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsPrimitive%3Ci64%3E-for-i32\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#768\">source</a><a href=\"#impl-AsPrimitive%3Ci64%3E-for-i32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"mw_app/prelude/num/traits/trait.AsPrimitive.html\" title=\"trait mw_app::prelude::num::traits::AsPrimitive\">AsPrimitive</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i64.html\">i64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#768\">source</a><a href=\"#method.as_\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"mw_app/prelude/num/traits/trait.AsPrimitive.html#tymethod.as_\" class=\"fn\">as_</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i64.html\">i64</a></h4></section></summary><div class='docblock'>Convert a value to another, using the <code>as</code> operator.</div></details></div></details>","AsPrimitive<i64>","mw_app::prelude::tokio::net::unix::pid_t"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsPrimitive%3Cf64%3E-for-i32\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#768\">source</a><a href=\"#impl-AsPrimitive%3Cf64%3E-for-i32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"mw_app/prelude/num/traits/trait.AsPrimitive.html\" title=\"trait mw_app::prelude::num::traits::AsPrimitive\">AsPrimitive</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.f64.html\">f64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#768\">source</a><a href=\"#method.as_\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"mw_app/prelude/num/traits/trait.AsPrimitive.html#tymethod.as_\" class=\"fn\">as_</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.f64.html\">f64</a></h4></section></summary><div class='docblock'>Convert a value to another, using the <code>as</code> operator.</div></details></div></details>","AsPrimitive<f64>","mw_app::prelude::tokio::net::unix::pid_t"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsPrimitive%3Cu32%3E-for-i32\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#768\">source</a><a href=\"#impl-AsPrimitive%3Cu32%3E-for-i32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"mw_app/prelude/num/traits/trait.AsPrimitive.html\" title=\"trait mw_app::prelude::num::traits::AsPrimitive\">AsPrimitive</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u32.html\">u32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#768\">source</a><a href=\"#method.as_\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"mw_app/prelude/num/traits/trait.AsPrimitive.html#tymethod.as_\" class=\"fn\">as_</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Convert a value to another, using the <code>as</code> operator.</div></details></div></details>","AsPrimitive<u32>","mw_app::prelude::tokio::net::unix::pid_t"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsPrimitive%3Ci128%3E-for-i32\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#768\">source</a><a href=\"#impl-AsPrimitive%3Ci128%3E-for-i32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"mw_app/prelude/num/traits/trait.AsPrimitive.html\" title=\"trait mw_app::prelude::num::traits::AsPrimitive\">AsPrimitive</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i128.html\">i128</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#768\">source</a><a href=\"#method.as_\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"mw_app/prelude/num/traits/trait.AsPrimitive.html#tymethod.as_\" class=\"fn\">as_</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i128.html\">i128</a></h4></section></summary><div class='docblock'>Convert a value to another, using the <code>as</code> operator.</div></details></div></details>","AsPrimitive<i128>","mw_app::prelude::tokio::net::unix::pid_t"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OverflowingMul-for-i32\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_traits/ops/overflowing.rs.html#74\">source</a><a href=\"#impl-OverflowingMul-for-i32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"mw_app/prelude/num_traits/ops/overflowing/trait.OverflowingMul.html\" title=\"trait mw_app::prelude::num_traits::ops::overflowing::OverflowingMul\">OverflowingMul</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_mul\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/ops/overflowing.rs.html#74\">source</a><a href=\"#method.overflowing_mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"mw_app/prelude/num_traits/ops/overflowing/trait.OverflowingMul.html#tymethod.overflowing_mul\" class=\"fn\">overflowing_mul</a>(&amp;self, v: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a>) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class='docblock'>Returns a tuple of the product along with a boolean indicating whether an arithmetic overflow would occur.\nIf an overflow would have occurred then the wrapped value is returned.</div></details></div></details>","OverflowingMul","mw_app::prelude::tokio::net::unix::pid_t"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedEuclid-for-i32\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_traits/ops/euclid.rs.html#250\">source</a><a href=\"#impl-CheckedEuclid-for-i32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"mw_app/prelude/num/traits/trait.CheckedEuclid.html\" title=\"trait mw_app::prelude::num::traits::CheckedEuclid\">CheckedEuclid</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_div_euclid\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/ops/euclid.rs.html#250\">source</a><a href=\"#method.checked_div_euclid\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"mw_app/prelude/num/traits/trait.CheckedEuclid.html#tymethod.checked_div_euclid\" class=\"fn\">checked_div_euclid</a>(&amp;self, v: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a>&gt;</h4></section></summary><div class='docblock'>Performs euclid division that returns <code>None</code> instead of panicking on division by zero\nand instead of wrapping around on underflow and overflow.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_rem_euclid\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/ops/euclid.rs.html#250\">source</a><a href=\"#method.checked_rem_euclid\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"mw_app/prelude/num/traits/trait.CheckedEuclid.html#tymethod.checked_rem_euclid\" class=\"fn\">checked_rem_euclid</a>(&amp;self, v: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a>&gt;</h4></section></summary><div class='docblock'>Finds the euclid remainder of dividing two numbers, checking for underflow, overflow and\ndivision by zero. If any of that happens, <code>None</code> is returned.</div></details></div></details>","CheckedEuclid","mw_app::prelude::tokio::net::unix::pid_t"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Euclid-for-i32\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_traits/ops/euclid.rs.html#119\">source</a><a href=\"#impl-Euclid-for-i32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"mw_app/prelude/num/traits/trait.Euclid.html\" title=\"trait mw_app::prelude::num::traits::Euclid\">Euclid</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.div_euclid\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/ops/euclid.rs.html#119\">source</a><a href=\"#method.div_euclid\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"mw_app/prelude/num/traits/trait.Euclid.html#tymethod.div_euclid\" class=\"fn\">div_euclid</a>(&amp;self, v: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h4></section></summary><div class='docblock'>Calculates Euclidean division, the matching method for <code>rem_euclid</code>. <a href=\"mw_app/prelude/num/traits/trait.Euclid.html#tymethod.div_euclid\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.rem_euclid\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/ops/euclid.rs.html#119\">source</a><a href=\"#method.rem_euclid\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"mw_app/prelude/num/traits/trait.Euclid.html#tymethod.rem_euclid\" class=\"fn\">rem_euclid</a>(&amp;self, v: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h4></section></summary><div class='docblock'>Calculates the least nonnegative remainder of <code>self (mod v)</code>. <a href=\"mw_app/prelude/num/traits/trait.Euclid.html#tymethod.rem_euclid\">Read more</a></div></details></div></details>","Euclid","mw_app::prelude::tokio::net::unix::pid_t"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedShl-for-i32\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_traits/ops/checked.rs.html#225\">source</a><a href=\"#impl-CheckedShl-for-i32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"mw_app/prelude/num/traits/trait.CheckedShl.html\" title=\"trait mw_app::prelude::num::traits::CheckedShl\">CheckedShl</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_shl\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/ops/checked.rs.html#225\">source</a><a href=\"#method.checked_shl\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"mw_app/prelude/num/traits/trait.CheckedShl.html#tymethod.checked_shl\" class=\"fn\">checked_shl</a>(&amp;self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a>&gt;</h4></section></summary><div class='docblock'>Checked shift left. Computes <code>self &lt;&lt; rhs</code>, returning <code>None</code>\nif <code>rhs</code> is larger than or equal to the number of bits in <code>self</code>. <a href=\"mw_app/prelude/num/traits/trait.CheckedShl.html#tymethod.checked_shl\">Read more</a></div></details></div></details>","CheckedShl","mw_app::prelude::tokio::net::unix::pid_t"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WrappingShr-for-i32\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_traits/ops/wrapping.rs.html#204\">source</a><a href=\"#impl-WrappingShr-for-i32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"mw_app/prelude/num/traits/trait.WrappingShr.html\" title=\"trait mw_app::prelude::num::traits::WrappingShr\">WrappingShr</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_shr\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/ops/wrapping.rs.html#204\">source</a><a href=\"#method.wrapping_shr\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"mw_app/prelude/num/traits/trait.WrappingShr.html#tymethod.wrapping_shr\" class=\"fn\">wrapping_shr</a>(&amp;self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h4></section></summary><div class='docblock'>Panic-free bitwise shift-right; yields <code>self &gt;&gt; mask(rhs)</code>,\nwhere <code>mask</code> removes any high order bits of <code>rhs</code> that would\ncause the shift to exceed the bitwidth of the type. <a href=\"mw_app/prelude/num/traits/trait.WrappingShr.html#tymethod.wrapping_shr\">Read more</a></div></details></div></details>","WrappingShr","mw_app::prelude::tokio::net::unix::pid_t"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedShr-for-i32\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_traits/ops/checked.rs.html#258\">source</a><a href=\"#impl-CheckedShr-for-i32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"mw_app/prelude/num/traits/trait.CheckedShr.html\" title=\"trait mw_app::prelude::num::traits::CheckedShr\">CheckedShr</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_shr\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/ops/checked.rs.html#258\">source</a><a href=\"#method.checked_shr\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"mw_app/prelude/num/traits/trait.CheckedShr.html#tymethod.checked_shr\" class=\"fn\">checked_shr</a>(&amp;self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a>&gt;</h4></section></summary><div class='docblock'>Checked shift right. Computes <code>self &gt;&gt; rhs</code>, returning <code>None</code>\nif <code>rhs</code> is larger than or equal to the number of bits in <code>self</code>. <a href=\"mw_app/prelude/num/traits/trait.CheckedShr.html#tymethod.checked_shr\">Read more</a></div></details></div></details>","CheckedShr","mw_app::prelude::tokio::net::unix::pid_t"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromPrimitive-for-i32\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#571\">source</a><a href=\"#impl-FromPrimitive-for-i32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"mw_app/prelude/trait.FromPrimitive.html\" title=\"trait mw_app::prelude::FromPrimitive\">FromPrimitive</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_isize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#571\">source</a><a href=\"#method.from_isize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"mw_app/prelude/trait.FromPrimitive.html#method.from_isize\" class=\"fn\">from_isize</a>(n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.isize.html\">isize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a>&gt;</h4></section></summary><div class='docblock'>Converts an <code>isize</code> to return an optional value of this type. If the\nvalue cannot be represented by this type, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_i8\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#571\">source</a><a href=\"#method.from_i8\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"mw_app/prelude/trait.FromPrimitive.html#method.from_i8\" class=\"fn\">from_i8</a>(n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i8.html\">i8</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a>&gt;</h4></section></summary><div class='docblock'>Converts an <code>i8</code> to return an optional value of this type. If the\nvalue cannot be represented by this type, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_i16\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#571\">source</a><a href=\"#method.from_i16\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"mw_app/prelude/trait.FromPrimitive.html#method.from_i16\" class=\"fn\">from_i16</a>(n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i16.html\">i16</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a>&gt;</h4></section></summary><div class='docblock'>Converts an <code>i16</code> to return an optional value of this type. If the\nvalue cannot be represented by this type, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_i32\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#571\">source</a><a href=\"#method.from_i32\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"mw_app/prelude/trait.FromPrimitive.html#method.from_i32\" class=\"fn\">from_i32</a>(n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a>&gt;</h4></section></summary><div class='docblock'>Converts an <code>i32</code> to return an optional value of this type. If the\nvalue cannot be represented by this type, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_i64\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#571\">source</a><a href=\"#method.from_i64\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"mw_app/prelude/trait.FromPrimitive.html#tymethod.from_i64\" class=\"fn\">from_i64</a>(n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i64.html\">i64</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a>&gt;</h4></section></summary><div class='docblock'>Converts an <code>i64</code> to return an optional value of this type. If the\nvalue cannot be represented by this type, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_i128\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#571\">source</a><a href=\"#method.from_i128\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"mw_app/prelude/trait.FromPrimitive.html#method.from_i128\" class=\"fn\">from_i128</a>(n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i128.html\">i128</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a>&gt;</h4></section></summary><div class='docblock'>Converts an <code>i128</code> to return an optional value of this type. If the\nvalue cannot be represented by this type, then <code>None</code> is returned. <a href=\"mw_app/prelude/trait.FromPrimitive.html#method.from_i128\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_usize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#571\">source</a><a href=\"#method.from_usize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"mw_app/prelude/trait.FromPrimitive.html#method.from_usize\" class=\"fn\">from_usize</a>(n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a>&gt;</h4></section></summary><div class='docblock'>Converts a <code>usize</code> to return an optional value of this type. If the\nvalue cannot be represented by this type, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_u8\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#571\">source</a><a href=\"#method.from_u8\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"mw_app/prelude/trait.FromPrimitive.html#method.from_u8\" class=\"fn\">from_u8</a>(n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a>&gt;</h4></section></summary><div class='docblock'>Converts an <code>u8</code> to return an optional value of this type. If the\nvalue cannot be represented by this type, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_u16\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#571\">source</a><a href=\"#method.from_u16\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"mw_app/prelude/trait.FromPrimitive.html#method.from_u16\" class=\"fn\">from_u16</a>(n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u16.html\">u16</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a>&gt;</h4></section></summary><div class='docblock'>Converts an <code>u16</code> to return an optional value of this type. If the\nvalue cannot be represented by this type, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_u32\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#571\">source</a><a href=\"#method.from_u32\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"mw_app/prelude/trait.FromPrimitive.html#method.from_u32\" class=\"fn\">from_u32</a>(n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a>&gt;</h4></section></summary><div class='docblock'>Converts an <code>u32</code> to return an optional value of this type. If the\nvalue cannot be represented by this type, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_u64\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#571\">source</a><a href=\"#method.from_u64\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"mw_app/prelude/trait.FromPrimitive.html#tymethod.from_u64\" class=\"fn\">from_u64</a>(n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a>&gt;</h4></section></summary><div class='docblock'>Converts an <code>u64</code> to return an optional value of this type. If the\nvalue cannot be represented by this type, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_u128\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#571\">source</a><a href=\"#method.from_u128\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"mw_app/prelude/trait.FromPrimitive.html#method.from_u128\" class=\"fn\">from_u128</a>(n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u128.html\">u128</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a>&gt;</h4></section></summary><div class='docblock'>Converts an <code>u128</code> to return an optional value of this type. If the\nvalue cannot be represented by this type, then <code>None</code> is returned. <a href=\"mw_app/prelude/trait.FromPrimitive.html#method.from_u128\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_f32\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#571\">source</a><a href=\"#method.from_f32\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"mw_app/prelude/trait.FromPrimitive.html#method.from_f32\" class=\"fn\">from_f32</a>(n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.f32.html\">f32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a>&gt;</h4></section></summary><div class='docblock'>Converts a <code>f32</code> to return an optional value of this type. If the\nvalue cannot be represented by this type, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_f64\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#571\">source</a><a href=\"#method.from_f64\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"mw_app/prelude/trait.FromPrimitive.html#method.from_f64\" class=\"fn\">from_f64</a>(n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.f64.html\">f64</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a>&gt;</h4></section></summary><div class='docblock'>Converts a <code>f64</code> to return an optional value of this type. If the\nvalue cannot be represented by this type, then <code>None</code> is returned. <a href=\"mw_app/prelude/trait.FromPrimitive.html#method.from_f64\">Read more</a></div></details></div></details>","FromPrimitive","mw_app::prelude::tokio::net::unix::pid_t"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedMul-for-i32\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_traits/ops/checked.rs.html#74\">source</a><a href=\"#impl-CheckedMul-for-i32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"mw_app/prelude/num/trait.CheckedMul.html\" title=\"trait mw_app::prelude::num::CheckedMul\">CheckedMul</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_mul\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/ops/checked.rs.html#74\">source</a><a href=\"#method.checked_mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"mw_app/prelude/num/trait.CheckedMul.html#tymethod.checked_mul\" class=\"fn\">checked_mul</a>(&amp;self, v: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a>&gt;</h4></section></summary><div class='docblock'>Multiplies two numbers, checking for underflow or overflow. If underflow\nor overflow happens, <code>None</code> is returned.</div></details></div></details>","CheckedMul","mw_app::prelude::tokio::net::unix::pid_t"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Bounded-for-i32\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_traits/bounds.rs.html#67\">source</a><a href=\"#impl-Bounded-for-i32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"mw_app/prelude/num/trait.Bounded.html\" title=\"trait mw_app::prelude::num::Bounded\">Bounded</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.min_value\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/bounds.rs.html#67\">source</a><a href=\"#method.min_value\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"mw_app/prelude/num/trait.Bounded.html#tymethod.min_value\" class=\"fn\">min_value</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h4></section></summary><div class='docblock'>Returns the smallest finite number this type can represent</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.max_value\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/bounds.rs.html#67\">source</a><a href=\"#method.max_value\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"mw_app/prelude/num/trait.Bounded.html#tymethod.max_value\" class=\"fn\">max_value</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h4></section></summary><div class='docblock'>Returns the largest finite number this type can represent</div></details></div></details>","Bounded","mw_app::prelude::tokio::net::unix::pid_t"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WrappingAdd-for-i32\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_traits/ops/wrapping.rs.html#39\">source</a><a href=\"#impl-WrappingAdd-for-i32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"mw_app/prelude/num/traits/trait.WrappingAdd.html\" title=\"trait mw_app::prelude::num::traits::WrappingAdd\">WrappingAdd</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_add\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/ops/wrapping.rs.html#39\">source</a><a href=\"#method.wrapping_add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"mw_app/prelude/num/traits/trait.WrappingAdd.html#tymethod.wrapping_add\" class=\"fn\">wrapping_add</a>(&amp;self, v: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h4></section></summary><div class='docblock'>Wrapping (modular) addition. Computes <code>self + other</code>, wrapping around at the boundary of\nthe type.</div></details></div></details>","WrappingAdd","mw_app::prelude::tokio::net::unix::pid_t"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MulAdd-for-i32\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_traits/ops/mul_add.rs.html#70\">source</a><a href=\"#impl-MulAdd-for-i32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"mw_app/prelude/num/traits/trait.MulAdd.html\" title=\"trait mw_app::prelude::num::traits::MulAdd\">MulAdd</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"mw_app/prelude/num/traits/trait.MulAdd.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h4></section></summary><div class='docblock'>The resulting type after applying the fused multiply-add.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul_add\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/ops/mul_add.rs.html#70\">source</a><a href=\"#method.mul_add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"mw_app/prelude/num/traits/trait.MulAdd.html#tymethod.mul_add\" class=\"fn\">mul_add</a>(self, a: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a>, b: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a>) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a> as <a class=\"trait\" href=\"mw_app/prelude/num/traits/trait.MulAdd.html\" title=\"trait mw_app::prelude::num::traits::MulAdd\">MulAdd</a>&gt;::<a class=\"associatedtype\" href=\"mw_app/prelude/num/traits/trait.MulAdd.html#associatedtype.Output\" title=\"type mw_app::prelude::num::traits::MulAdd::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the fused multiply-add operation <code>(self * a) + b</code></div></details></div></details>","MulAdd","mw_app::prelude::tokio::net::unix::pid_t"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromBytes-for-i32\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_traits/ops/bytes.rs.html#333\">source</a><a href=\"#impl-FromBytes-for-i32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"mw_app/prelude/num/traits/trait.FromBytes.html\" title=\"trait mw_app::prelude::num::traits::FromBytes\">FromBytes</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Bytes\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"mw_app/prelude/num/traits/trait.FromBytes.html#associatedtype.Bytes\" class=\"associatedtype\">Bytes</a> = [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">4</a>]</h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_be_bytes\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/ops/bytes.rs.html#333\">source</a><a href=\"#method.from_be_bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"mw_app/prelude/num/traits/trait.FromBytes.html#tymethod.from_be_bytes\" class=\"fn\">from_be_bytes</a>(bytes: &amp;&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a> as <a class=\"trait\" href=\"mw_app/prelude/num/traits/trait.FromBytes.html\" title=\"trait mw_app::prelude::num::traits::FromBytes\">FromBytes</a>&gt;::<a class=\"associatedtype\" href=\"mw_app/prelude/num/traits/trait.FromBytes.html#associatedtype.Bytes\" title=\"type mw_app::prelude::num::traits::FromBytes::Bytes\">Bytes</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h4></section></summary><div class='docblock'>Create a number from its representation as a byte array in big endian. <a href=\"mw_app/prelude/num/traits/trait.FromBytes.html#tymethod.from_be_bytes\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_le_bytes\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/ops/bytes.rs.html#333\">source</a><a href=\"#method.from_le_bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"mw_app/prelude/num/traits/trait.FromBytes.html#tymethod.from_le_bytes\" class=\"fn\">from_le_bytes</a>(bytes: &amp;&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a> as <a class=\"trait\" href=\"mw_app/prelude/num/traits/trait.FromBytes.html\" title=\"trait mw_app::prelude::num::traits::FromBytes\">FromBytes</a>&gt;::<a class=\"associatedtype\" href=\"mw_app/prelude/num/traits/trait.FromBytes.html#associatedtype.Bytes\" title=\"type mw_app::prelude::num::traits::FromBytes::Bytes\">Bytes</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h4></section></summary><div class='docblock'>Create a number from its representation as a byte array in little endian. <a href=\"mw_app/prelude/num/traits/trait.FromBytes.html#tymethod.from_le_bytes\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_ne_bytes\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/ops/bytes.rs.html#333\">source</a><a href=\"#method.from_ne_bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"mw_app/prelude/num/traits/trait.FromBytes.html#method.from_ne_bytes\" class=\"fn\">from_ne_bytes</a>(bytes: &amp;&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a> as <a class=\"trait\" href=\"mw_app/prelude/num/traits/trait.FromBytes.html\" title=\"trait mw_app::prelude::num::traits::FromBytes\">FromBytes</a>&gt;::<a class=\"associatedtype\" href=\"mw_app/prelude/num/traits/trait.FromBytes.html#associatedtype.Bytes\" title=\"type mw_app::prelude::num::traits::FromBytes::Bytes\">Bytes</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h4></section></summary><div class='docblock'>Create a number from its memory representation as a byte array in native endianness. <a href=\"mw_app/prelude/num/traits/trait.FromBytes.html#method.from_ne_bytes\">Read more</a></div></details></div></details>","FromBytes","mw_app::prelude::tokio::net::unix::pid_t"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SaturatingMul-for-i32\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_traits/ops/saturating.rs.html#103\">source</a><a href=\"#impl-SaturatingMul-for-i32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"mw_app/prelude/num/traits/trait.SaturatingMul.html\" title=\"trait mw_app::prelude::num::traits::SaturatingMul\">SaturatingMul</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_mul\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/ops/saturating.rs.html#103\">source</a><a href=\"#method.saturating_mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"mw_app/prelude/num/traits/trait.SaturatingMul.html#tymethod.saturating_mul\" class=\"fn\">saturating_mul</a>(&amp;self, v: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h4></section></summary><div class='docblock'>Saturating multiplication. Computes <code>self * other</code>, saturating at the relevant high or low boundary of\nthe type.</div></details></div></details>","SaturatingMul","mw_app::prelude::tokio::net::unix::pid_t"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Saturating-for-i32\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_traits/ops/saturating.rs.html#31\">source</a><a href=\"#impl-Saturating-for-i32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"mw_app/prelude/num/trait.Saturating.html\" title=\"trait mw_app::prelude::num::Saturating\">Saturating</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_add\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/ops/saturating.rs.html#31\">source</a><a href=\"#method.saturating_add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"mw_app/prelude/num/trait.Saturating.html#tymethod.saturating_add\" class=\"fn\">saturating_add</a>(self, v: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h4></section></summary><div class='docblock'>Saturating addition operator.\nReturns a+b, saturating at the numeric bounds instead of overflowing.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_sub\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/ops/saturating.rs.html#31\">source</a><a href=\"#method.saturating_sub\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"mw_app/prelude/num/trait.Saturating.html#tymethod.saturating_sub\" class=\"fn\">saturating_sub</a>(self, v: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h4></section></summary><div class='docblock'>Saturating subtraction operator.\nReturns a-b, saturating at the numeric bounds instead of overflowing.</div></details></div></details>","Saturating","mw_app::prelude::tokio::net::unix::pid_t"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ToBigInt-for-i32\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_bigint/bigint/convert.rs.html#356\">source</a><a href=\"#impl-ToBigInt-for-i32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"mw_app/prelude/num/bigint/trait.ToBigInt.html\" title=\"trait mw_app::prelude::num::bigint::ToBigInt\">ToBigInt</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_bigint\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_bigint/bigint/convert.rs.html#356\">source</a><a href=\"#method.to_bigint\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"mw_app/prelude/num/bigint/trait.ToBigInt.html#tymethod.to_bigint\" class=\"fn\">to_bigint</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"mw_app/prelude/num/struct.BigInt.html\" title=\"struct mw_app::prelude::num::BigInt\">BigInt</a>&gt;</h4></section></summary><div class='docblock'>Converts the value of <code>self</code> to a <a href=\"mw_app/prelude/num/struct.BigInt.html\" title=\"struct mw_app::prelude::num::BigInt\"><code>BigInt</code></a>.</div></details></div></details>","ToBigInt","mw_app::prelude::tokio::net::unix::pid_t"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ToBigUint-for-i32\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_bigint/biguint/convert.rs.html#582\">source</a><a href=\"#impl-ToBigUint-for-i32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"mw_app/prelude/num/bigint/trait.ToBigUint.html\" title=\"trait mw_app::prelude::num::bigint::ToBigUint\">ToBigUint</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_biguint\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_bigint/biguint/convert.rs.html#582\">source</a><a href=\"#method.to_biguint\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"mw_app/prelude/num/bigint/trait.ToBigUint.html#tymethod.to_biguint\" class=\"fn\">to_biguint</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"mw_app/prelude/num/struct.BigUint.html\" title=\"struct mw_app::prelude::num::BigUint\">BigUint</a>&gt;</h4></section></summary><div class='docblock'>Converts the value of <code>self</code> to a <a href=\"mw_app/prelude/num/struct.BigUint.html\" title=\"struct mw_app::prelude::num::BigUint\"><code>BigUint</code></a>.</div></details></div></details>","ToBigUint","mw_app::prelude::tokio::net::unix::pid_t"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Integer-for-i32\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_integer/lib.rs.html#827\">source</a><a href=\"#impl-Integer-for-i32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"mw_app/prelude/num/trait.Integer.html\" title=\"trait mw_app::prelude::num::Integer\">Integer</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.div_floor\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_integer/lib.rs.html#827\">source</a><a href=\"#method.div_floor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"mw_app/prelude/num/trait.Integer.html#tymethod.div_floor\" class=\"fn\">div_floor</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h4></section></summary><div class=\"docblock\"><p>Floored integer division</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mod_floor\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_integer/lib.rs.html#827\">source</a><a href=\"#method.mod_floor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"mw_app/prelude/num/trait.Integer.html#tymethod.mod_floor\" class=\"fn\">mod_floor</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h4></section></summary><div class=\"docblock\"><p>Floored integer modulo</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.div_mod_floor\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_integer/lib.rs.html#827\">source</a><a href=\"#method.div_mod_floor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"mw_app/prelude/num/trait.Integer.html#method.div_mod_floor\" class=\"fn\">div_mod_floor</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a>) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a>)</h4></section></summary><div class=\"docblock\"><p>Calculates <code>div_floor</code> and <code>mod_floor</code> simultaneously</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gcd\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_integer/lib.rs.html#827\">source</a><a href=\"#method.gcd\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"mw_app/prelude/num/trait.Integer.html#tymethod.gcd\" class=\"fn\">gcd</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h4></section></summary><div class=\"docblock\"><p>Calculates the Greatest Common Divisor (GCD) of the number and\n<code>other</code>. The result is always non-negative.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lcm\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_integer/lib.rs.html#827\">source</a><a href=\"#method.lcm\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"mw_app/prelude/num/trait.Integer.html#tymethod.lcm\" class=\"fn\">lcm</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h4></section></summary><div class=\"docblock\"><p>Calculates the Lowest Common Multiple (LCM) of the number and\n<code>other</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gcd_lcm\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_integer/lib.rs.html#827\">source</a><a href=\"#method.gcd_lcm\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"mw_app/prelude/num/trait.Integer.html#method.gcd_lcm\" class=\"fn\">gcd_lcm</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a>) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a>)</h4></section></summary><div class=\"docblock\"><p>Calculates the Greatest Common Divisor (GCD) and\nLowest Common Multiple (LCM) of the number and <code>other</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.divides\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_integer/lib.rs.html#827\">source</a><a href=\"#method.divides\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"mw_app/prelude/num/trait.Integer.html#tymethod.divides\" class=\"fn\">divides</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Deprecated, use <code>is_multiple_of</code> instead.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_multiple_of\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_integer/lib.rs.html#827\">source</a><a href=\"#method.is_multiple_of\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"mw_app/prelude/num/trait.Integer.html#tymethod.is_multiple_of\" class=\"fn\">is_multiple_of</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns <code>true</code> if the number is a multiple of <code>other</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_even\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_integer/lib.rs.html#827\">source</a><a href=\"#method.is_even\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"mw_app/prelude/num/trait.Integer.html#tymethod.is_even\" class=\"fn\">is_even</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns <code>true</code> if the number is divisible by <code>2</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_odd\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_integer/lib.rs.html#827\">source</a><a href=\"#method.is_odd\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"mw_app/prelude/num/trait.Integer.html#tymethod.is_odd\" class=\"fn\">is_odd</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns <code>true</code> if the number is not divisible by <code>2</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.div_rem\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_integer/lib.rs.html#827\">source</a><a href=\"#method.div_rem\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"mw_app/prelude/num/trait.Integer.html#tymethod.div_rem\" class=\"fn\">div_rem</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a>) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a>)</h4></section></summary><div class=\"docblock\"><p>Simultaneous truncated integer division and modulus.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.next_multiple_of\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_integer/lib.rs.html#827\">source</a><a href=\"#method.next_multiple_of\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"mw_app/prelude/num/trait.Integer.html#method.next_multiple_of\" class=\"fn\">next_multiple_of</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h4></section></summary><div class=\"docblock\"><p>Rounds up to nearest multiple of argument.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.prev_multiple_of\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_integer/lib.rs.html#827\">source</a><a href=\"#method.prev_multiple_of\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"mw_app/prelude/num/trait.Integer.html#method.prev_multiple_of\" class=\"fn\">prev_multiple_of</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h4></section></summary><div class=\"docblock\"><p>Rounds down to nearest multiple of argument.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.div_ceil\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_integer/lib.rs.html#827\">source</a><a href=\"#method.div_ceil\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"mw_app/prelude/num/trait.Integer.html#method.div_ceil\" class=\"fn\">div_ceil</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h4></section></summary><div class='docblock'>Ceiled integer division. <a href=\"mw_app/prelude/num/trait.Integer.html#method.div_ceil\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.extended_gcd_lcm\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_integer/lib.rs.html#827\">source</a><a href=\"#method.extended_gcd_lcm\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"mw_app/prelude/num/trait.Integer.html#method.extended_gcd_lcm\" class=\"fn\">extended_gcd_lcm</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a>) -&gt; (<a class=\"struct\" href=\"mw_app/prelude/num/integer/struct.ExtendedGcd.html\" title=\"struct mw_app::prelude::num::integer::ExtendedGcd\">ExtendedGcd</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a>&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a>)</h4></section></summary><div class='docblock'>Greatest common divisor, least common multiple, and Bézout coefficients.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.extended_gcd\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_integer/lib.rs.html#165-167\">source</a><a href=\"#method.extended_gcd\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"mw_app/prelude/num/trait.Integer.html#method.extended_gcd\" class=\"fn\">extended_gcd</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;Self</a>) -&gt; <a class=\"struct\" href=\"mw_app/prelude/num/integer/struct.ExtendedGcd.html\" title=\"struct mw_app::prelude::num::integer::ExtendedGcd\">ExtendedGcd</a>&lt;Self&gt;<span class=\"where fmt-newline\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</span></h4></section></summary><div class='docblock'>Greatest common divisor and Bézout coefficients. <a href=\"mw_app/prelude/num/trait.Integer.html#method.extended_gcd\">Read more</a></div></details></div></details>","Integer","mw_app::prelude::tokio::net::unix::pid_t"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Roots-for-i32\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_integer/roots.rs.html#167\">source</a><a href=\"#impl-Roots-for-i32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"mw_app/prelude/num/integer/trait.Roots.html\" title=\"trait mw_app::prelude::num::integer::Roots\">Roots</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.nth_root\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_integer/roots.rs.html#167\">source</a><a href=\"#method.nth_root\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"mw_app/prelude/num/integer/trait.Roots.html#tymethod.nth_root\" class=\"fn\">nth_root</a>(&amp;self, n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h4></section></summary><div class='docblock'>Returns the truncated principal <code>n</code>th root of an integer\n– <code>if x &gt;= 0 { ⌊ⁿ√x⌋ } else { ⌈ⁿ√x⌉ }</code> <a href=\"mw_app/prelude/num/integer/trait.Roots.html#tymethod.nth_root\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sqrt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_integer/roots.rs.html#167\">source</a><a href=\"#method.sqrt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"mw_app/prelude/num/integer/trait.Roots.html#method.sqrt\" class=\"fn\">sqrt</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h4></section></summary><div class='docblock'>Returns the truncated principal square root of an integer – <code>⌊√x⌋</code> <a href=\"mw_app/prelude/num/integer/trait.Roots.html#method.sqrt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.cbrt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_integer/roots.rs.html#167\">source</a><a href=\"#method.cbrt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"mw_app/prelude/num/integer/trait.Roots.html#method.cbrt\" class=\"fn\">cbrt</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h4></section></summary><div class='docblock'>Returns the truncated principal cube root of an integer –\n<code>if x &gt;= 0 { ⌊∛x⌋ } else { ⌈∛x⌉ }</code> <a href=\"mw_app/prelude/num/integer/trait.Roots.html#method.cbrt\">Read more</a></div></details></div></details>","Roots","mw_app::prelude::tokio::net::unix::pid_t"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SampleUniform-for-i32\" class=\"impl\"><a class=\"src rightside\" href=\"src/rand/distributions/uniform.rs.html#561\">source</a><a href=\"#impl-SampleUniform-for-i32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"mw_app/prelude/rand/distributions/uniform/trait.SampleUniform.html\" title=\"trait mw_app::prelude::rand::distributions::uniform::SampleUniform\">SampleUniform</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Sampler\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Sampler\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"mw_app/prelude/rand/distributions/uniform/trait.SampleUniform.html#associatedtype.Sampler\" class=\"associatedtype\">Sampler</a> = <a class=\"struct\" href=\"mw_app/prelude/rand/distributions/uniform/struct.UniformInt.html\" title=\"struct mw_app::prelude::rand::distributions::uniform::UniformInt\">UniformInt</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a>&gt;</h4></section></summary><div class='docblock'>The <code>UniformSampler</code> implementation supporting type <code>X</code>.</div></details></div></details>","SampleUniform","mw_app::prelude::tokio::net::unix::pid_t"],["<section id=\"impl-Weight-for-i32\" class=\"impl\"><a class=\"src rightside\" href=\"src/rand/distributions/weighted.rs.html#45\">source</a><a href=\"#impl-Weight-for-i32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"mw_app/prelude/rand/distributions/weighted/alias_method/trait.Weight.html\" title=\"trait mw_app::prelude::rand::distributions::weighted::alias_method::Weight\">Weight</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a></h3></section>","Weight","mw_app::prelude::tokio::net::unix::pid_t"]],
"serde":[],
"tokio":[],
"wayland_client":[],
"wayland_sys":[],
"winit":[],
"x11_dl":[]
};if (window.register_type_impls) {window.register_type_impls(type_impls);} else {window.pending_type_impls = type_impls;}})()